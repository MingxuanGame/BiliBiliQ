# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bilibiliq.internal.pb.bilibili.account.fission.v1 import (
    fission_pb2 as bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2,
)


class FissionStub(object):
    """Fission裂变"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Entrance = channel.unary_unary(
            '/bilibili.account.fission.v1.Fission/Entrance',
            request_serializer=bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.EntranceReq.SerializeToString,
            response_deserializer=bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.EntranceReply.FromString,
        )
        self.Window = channel.unary_unary(
            '/bilibili.account.fission.v1.Fission/Window',
            request_serializer=bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.WindowReq.SerializeToString,
            response_deserializer=bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.WindowReply.FromString,
        )
        self.Privacy = channel.unary_unary(
            '/bilibili.account.fission.v1.Fission/Privacy',
            request_serializer=bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.PrivacyReq.SerializeToString,
            response_deserializer=bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.PrivacyReply.FromString,
        )


class FissionServicer(object):
    """Fission裂变"""

    def Entrance(self, request, context):
        """活动入口"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Window(self, request, context):
        """首页弹窗"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Privacy(self, request, context):
        """ """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FissionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Entrance': grpc.unary_unary_rpc_method_handler(
            servicer.Entrance,
            request_deserializer=bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.EntranceReq.FromString,
            response_serializer=bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.EntranceReply.SerializeToString,
        ),
        'Window': grpc.unary_unary_rpc_method_handler(
            servicer.Window,
            request_deserializer=bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.WindowReq.FromString,
            response_serializer=bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.WindowReply.SerializeToString,
        ),
        'Privacy': grpc.unary_unary_rpc_method_handler(
            servicer.Privacy,
            request_deserializer=bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.PrivacyReq.FromString,
            response_serializer=bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.PrivacyReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'bilibili.account.fission.v1.Fission', rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Fission(object):
    """Fission裂变"""

    @staticmethod
    def Entrance(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bilibili.account.fission.v1.Fission/Entrance',
            bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.EntranceReq.SerializeToString,
            bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.EntranceReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Window(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bilibili.account.fission.v1.Fission/Window',
            bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.WindowReq.SerializeToString,
            bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.WindowReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Privacy(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bilibili.account.fission.v1.Fission/Privacy',
            bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.PrivacyReq.SerializeToString,
            bilibili_dot_account_dot_fission_dot_v1_dot_fission__pb2.PrivacyReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
