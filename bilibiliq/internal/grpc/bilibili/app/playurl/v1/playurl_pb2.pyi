"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Business:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _BusinessEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _Business.ValueType
    ],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN: _Business.ValueType  # 0
    """未知类型"""
    STORY: _Business.ValueType  # 1
    """story业务"""

class Business(_Business, metaclass=_BusinessEnumTypeWrapper):
    """业务类型"""

UNKNOWN: Business.ValueType  # 0
"""未知类型"""
STORY: Business.ValueType  # 1
"""story业务"""
global___Business = Business

class _CodeType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CodeTypeEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _CodeType.ValueType
    ],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NOCODE: _CodeType.ValueType  # 0
    """默认"""
    CODE264: _CodeType.ValueType  # 1
    """H.264"""
    CODE265: _CodeType.ValueType  # 2
    """H.265"""
    CODEAV1: _CodeType.ValueType  # 3
    """av1"""

class CodeType(_CodeType, metaclass=_CodeTypeEnumTypeWrapper):
    """编码类型"""

NOCODE: CodeType.ValueType  # 0
"""默认"""
CODE264: CodeType.ValueType  # 1
"""H.264"""
CODE265: CodeType.ValueType  # 2
"""H.265"""
CODEAV1: CodeType.ValueType  # 3
"""av1"""
global___CodeType = CodeType

class _ConfType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ConfTypeEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _ConfType.ValueType
    ],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NoType: _ConfType.ValueType  # 0
    """"""
    FLIPCONF: _ConfType.ValueType  # 1
    """镜像反转"""
    CASTCONF: _ConfType.ValueType  # 2
    """视频投屏"""
    FEEDBACK: _ConfType.ValueType  # 3
    """反馈"""
    SUBTITLE: _ConfType.ValueType  # 4
    """字幕"""
    PLAYBACKRATE: _ConfType.ValueType  # 5
    """播放速度"""
    TIMEUP: _ConfType.ValueType  # 6
    """定时停止播放"""
    PLAYBACKMODE: _ConfType.ValueType  # 7
    """播放方式"""
    SCALEMODE: _ConfType.ValueType  # 8
    """画面尺寸"""
    BACKGROUNDPLAY: _ConfType.ValueType  # 9
    """后台播放"""
    LIKE: _ConfType.ValueType  # 10
    """顶"""
    DISLIKE: _ConfType.ValueType  # 11
    """踩"""
    COIN: _ConfType.ValueType  # 12
    """投币"""
    ELEC: _ConfType.ValueType  # 13
    """充电"""
    SHARE: _ConfType.ValueType  # 14
    """分享"""
    SCREENSHOT: _ConfType.ValueType  # 15
    """截图"""
    LOCKSCREEN: _ConfType.ValueType  # 16
    """锁屏"""
    RECOMMEND: _ConfType.ValueType  # 17
    """推荐"""
    PLAYBACKSPEED: _ConfType.ValueType  # 18
    """倍速"""
    DEFINITION: _ConfType.ValueType  # 19
    """清晰度"""
    SELECTIONS: _ConfType.ValueType  # 20
    """选集"""
    NEXT: _ConfType.ValueType  # 21
    """下一集"""
    EDITDM: _ConfType.ValueType  # 22
    """编辑弹幕"""
    SMALLWINDOW: _ConfType.ValueType  # 23
    """小窗"""
    SHAKE: _ConfType.ValueType  # 24
    """播放震动"""
    OUTERDM: _ConfType.ValueType  # 25
    """外层面板弹幕设置"""
    INNERDM: _ConfType.ValueType  # 26
    """三点内弹幕设置"""
    PANORAMA: _ConfType.ValueType  # 27
    """全景"""
    DOLBY: _ConfType.ValueType  # 28
    """杜比"""
    COLORFILTER: _ConfType.ValueType  # 29
    """颜色滤镜"""

class ConfType(_ConfType, metaclass=_ConfTypeEnumTypeWrapper):
    """设置类型"""

NoType: ConfType.ValueType  # 0
""""""
FLIPCONF: ConfType.ValueType  # 1
"""镜像反转"""
CASTCONF: ConfType.ValueType  # 2
"""视频投屏"""
FEEDBACK: ConfType.ValueType  # 3
"""反馈"""
SUBTITLE: ConfType.ValueType  # 4
"""字幕"""
PLAYBACKRATE: ConfType.ValueType  # 5
"""播放速度"""
TIMEUP: ConfType.ValueType  # 6
"""定时停止播放"""
PLAYBACKMODE: ConfType.ValueType  # 7
"""播放方式"""
SCALEMODE: ConfType.ValueType  # 8
"""画面尺寸"""
BACKGROUNDPLAY: ConfType.ValueType  # 9
"""后台播放"""
LIKE: ConfType.ValueType  # 10
"""顶"""
DISLIKE: ConfType.ValueType  # 11
"""踩"""
COIN: ConfType.ValueType  # 12
"""投币"""
ELEC: ConfType.ValueType  # 13
"""充电"""
SHARE: ConfType.ValueType  # 14
"""分享"""
SCREENSHOT: ConfType.ValueType  # 15
"""截图"""
LOCKSCREEN: ConfType.ValueType  # 16
"""锁屏"""
RECOMMEND: ConfType.ValueType  # 17
"""推荐"""
PLAYBACKSPEED: ConfType.ValueType  # 18
"""倍速"""
DEFINITION: ConfType.ValueType  # 19
"""清晰度"""
SELECTIONS: ConfType.ValueType  # 20
"""选集"""
NEXT: ConfType.ValueType  # 21
"""下一集"""
EDITDM: ConfType.ValueType  # 22
"""编辑弹幕"""
SMALLWINDOW: ConfType.ValueType  # 23
"""小窗"""
SHAKE: ConfType.ValueType  # 24
"""播放震动"""
OUTERDM: ConfType.ValueType  # 25
"""外层面板弹幕设置"""
INNERDM: ConfType.ValueType  # 26
"""三点内弹幕设置"""
PANORAMA: ConfType.ValueType  # 27
"""全景"""
DOLBY: ConfType.ValueType  # 28
"""杜比"""
COLORFILTER: ConfType.ValueType  # 29
"""颜色滤镜"""
global___ConfType = ConfType

class _Group:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _GroupEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _Group.ValueType
    ],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UnknownGroup: _Group.ValueType  # 0
    """"""
    A: _Group.ValueType  # 1
    """"""
    B: _Group.ValueType  # 2
    """"""
    C: _Group.ValueType  # 3
    """"""

class Group(_Group, metaclass=_GroupEnumTypeWrapper):
    """"""

UnknownGroup: Group.ValueType  # 0
""""""
A: Group.ValueType  # 1
""""""
B: Group.ValueType  # 2
""""""
C: Group.ValueType  # 3
""""""
global___Group = Group

class _PlayErr:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PlayErrEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _PlayErr.ValueType
    ],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NoErr: _PlayErr.ValueType  # 0
    """"""
    WithMultiDeviceLoginErr: _PlayErr.ValueType  # 1
    """管控类型的错误码"""

class PlayErr(_PlayErr, metaclass=_PlayErrEnumTypeWrapper):
    """错误码"""

NoErr: PlayErr.ValueType  # 0
""""""
WithMultiDeviceLoginErr: PlayErr.ValueType  # 1
"""管控类型的错误码"""
global___PlayErr = PlayErr

class _PlayLimitCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PlayLimitCodeEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _PlayLimitCode.ValueType
    ],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PLCUnkown: _PlayLimitCode.ValueType  # 0
    """"""
    PLCUgcNotPayed: _PlayLimitCode.ValueType  # 1
    """"""

class PlayLimitCode(_PlayLimitCode, metaclass=_PlayLimitCodeEnumTypeWrapper):
    """"""

PLCUnkown: PlayLimitCode.ValueType  # 0
""""""
PLCUgcNotPayed: PlayLimitCode.ValueType  # 1
""""""
global___PlayLimitCode = PlayLimitCode

class _VideoType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _VideoTypeEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _VideoType.ValueType
    ],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    Unknown_VALUE: _VideoType.ValueType  # 0
    """"""
    FLV_VALUE: _VideoType.ValueType  # 1
    """flv格式"""
    DASH_VALUE: _VideoType.ValueType  # 2
    """dash格式"""
    MP4_VALUE: _VideoType.ValueType  # 3
    """mp4格式"""

class VideoType(_VideoType, metaclass=_VideoTypeEnumTypeWrapper):
    """视频类型"""

Unknown_VALUE: VideoType.ValueType  # 0
""""""
FLV_VALUE: VideoType.ValueType  # 1
"""flv格式"""
DASH_VALUE: VideoType.ValueType  # 2
"""dash格式"""
MP4_VALUE: VideoType.ValueType  # 3
"""mp4格式"""
global___VideoType = VideoType

@typing_extensions.final
class AB(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GLANCE_FIELD_NUMBER: builtins.int
    GROUP_FIELD_NUMBER: builtins.int
    @property
    def glance(self) -> global___Glance:
        """"""
    group: builtins.int
    """"""
    def __init__(
        self,
        *,
        glance: global___Glance | None = ...,
        group: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["glance", b"glance"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "glance", b"glance", "group", b"group"
        ],
    ) -> None: ...

global___AB = AB

@typing_extensions.final
class ArcConf(google.protobuf.message.Message):
    """配置项"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IS_SUPPORT_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    EXTRA_CONTENT_FIELD_NUMBER: builtins.int
    is_support: builtins.bool
    """是否支持"""
    disabled: builtins.bool
    """"""
    @property
    def extra_content(self) -> global___ExtraContent:
        """"""
    def __init__(
        self,
        *,
        is_support: builtins.bool = ...,
        disabled: builtins.bool = ...,
        extra_content: global___ExtraContent | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "extra_content", b"extra_content"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "disabled",
            b"disabled",
            "extra_content",
            b"extra_content",
            "is_support",
            b"is_support",
        ],
    ) -> None: ...

global___ArcConf = ArcConf

@typing_extensions.final
class Chronos(google.protobuf.message.Message):
    """Chronos灰度管理"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MD5_FIELD_NUMBER: builtins.int
    FILE_FIELD_NUMBER: builtins.int
    md5: builtins.str
    """资源md5"""
    file: builtins.str
    """资源文件"""
    def __init__(
        self,
        *,
        md5: builtins.str = ...,
        file: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal["file", b"file", "md5", b"md5"],
    ) -> None: ...

global___Chronos = Chronos

@typing_extensions.final
class ButtonStyle(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT_FIELD_NUMBER: builtins.int
    TEXT_COLOR_FIELD_NUMBER: builtins.int
    BG_COLOR_FIELD_NUMBER: builtins.int
    JUMP_LINK_FIELD_NUMBER: builtins.int
    text: builtins.str
    """"""
    text_color: builtins.str
    """"""
    bg_color: builtins.str
    """"""
    jump_link: builtins.str
    """"""
    def __init__(
        self,
        *,
        text: builtins.str = ...,
        text_color: builtins.str = ...,
        bg_color: builtins.str = ...,
        jump_link: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "bg_color",
            b"bg_color",
            "jump_link",
            b"jump_link",
            "text",
            b"text",
            "text_color",
            b"text_color",
        ],
    ) -> None: ...

global___ButtonStyle = ButtonStyle

@typing_extensions.final
class CloudConf(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHOW_FIELD_NUMBER: builtins.int
    CONF_TYPE_FIELD_NUMBER: builtins.int
    FIELD_VALUE_FIELD_NUMBER: builtins.int
    CONF_VALUE_FIELD_NUMBER: builtins.int
    show: builtins.bool
    """是否展示功能"""
    conf_type: global___ConfType.ValueType
    """设置类型"""
    @property
    def field_value(self) -> global___FieldValue:
        """"""
    @property
    def conf_value(self) -> global___ConfValue:
        """"""
    def __init__(
        self,
        *,
        show: builtins.bool = ...,
        conf_type: global___ConfType.ValueType = ...,
        field_value: global___FieldValue | None = ...,
        conf_value: global___ConfValue | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "conf_value", b"conf_value", "field_value", b"field_value"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "conf_type",
            b"conf_type",
            "conf_value",
            b"conf_value",
            "field_value",
            b"field_value",
            "show",
            b"show",
        ],
    ) -> None: ...

global___CloudConf = CloudConf

@typing_extensions.final
class ConfValue(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SWITCH_VAL_FIELD_NUMBER: builtins.int
    SELECTED_VAL_FIELD_NUMBER: builtins.int
    switch_val: builtins.bool
    """"""
    selected_val: builtins.int
    """"""
    def __init__(
        self,
        *,
        switch_val: builtins.bool = ...,
        selected_val: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "selected_val",
            b"selected_val",
            "switch_val",
            b"switch_val",
            "value",
            b"value",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "selected_val",
            b"selected_val",
            "switch_val",
            b"switch_val",
            "value",
            b"value",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["value", b"value"]
    ) -> typing_extensions.Literal["switch_val", "selected_val"] | None: ...

global___ConfValue = ConfValue

@typing_extensions.final
class DashItem(google.protobuf.message.Message):
    """dash条目"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    BASEURL_FIELD_NUMBER: builtins.int
    BACKUP_URL_FIELD_NUMBER: builtins.int
    BANDWIDTH_FIELD_NUMBER: builtins.int
    CODECID_FIELD_NUMBER: builtins.int
    MD5_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    FRAME_RATE_FIELD_NUMBER: builtins.int
    WIDEVINE_PSSH_FIELD_NUMBER: builtins.int
    id: builtins.int
    """清晰度"""
    baseUrl: builtins.str
    """主线流"""
    @property
    def backup_url(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.str
    ]:
        """备用流"""
    bandwidth: builtins.int
    """带宽"""
    codecid: builtins.int
    """编码id"""
    md5: builtins.str
    """md5"""
    size: builtins.int
    """大小"""
    frame_rate: builtins.str
    """帧率"""
    widevine_pssh: builtins.str
    """"""
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        baseUrl: builtins.str = ...,
        backup_url: collections.abc.Iterable[builtins.str] | None = ...,
        bandwidth: builtins.int = ...,
        codecid: builtins.int = ...,
        md5: builtins.str = ...,
        size: builtins.int = ...,
        frame_rate: builtins.str = ...,
        widevine_pssh: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "backup_url",
            b"backup_url",
            "bandwidth",
            b"bandwidth",
            "baseUrl",
            b"baseUrl",
            "codecid",
            b"codecid",
            "frame_rate",
            b"frame_rate",
            "id",
            b"id",
            "md5",
            b"md5",
            "size",
            b"size",
            "widevine_pssh",
            b"widevine_pssh",
        ],
    ) -> None: ...

global___DashItem = DashItem

@typing_extensions.final
class DashVideo(google.protobuf.message.Message):
    """dash视频流"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BASE_URL_FIELD_NUMBER: builtins.int
    BACKUP_URL_FIELD_NUMBER: builtins.int
    BANDWIDTH_FIELD_NUMBER: builtins.int
    CODECID_FIELD_NUMBER: builtins.int
    MD5_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    AUDIOID_FIELD_NUMBER: builtins.int
    NO_REXCODE_FIELD_NUMBER: builtins.int
    FRAME_RATE_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    WIDEVINE_PSSH_FIELD_NUMBER: builtins.int
    base_url: builtins.str
    """主线流"""
    @property
    def backup_url(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.str
    ]:
        """备用流"""
    bandwidth: builtins.int
    """带宽"""
    codecid: builtins.int
    """编码id"""
    md5: builtins.str
    """md5"""
    size: builtins.int
    """大小"""
    audioId: builtins.int
    """伴音质量id"""
    no_rexcode: builtins.bool
    """是否非全二压"""
    frame_rate: builtins.str
    """码率"""
    width: builtins.int
    """宽度"""
    height: builtins.int
    """高度"""
    widevine_pssh: builtins.str
    """"""
    def __init__(
        self,
        *,
        base_url: builtins.str = ...,
        backup_url: collections.abc.Iterable[builtins.str] | None = ...,
        bandwidth: builtins.int = ...,
        codecid: builtins.int = ...,
        md5: builtins.str = ...,
        size: builtins.int = ...,
        audioId: builtins.int = ...,
        no_rexcode: builtins.bool = ...,
        frame_rate: builtins.str = ...,
        width: builtins.int = ...,
        height: builtins.int = ...,
        widevine_pssh: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "audioId",
            b"audioId",
            "backup_url",
            b"backup_url",
            "bandwidth",
            b"bandwidth",
            "base_url",
            b"base_url",
            "codecid",
            b"codecid",
            "frame_rate",
            b"frame_rate",
            "height",
            b"height",
            "md5",
            b"md5",
            "no_rexcode",
            b"no_rexcode",
            "size",
            b"size",
            "widevine_pssh",
            b"widevine_pssh",
            "width",
            b"width",
        ],
    ) -> None: ...

global___DashVideo = DashVideo

@typing_extensions.final
class DolbyItem(google.protobuf.message.Message):
    """杜比伴音信息"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TypeEnumTypeWrapper(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
            DolbyItem._Type.ValueType
        ],
        builtins.type,
    ):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NONE: DolbyItem._Type.ValueType  # 0
        """NONE"""
        COMMON: DolbyItem._Type.ValueType  # 1
        """普通杜比音效"""
        ATMOS: DolbyItem._Type.ValueType  # 2
        """全景杜比音效"""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
    NONE: DolbyItem.Type.ValueType  # 0
    """NONE"""
    COMMON: DolbyItem.Type.ValueType  # 1
    """普通杜比音效"""
    ATMOS: DolbyItem.Type.ValueType  # 2
    """全景杜比音效"""

    TYPE_FIELD_NUMBER: builtins.int
    AUDIO_FIELD_NUMBER: builtins.int
    type: global___DolbyItem.Type.ValueType
    """杜比类型"""
    @property
    def audio(self) -> global___DashItem:
        """音频流"""
    def __init__(
        self,
        *,
        type: global___DolbyItem.Type.ValueType = ...,
        audio: global___DashItem | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["audio", b"audio"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "audio", b"audio", "type", b"type"
        ],
    ) -> None: ...

global___DolbyItem = DolbyItem

@typing_extensions.final
class Event(google.protobuf.message.Message):
    """事件"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAKE_FIELD_NUMBER: builtins.int
    @property
    def shake(self) -> global___Shake:
        """震动"""
    def __init__(
        self,
        *,
        shake: global___Shake | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["shake", b"shake"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["shake", b"shake"]
    ) -> None: ...

global___Event = Event

@typing_extensions.final
class ExtraContent(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DISABLED_REASON_FIELD_NUMBER: builtins.int
    DISABLED_CODE_FIELD_NUMBER: builtins.int
    disabled_reason: builtins.str
    """"""
    disabled_code: builtins.int
    """"""
    def __init__(
        self,
        *,
        disabled_reason: builtins.str = ...,
        disabled_code: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "disabled_code",
            b"disabled_code",
            "disabled_reason",
            b"disabled_reason",
        ],
    ) -> None: ...

global___ExtraContent = ExtraContent

@typing_extensions.final
class FieldValue(google.protobuf.message.Message):
    """配置字段值"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SWITCH_FIELD_NUMBER: builtins.int
    switch: builtins.bool
    """开关"""
    def __init__(
        self,
        *,
        switch: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "switch", b"switch", "value", b"value"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "switch", b"switch", "value", b"value"
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["value", b"value"]
    ) -> typing_extensions.Literal["switch"] | None: ...

global___FieldValue = FieldValue

@typing_extensions.final
class FormatDescription(google.protobuf.message.Message):
    """清晰度描述"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUALITY_FIELD_NUMBER: builtins.int
    FORMAT_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    NEW_DESCRIPTION_FIELD_NUMBER: builtins.int
    DISPLAY_DESC_FIELD_NUMBER: builtins.int
    SUPERSCRIPT_FIELD_NUMBER: builtins.int
    quality: builtins.int
    """清晰度"""
    format: builtins.str
    """清晰度格式"""
    description: builtins.str
    """清晰度描述"""
    new_description: builtins.str
    """新描述"""
    display_desc: builtins.str
    """选中态的清晰度描述"""
    superscript: builtins.str
    """选中态的清晰度描述的角标"""
    def __init__(
        self,
        *,
        quality: builtins.int = ...,
        format: builtins.str = ...,
        description: builtins.str = ...,
        new_description: builtins.str = ...,
        display_desc: builtins.str = ...,
        superscript: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "description",
            b"description",
            "display_desc",
            b"display_desc",
            "format",
            b"format",
            "new_description",
            b"new_description",
            "quality",
            b"quality",
            "superscript",
            b"superscript",
        ],
    ) -> None: ...

global___FormatDescription = FormatDescription

@typing_extensions.final
class Glance(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CAN_WATCH_FIELD_NUMBER: builtins.int
    TIMES_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    can_watch: builtins.bool
    """"""
    times: builtins.int
    """"""
    duration: builtins.int
    """"""
    def __init__(
        self,
        *,
        can_watch: builtins.bool = ...,
        times: builtins.int = ...,
        duration: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "can_watch",
            b"can_watch",
            "duration",
            b"duration",
            "times",
            b"times",
        ],
    ) -> None: ...

global___Glance = Glance

@typing_extensions.final
class PlayAbilityConf(google.protobuf.message.Message):
    """禁用功能配置"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BACKGROUND_PLAY_CONF_FIELD_NUMBER: builtins.int
    FLIP_CONF_FIELD_NUMBER: builtins.int
    CAST_CONF_FIELD_NUMBER: builtins.int
    FEEDBACK_CONF_FIELD_NUMBER: builtins.int
    SUBTITLE_CONF_FIELD_NUMBER: builtins.int
    PLAYBACK_RATE_CONF_FIELD_NUMBER: builtins.int
    TIME_UP_CONF_FIELD_NUMBER: builtins.int
    PLAYBACK_MODE_CONF_FIELD_NUMBER: builtins.int
    SCALE_MODE_CONF_FIELD_NUMBER: builtins.int
    LIKE_CONF_FIELD_NUMBER: builtins.int
    DISLIKE_CONF_FIELD_NUMBER: builtins.int
    COIN_CONF_FIELD_NUMBER: builtins.int
    ELEC_CONF_FIELD_NUMBER: builtins.int
    SHARE_CONF_FIELD_NUMBER: builtins.int
    SCREEN_SHOT_CONF_FIELD_NUMBER: builtins.int
    LOCK_SCREEN_CONF_FIELD_NUMBER: builtins.int
    RECOMMEND_CONF_FIELD_NUMBER: builtins.int
    PLAYBACK_SPEED_CONF_FIELD_NUMBER: builtins.int
    DEFINITION_CONF_FIELD_NUMBER: builtins.int
    SELECTIONS_CONF_FIELD_NUMBER: builtins.int
    NEXT_CONF_FIELD_NUMBER: builtins.int
    EDIT_DM_CONF_FIELD_NUMBER: builtins.int
    SMALL_WINDOW_CONF_FIELD_NUMBER: builtins.int
    SHAKE_CONF_FIELD_NUMBER: builtins.int
    OUTER_DM_CONF_FIELD_NUMBER: builtins.int
    INNERDMDISABLE_FIELD_NUMBER: builtins.int
    INNER_DM_CONF_FIELD_NUMBER: builtins.int
    DOLBY_CONF_FIELD_NUMBER: builtins.int
    COLOR_FILTER_CONF_FIELD_NUMBER: builtins.int
    @property
    def background_play_conf(self) -> global___CloudConf:
        """后台播放"""
    @property
    def flip_conf(self) -> global___CloudConf:
        """镜像反转"""
    @property
    def cast_conf(self) -> global___CloudConf:
        """投屏"""
    @property
    def feedback_conf(self) -> global___CloudConf:
        """反馈"""
    @property
    def subtitle_conf(self) -> global___CloudConf:
        """字幕"""
    @property
    def playback_rate_conf(self) -> global___CloudConf:
        """播放速度"""
    @property
    def time_up_conf(self) -> global___CloudConf:
        """定时停止"""
    @property
    def playback_mode_conf(self) -> global___CloudConf:
        """播放方式"""
    @property
    def scale_mode_conf(self) -> global___CloudConf:
        """画面尺寸"""
    @property
    def like_conf(self) -> global___CloudConf:
        """赞"""
    @property
    def dislike_conf(self) -> global___CloudConf:
        """踩"""
    @property
    def coin_conf(self) -> global___CloudConf:
        """投币"""
    @property
    def elec_conf(self) -> global___CloudConf:
        """充电"""
    @property
    def share_conf(self) -> global___CloudConf:
        """分享"""
    @property
    def screen_shot_conf(self) -> global___CloudConf:
        """截图"""
    @property
    def lock_screen_conf(self) -> global___CloudConf:
        """锁定"""
    @property
    def recommend_conf(self) -> global___CloudConf:
        """相关推荐"""
    @property
    def playback_speed_conf(self) -> global___CloudConf:
        """播放速度"""
    @property
    def definition_conf(self) -> global___CloudConf:
        """清晰度"""
    @property
    def selections_conf(self) -> global___CloudConf:
        """选集"""
    @property
    def next_conf(self) -> global___CloudConf:
        """下一集"""
    @property
    def edit_dm_conf(self) -> global___CloudConf:
        """编辑弹幕"""
    @property
    def small_window_conf(self) -> global___CloudConf:
        """小窗"""
    @property
    def shake_conf(self) -> global___CloudConf:
        """震动"""
    @property
    def outer_dm_conf(self) -> global___CloudConf:
        """外层面板弹幕设置"""
    @property
    def innerDmDisable(self) -> global___CloudConf:
        """三点内弹幕设置"""
    @property
    def inner_dm_conf(self) -> global___CloudConf:
        """一起看入口"""
    @property
    def dolby_conf(self) -> global___CloudConf:
        """杜比音效"""
    @property
    def color_filter_conf(self) -> global___CloudConf:
        """颜色滤镜"""
    def __init__(
        self,
        *,
        background_play_conf: global___CloudConf | None = ...,
        flip_conf: global___CloudConf | None = ...,
        cast_conf: global___CloudConf | None = ...,
        feedback_conf: global___CloudConf | None = ...,
        subtitle_conf: global___CloudConf | None = ...,
        playback_rate_conf: global___CloudConf | None = ...,
        time_up_conf: global___CloudConf | None = ...,
        playback_mode_conf: global___CloudConf | None = ...,
        scale_mode_conf: global___CloudConf | None = ...,
        like_conf: global___CloudConf | None = ...,
        dislike_conf: global___CloudConf | None = ...,
        coin_conf: global___CloudConf | None = ...,
        elec_conf: global___CloudConf | None = ...,
        share_conf: global___CloudConf | None = ...,
        screen_shot_conf: global___CloudConf | None = ...,
        lock_screen_conf: global___CloudConf | None = ...,
        recommend_conf: global___CloudConf | None = ...,
        playback_speed_conf: global___CloudConf | None = ...,
        definition_conf: global___CloudConf | None = ...,
        selections_conf: global___CloudConf | None = ...,
        next_conf: global___CloudConf | None = ...,
        edit_dm_conf: global___CloudConf | None = ...,
        small_window_conf: global___CloudConf | None = ...,
        shake_conf: global___CloudConf | None = ...,
        outer_dm_conf: global___CloudConf | None = ...,
        innerDmDisable: global___CloudConf | None = ...,
        inner_dm_conf: global___CloudConf | None = ...,
        dolby_conf: global___CloudConf | None = ...,
        color_filter_conf: global___CloudConf | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "background_play_conf",
            b"background_play_conf",
            "cast_conf",
            b"cast_conf",
            "coin_conf",
            b"coin_conf",
            "color_filter_conf",
            b"color_filter_conf",
            "definition_conf",
            b"definition_conf",
            "dislike_conf",
            b"dislike_conf",
            "dolby_conf",
            b"dolby_conf",
            "edit_dm_conf",
            b"edit_dm_conf",
            "elec_conf",
            b"elec_conf",
            "feedback_conf",
            b"feedback_conf",
            "flip_conf",
            b"flip_conf",
            "innerDmDisable",
            b"innerDmDisable",
            "inner_dm_conf",
            b"inner_dm_conf",
            "like_conf",
            b"like_conf",
            "lock_screen_conf",
            b"lock_screen_conf",
            "next_conf",
            b"next_conf",
            "outer_dm_conf",
            b"outer_dm_conf",
            "playback_mode_conf",
            b"playback_mode_conf",
            "playback_rate_conf",
            b"playback_rate_conf",
            "playback_speed_conf",
            b"playback_speed_conf",
            "recommend_conf",
            b"recommend_conf",
            "scale_mode_conf",
            b"scale_mode_conf",
            "screen_shot_conf",
            b"screen_shot_conf",
            "selections_conf",
            b"selections_conf",
            "shake_conf",
            b"shake_conf",
            "share_conf",
            b"share_conf",
            "small_window_conf",
            b"small_window_conf",
            "subtitle_conf",
            b"subtitle_conf",
            "time_up_conf",
            b"time_up_conf",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "background_play_conf",
            b"background_play_conf",
            "cast_conf",
            b"cast_conf",
            "coin_conf",
            b"coin_conf",
            "color_filter_conf",
            b"color_filter_conf",
            "definition_conf",
            b"definition_conf",
            "dislike_conf",
            b"dislike_conf",
            "dolby_conf",
            b"dolby_conf",
            "edit_dm_conf",
            b"edit_dm_conf",
            "elec_conf",
            b"elec_conf",
            "feedback_conf",
            b"feedback_conf",
            "flip_conf",
            b"flip_conf",
            "innerDmDisable",
            b"innerDmDisable",
            "inner_dm_conf",
            b"inner_dm_conf",
            "like_conf",
            b"like_conf",
            "lock_screen_conf",
            b"lock_screen_conf",
            "next_conf",
            b"next_conf",
            "outer_dm_conf",
            b"outer_dm_conf",
            "playback_mode_conf",
            b"playback_mode_conf",
            "playback_rate_conf",
            b"playback_rate_conf",
            "playback_speed_conf",
            b"playback_speed_conf",
            "recommend_conf",
            b"recommend_conf",
            "scale_mode_conf",
            b"scale_mode_conf",
            "screen_shot_conf",
            b"screen_shot_conf",
            "selections_conf",
            b"selections_conf",
            "shake_conf",
            b"shake_conf",
            "share_conf",
            b"share_conf",
            "small_window_conf",
            b"small_window_conf",
            "subtitle_conf",
            b"subtitle_conf",
            "time_up_conf",
            b"time_up_conf",
        ],
    ) -> None: ...

global___PlayAbilityConf = PlayAbilityConf

@typing_extensions.final
class PlayArcConf(google.protobuf.message.Message):
    """播放控件稿件配置"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BACKGROUND_PLAY_CONF_FIELD_NUMBER: builtins.int
    FLIP_CONF_FIELD_NUMBER: builtins.int
    CAST_CONF_FIELD_NUMBER: builtins.int
    FEEDBACK_CONF_FIELD_NUMBER: builtins.int
    SUBTITLE_CONF_FIELD_NUMBER: builtins.int
    PLAYBACK_RATE_CONF_FIELD_NUMBER: builtins.int
    TIME_UP_CONF_FIELD_NUMBER: builtins.int
    PLAYBACK_MODE_CONF_FIELD_NUMBER: builtins.int
    SCALE_MODE_CONF_FIELD_NUMBER: builtins.int
    LIKE_CONF_FIELD_NUMBER: builtins.int
    DISLIKE_CONF_FIELD_NUMBER: builtins.int
    COIN_CONF_FIELD_NUMBER: builtins.int
    ELEC_CONF_FIELD_NUMBER: builtins.int
    SHARE_CONF_FIELD_NUMBER: builtins.int
    SCREEN_SHOT_CONF_FIELD_NUMBER: builtins.int
    LOCK_SCREEN_CONF_FIELD_NUMBER: builtins.int
    RECOMMEND_CONF_FIELD_NUMBER: builtins.int
    PLAYBACK_SPEED_CONF_FIELD_NUMBER: builtins.int
    DEFINITION_CONF_FIELD_NUMBER: builtins.int
    SELECTIONS_CONF_FIELD_NUMBER: builtins.int
    NEXT_CONF_FIELD_NUMBER: builtins.int
    EDIT_DM_CONF_FIELD_NUMBER: builtins.int
    SMALL_WINDOW_CONF_FIELD_NUMBER: builtins.int
    SHAKE_CONF_FIELD_NUMBER: builtins.int
    OUTER_DM_CONF_FIELD_NUMBER: builtins.int
    INNER_DM_CONF_FIELD_NUMBER: builtins.int
    PANORAMA_CONF_FIELD_NUMBER: builtins.int
    DOLBY_CONF_FIELD_NUMBER: builtins.int
    SCREEN_RECORDING_CONF_FIELD_NUMBER: builtins.int
    COLOR_FILTER_CONF_FIELD_NUMBER: builtins.int
    @property
    def background_play_conf(self) -> global___ArcConf:
        """后台播放"""
    @property
    def flip_conf(self) -> global___ArcConf:
        """镜像反转"""
    @property
    def cast_conf(self) -> global___ArcConf:
        """投屏"""
    @property
    def feedback_conf(self) -> global___ArcConf:
        """反馈"""
    @property
    def subtitle_conf(self) -> global___ArcConf:
        """字幕"""
    @property
    def playback_rate_conf(self) -> global___ArcConf:
        """播放速度"""
    @property
    def time_up_conf(self) -> global___ArcConf:
        """定时停止"""
    @property
    def playback_mode_conf(self) -> global___ArcConf:
        """播放方式"""
    @property
    def scale_mode_conf(self) -> global___ArcConf:
        """画面尺寸"""
    @property
    def like_conf(self) -> global___ArcConf:
        """赞"""
    @property
    def dislike_conf(self) -> global___ArcConf:
        """踩"""
    @property
    def coin_conf(self) -> global___ArcConf:
        """投币"""
    @property
    def elec_conf(self) -> global___ArcConf:
        """充电"""
    @property
    def share_conf(self) -> global___ArcConf:
        """分享"""
    @property
    def screen_shot_conf(self) -> global___ArcConf:
        """截图"""
    @property
    def lock_screen_conf(self) -> global___ArcConf:
        """锁定"""
    @property
    def recommend_conf(self) -> global___ArcConf:
        """相关推荐"""
    @property
    def playback_speed_conf(self) -> global___ArcConf:
        """播放速度"""
    @property
    def definition_conf(self) -> global___ArcConf:
        """清晰度"""
    @property
    def selections_conf(self) -> global___ArcConf:
        """选集"""
    @property
    def next_conf(self) -> global___ArcConf:
        """下一集"""
    @property
    def edit_dm_conf(self) -> global___ArcConf:
        """编辑弹幕"""
    @property
    def small_window_conf(self) -> global___ArcConf:
        """小窗"""
    @property
    def shake_conf(self) -> global___ArcConf:
        """震动"""
    @property
    def outer_dm_conf(self) -> global___ArcConf:
        """外层面板弹幕设置"""
    @property
    def inner_dm_conf(self) -> global___ArcConf:
        """三点内弹幕设置"""
    @property
    def panorama_conf(self) -> global___ArcConf:
        """一起看入口"""
    @property
    def dolby_conf(self) -> global___ArcConf:
        """杜比音效"""
    @property
    def screen_recording_conf(self) -> global___ArcConf:
        """屏幕录制"""
    @property
    def color_filter_conf(self) -> global___ArcConf:
        """颜色滤镜"""
    def __init__(
        self,
        *,
        background_play_conf: global___ArcConf | None = ...,
        flip_conf: global___ArcConf | None = ...,
        cast_conf: global___ArcConf | None = ...,
        feedback_conf: global___ArcConf | None = ...,
        subtitle_conf: global___ArcConf | None = ...,
        playback_rate_conf: global___ArcConf | None = ...,
        time_up_conf: global___ArcConf | None = ...,
        playback_mode_conf: global___ArcConf | None = ...,
        scale_mode_conf: global___ArcConf | None = ...,
        like_conf: global___ArcConf | None = ...,
        dislike_conf: global___ArcConf | None = ...,
        coin_conf: global___ArcConf | None = ...,
        elec_conf: global___ArcConf | None = ...,
        share_conf: global___ArcConf | None = ...,
        screen_shot_conf: global___ArcConf | None = ...,
        lock_screen_conf: global___ArcConf | None = ...,
        recommend_conf: global___ArcConf | None = ...,
        playback_speed_conf: global___ArcConf | None = ...,
        definition_conf: global___ArcConf | None = ...,
        selections_conf: global___ArcConf | None = ...,
        next_conf: global___ArcConf | None = ...,
        edit_dm_conf: global___ArcConf | None = ...,
        small_window_conf: global___ArcConf | None = ...,
        shake_conf: global___ArcConf | None = ...,
        outer_dm_conf: global___ArcConf | None = ...,
        inner_dm_conf: global___ArcConf | None = ...,
        panorama_conf: global___ArcConf | None = ...,
        dolby_conf: global___ArcConf | None = ...,
        screen_recording_conf: global___ArcConf | None = ...,
        color_filter_conf: global___ArcConf | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "background_play_conf",
            b"background_play_conf",
            "cast_conf",
            b"cast_conf",
            "coin_conf",
            b"coin_conf",
            "color_filter_conf",
            b"color_filter_conf",
            "definition_conf",
            b"definition_conf",
            "dislike_conf",
            b"dislike_conf",
            "dolby_conf",
            b"dolby_conf",
            "edit_dm_conf",
            b"edit_dm_conf",
            "elec_conf",
            b"elec_conf",
            "feedback_conf",
            b"feedback_conf",
            "flip_conf",
            b"flip_conf",
            "inner_dm_conf",
            b"inner_dm_conf",
            "like_conf",
            b"like_conf",
            "lock_screen_conf",
            b"lock_screen_conf",
            "next_conf",
            b"next_conf",
            "outer_dm_conf",
            b"outer_dm_conf",
            "panorama_conf",
            b"panorama_conf",
            "playback_mode_conf",
            b"playback_mode_conf",
            "playback_rate_conf",
            b"playback_rate_conf",
            "playback_speed_conf",
            b"playback_speed_conf",
            "recommend_conf",
            b"recommend_conf",
            "scale_mode_conf",
            b"scale_mode_conf",
            "screen_recording_conf",
            b"screen_recording_conf",
            "screen_shot_conf",
            b"screen_shot_conf",
            "selections_conf",
            b"selections_conf",
            "shake_conf",
            b"shake_conf",
            "share_conf",
            b"share_conf",
            "small_window_conf",
            b"small_window_conf",
            "subtitle_conf",
            b"subtitle_conf",
            "time_up_conf",
            b"time_up_conf",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "background_play_conf",
            b"background_play_conf",
            "cast_conf",
            b"cast_conf",
            "coin_conf",
            b"coin_conf",
            "color_filter_conf",
            b"color_filter_conf",
            "definition_conf",
            b"definition_conf",
            "dislike_conf",
            b"dislike_conf",
            "dolby_conf",
            b"dolby_conf",
            "edit_dm_conf",
            b"edit_dm_conf",
            "elec_conf",
            b"elec_conf",
            "feedback_conf",
            b"feedback_conf",
            "flip_conf",
            b"flip_conf",
            "inner_dm_conf",
            b"inner_dm_conf",
            "like_conf",
            b"like_conf",
            "lock_screen_conf",
            b"lock_screen_conf",
            "next_conf",
            b"next_conf",
            "outer_dm_conf",
            b"outer_dm_conf",
            "panorama_conf",
            b"panorama_conf",
            "playback_mode_conf",
            b"playback_mode_conf",
            "playback_rate_conf",
            b"playback_rate_conf",
            "playback_speed_conf",
            b"playback_speed_conf",
            "recommend_conf",
            b"recommend_conf",
            "scale_mode_conf",
            b"scale_mode_conf",
            "screen_recording_conf",
            b"screen_recording_conf",
            "screen_shot_conf",
            b"screen_shot_conf",
            "selections_conf",
            b"selections_conf",
            "shake_conf",
            b"shake_conf",
            "share_conf",
            b"share_conf",
            "small_window_conf",
            b"small_window_conf",
            "subtitle_conf",
            b"subtitle_conf",
            "time_up_conf",
            b"time_up_conf",
        ],
    ) -> None: ...

global___PlayArcConf = PlayArcConf

@typing_extensions.final
class PlayConfEditReply(google.protobuf.message.Message):
    """编辑播放界面配置-响应"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___PlayConfEditReply = PlayConfEditReply

@typing_extensions.final
class PlayConfEditReq(google.protobuf.message.Message):
    """编辑播放界面配置-请求"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PLAY_CONF_FIELD_NUMBER: builtins.int
    @property
    def play_conf(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PlayConfState
    ]:
        """播放界面配置"""
    def __init__(
        self,
        *,
        play_conf: collections.abc.Iterable[global___PlayConfState]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["play_conf", b"play_conf"]
    ) -> None: ...

global___PlayConfEditReq = PlayConfEditReq

@typing_extensions.final
class PlayConfReply(google.protobuf.message.Message):
    """获取播放界面配置-响应"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PLAY_CONF_FIELD_NUMBER: builtins.int
    @property
    def play_conf(self) -> global___PlayAbilityConf:
        """播放控件用户自定义配置"""
    def __init__(
        self,
        *,
        play_conf: global___PlayAbilityConf | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["play_conf", b"play_conf"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["play_conf", b"play_conf"]
    ) -> None: ...

global___PlayConfReply = PlayConfReply

@typing_extensions.final
class PlayConfReq(google.protobuf.message.Message):
    """获取播放界面配置-请求"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___PlayConfReq = PlayConfReq

@typing_extensions.final
class PlayConfState(google.protobuf.message.Message):
    """播放界面配置"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONF_TYPE_FIELD_NUMBER: builtins.int
    SHOW_FIELD_NUMBER: builtins.int
    FIELD_VALUE_FIELD_NUMBER: builtins.int
    CONF_VALUE_FIELD_NUMBER: builtins.int
    conf_type: global___ConfType.ValueType
    """设置类型"""
    show: builtins.bool
    """是否隐藏"""
    @property
    def field_value(self) -> global___FieldValue:
        """配置字段值"""
    @property
    def conf_value(self) -> global___ConfValue:
        """"""
    def __init__(
        self,
        *,
        conf_type: global___ConfType.ValueType = ...,
        show: builtins.bool = ...,
        field_value: global___FieldValue | None = ...,
        conf_value: global___ConfValue | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "conf_value", b"conf_value", "field_value", b"field_value"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "conf_type",
            b"conf_type",
            "conf_value",
            b"conf_value",
            "field_value",
            b"field_value",
            "show",
            b"show",
        ],
    ) -> None: ...

global___PlayConfState = PlayConfState

@typing_extensions.final
class PlayLimit(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    SUB_MESSAGE_FIELD_NUMBER: builtins.int
    BUTTON_FIELD_NUMBER: builtins.int
    code: global___PlayLimitCode.ValueType
    """"""
    message: builtins.str
    """"""
    sub_message: builtins.str
    """"""
    @property
    def button(self) -> global___ButtonStyle:
        """"""
    def __init__(
        self,
        *,
        code: global___PlayLimitCode.ValueType = ...,
        message: builtins.str = ...,
        sub_message: builtins.str = ...,
        button: global___ButtonStyle | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["button", b"button"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "button",
            b"button",
            "code",
            b"code",
            "message",
            b"message",
            "sub_message",
            b"sub_message",
        ],
    ) -> None: ...

global___PlayLimit = PlayLimit

@typing_extensions.final
class PlayURLReply(google.protobuf.message.Message):
    """视频地址-回复"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUALITY_FIELD_NUMBER: builtins.int
    FORMAT_FIELD_NUMBER: builtins.int
    TIMELENGTH_FIELD_NUMBER: builtins.int
    VIDEO_CODECID_FIELD_NUMBER: builtins.int
    FNVER_FIELD_NUMBER: builtins.int
    FNVAL_FIELD_NUMBER: builtins.int
    VIDEO_PROJECT_FIELD_NUMBER: builtins.int
    DURL_FIELD_NUMBER: builtins.int
    DASH_FIELD_NUMBER: builtins.int
    NO_REXCODE_FIELD_NUMBER: builtins.int
    UPGRADE_LIMIT_FIELD_NUMBER: builtins.int
    SUPPORT_FORMATS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    quality: builtins.int
    """清晰的"""
    format: builtins.str
    """格式"""
    timelength: builtins.int
    """总时长(单位为ms)"""
    video_codecid: builtins.int
    """编码id"""
    fnver: builtins.int
    """视频流版本"""
    fnval: builtins.int
    """视频流格式"""
    video_project: builtins.bool
    """是否支持投影"""
    @property
    def durl(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___ResponseUrl
    ]:
        """分段视频流列表"""
    @property
    def dash(self) -> global___ResponseDash:
        """dash数据"""
    no_rexcode: builtins.int
    """是否非全二压"""
    @property
    def upgrade_limit(self) -> global___UpgradeLimit:
        """互动视频升级提示"""
    @property
    def support_formats(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___FormatDescription
    ]:
        """清晰度描述列表"""
    type: global___VideoType.ValueType
    """视频格式"""
    def __init__(
        self,
        *,
        quality: builtins.int = ...,
        format: builtins.str = ...,
        timelength: builtins.int = ...,
        video_codecid: builtins.int = ...,
        fnver: builtins.int = ...,
        fnval: builtins.int = ...,
        video_project: builtins.bool = ...,
        durl: collections.abc.Iterable[global___ResponseUrl] | None = ...,
        dash: global___ResponseDash | None = ...,
        no_rexcode: builtins.int = ...,
        upgrade_limit: global___UpgradeLimit | None = ...,
        support_formats: collections.abc.Iterable[global___FormatDescription]
        | None = ...,
        type: global___VideoType.ValueType = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "dash", b"dash", "upgrade_limit", b"upgrade_limit"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "dash",
            b"dash",
            "durl",
            b"durl",
            "fnval",
            b"fnval",
            "fnver",
            b"fnver",
            "format",
            b"format",
            "no_rexcode",
            b"no_rexcode",
            "quality",
            b"quality",
            "support_formats",
            b"support_formats",
            "timelength",
            b"timelength",
            "type",
            b"type",
            "upgrade_limit",
            b"upgrade_limit",
            "video_codecid",
            b"video_codecid",
            "video_project",
            b"video_project",
        ],
    ) -> None: ...

global___PlayURLReply = PlayURLReply

@typing_extensions.final
class PlayURLReq(google.protobuf.message.Message):
    """视频地址-请求"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AID_FIELD_NUMBER: builtins.int
    CID_FIELD_NUMBER: builtins.int
    QN_FIELD_NUMBER: builtins.int
    FNVER_FIELD_NUMBER: builtins.int
    FNVAL_FIELD_NUMBER: builtins.int
    DOWNLOAD_FIELD_NUMBER: builtins.int
    FORCE_HOST_FIELD_NUMBER: builtins.int
    FOURK_FIELD_NUMBER: builtins.int
    SPMID_FIELD_NUMBER: builtins.int
    FROM_SPMID_FIELD_NUMBER: builtins.int
    aid: builtins.int
    """稿件avid"""
    cid: builtins.int
    """视频cid"""
    qn: builtins.int
    """清晰度"""
    fnver: builtins.int
    """视频流版本"""
    fnval: builtins.int
    """视频流格式"""
    download: builtins.int
    """下载模式
    0:播放 1:flv下载 2:dash下载
    """
    force_host: builtins.int
    """流url强制是用域名
    0:允许使用ip 1:使用http 2:使用https
    """
    fourk: builtins.bool
    """是否4K"""
    spmid: builtins.str
    """当前页spm"""
    from_spmid: builtins.str
    """上一页spm"""
    def __init__(
        self,
        *,
        aid: builtins.int = ...,
        cid: builtins.int = ...,
        qn: builtins.int = ...,
        fnver: builtins.int = ...,
        fnval: builtins.int = ...,
        download: builtins.int = ...,
        force_host: builtins.int = ...,
        fourk: builtins.bool = ...,
        spmid: builtins.str = ...,
        from_spmid: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "aid",
            b"aid",
            "cid",
            b"cid",
            "download",
            b"download",
            "fnval",
            b"fnval",
            "fnver",
            b"fnver",
            "force_host",
            b"force_host",
            "fourk",
            b"fourk",
            "from_spmid",
            b"from_spmid",
            "qn",
            b"qn",
            "spmid",
            b"spmid",
        ],
    ) -> None: ...

global___PlayURLReq = PlayURLReq

@typing_extensions.final
class PlayViewReply(google.protobuf.message.Message):
    """播放页信息-回复"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VIDEO_INFO_FIELD_NUMBER: builtins.int
    PLAY_CONF_FIELD_NUMBER: builtins.int
    UPGRADE_LIMIT_FIELD_NUMBER: builtins.int
    CHRONOS_FIELD_NUMBER: builtins.int
    PLAY_ARC_FIELD_NUMBER: builtins.int
    EVENT_FIELD_NUMBER: builtins.int
    AB_FIELD_NUMBER: builtins.int
    PLAY_LIMIT_FIELD_NUMBER: builtins.int
    @property
    def video_info(self) -> global___VideoInfo:
        """视频流信息"""
    @property
    def play_conf(self) -> global___PlayAbilityConf:
        """播放控件用户自定义配置"""
    @property
    def upgrade_limit(self) -> global___UpgradeLimit:
        """互动视频升级提示"""
    @property
    def chronos(self) -> global___Chronos:
        """Chronos灰度管理"""
    @property
    def play_arc(self) -> global___PlayArcConf:
        """播放控件稿件配置"""
    @property
    def event(self) -> global___Event:
        """事件"""
    @property
    def ab(self) -> global___AB:
        """"""
    @property
    def play_limit(self) -> global___PlayLimit:
        """"""
    def __init__(
        self,
        *,
        video_info: global___VideoInfo | None = ...,
        play_conf: global___PlayAbilityConf | None = ...,
        upgrade_limit: global___UpgradeLimit | None = ...,
        chronos: global___Chronos | None = ...,
        play_arc: global___PlayArcConf | None = ...,
        event: global___Event | None = ...,
        ab: global___AB | None = ...,
        play_limit: global___PlayLimit | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "ab",
            b"ab",
            "chronos",
            b"chronos",
            "event",
            b"event",
            "play_arc",
            b"play_arc",
            "play_conf",
            b"play_conf",
            "play_limit",
            b"play_limit",
            "upgrade_limit",
            b"upgrade_limit",
            "video_info",
            b"video_info",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "ab",
            b"ab",
            "chronos",
            b"chronos",
            "event",
            b"event",
            "play_arc",
            b"play_arc",
            "play_conf",
            b"play_conf",
            "play_limit",
            b"play_limit",
            "upgrade_limit",
            b"upgrade_limit",
            "video_info",
            b"video_info",
        ],
    ) -> None: ...

global___PlayViewReply = PlayViewReply

@typing_extensions.final
class PlayViewReq(google.protobuf.message.Message):
    """播放页信息-请求"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AID_FIELD_NUMBER: builtins.int
    CID_FIELD_NUMBER: builtins.int
    QN_FIELD_NUMBER: builtins.int
    FNVER_FIELD_NUMBER: builtins.int
    FNVAL_FIELD_NUMBER: builtins.int
    DOWNLOAD_FIELD_NUMBER: builtins.int
    FORCE_HOST_FIELD_NUMBER: builtins.int
    FOURK_FIELD_NUMBER: builtins.int
    SPMID_FIELD_NUMBER: builtins.int
    FROM_SPMID_FIELD_NUMBER: builtins.int
    TEENAGERS_MODE_FIELD_NUMBER: builtins.int
    PREFER_CODEC_TYPE_FIELD_NUMBER: builtins.int
    BUSINESS_FIELD_NUMBER: builtins.int
    VOICE_BALANCE_FIELD_NUMBER: builtins.int
    aid: builtins.int
    """稿件avid"""
    cid: builtins.int
    """视频cid"""
    qn: builtins.int
    """清晰度"""
    fnver: builtins.int
    """视频流版本"""
    fnval: builtins.int
    """视频流格式"""
    download: builtins.int
    """下载模式
    0:播放 1:flv下载 2:dash下载
    """
    force_host: builtins.int
    """流url强制是用域名
    0:允许使用ip 1:使用http 2:使用https
    """
    fourk: builtins.bool
    """是否4K"""
    spmid: builtins.str
    """当前页spm"""
    from_spmid: builtins.str
    """上一页spm"""
    teenagers_mode: builtins.int
    """青少年模式"""
    prefer_codec_type: global___CodeType.ValueType
    """编码"""
    business: global___Business.ValueType
    """业务类型"""
    voice_balance: builtins.int
    """"""
    def __init__(
        self,
        *,
        aid: builtins.int = ...,
        cid: builtins.int = ...,
        qn: builtins.int = ...,
        fnver: builtins.int = ...,
        fnval: builtins.int = ...,
        download: builtins.int = ...,
        force_host: builtins.int = ...,
        fourk: builtins.bool = ...,
        spmid: builtins.str = ...,
        from_spmid: builtins.str = ...,
        teenagers_mode: builtins.int = ...,
        prefer_codec_type: global___CodeType.ValueType = ...,
        business: global___Business.ValueType = ...,
        voice_balance: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "aid",
            b"aid",
            "business",
            b"business",
            "cid",
            b"cid",
            "download",
            b"download",
            "fnval",
            b"fnval",
            "fnver",
            b"fnver",
            "force_host",
            b"force_host",
            "fourk",
            b"fourk",
            "from_spmid",
            b"from_spmid",
            "prefer_codec_type",
            b"prefer_codec_type",
            "qn",
            b"qn",
            "spmid",
            b"spmid",
            "teenagers_mode",
            b"teenagers_mode",
            "voice_balance",
            b"voice_balance",
        ],
    ) -> None: ...

global___PlayViewReq = PlayViewReq

@typing_extensions.final
class ProjectReply(google.protobuf.message.Message):
    """投屏地址-响应"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_FIELD_NUMBER: builtins.int
    @property
    def project(self) -> global___PlayURLReply: ...
    def __init__(
        self,
        *,
        project: global___PlayURLReply | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["project", b"project"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["project", b"project"]
    ) -> None: ...

global___ProjectReply = ProjectReply

@typing_extensions.final
class ProjectReq(google.protobuf.message.Message):
    """投屏地址-请求"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AID_FIELD_NUMBER: builtins.int
    CID_FIELD_NUMBER: builtins.int
    QN_FIELD_NUMBER: builtins.int
    FNVER_FIELD_NUMBER: builtins.int
    FNVAL_FIELD_NUMBER: builtins.int
    DOWNLOAD_FIELD_NUMBER: builtins.int
    FORCE_HOST_FIELD_NUMBER: builtins.int
    FOURK_FIELD_NUMBER: builtins.int
    SPMID_FIELD_NUMBER: builtins.int
    FROM_SPMID_FIELD_NUMBER: builtins.int
    PROTOCOL_FIELD_NUMBER: builtins.int
    DEVICE_TYPE_FIELD_NUMBER: builtins.int
    aid: builtins.int
    """稿件avid"""
    cid: builtins.int
    """视频cid"""
    qn: builtins.int
    """清晰度"""
    fnver: builtins.int
    """视频流版本"""
    fnval: builtins.int
    """视频流格式"""
    download: builtins.int
    """下载模式
    0:播放 1:flv下载 2:dash下载
    """
    force_host: builtins.int
    """流url强制是用域名
    0:允许使用ip 1:使用http 2:使用https
    """
    fourk: builtins.bool
    """是否4K"""
    spmid: builtins.str
    """当前页spm"""
    from_spmid: builtins.str
    """上一页spm"""
    protocol: builtins.int
    """使用协议
    0:默认乐播 1:自建协议 2:云投屏 3:airplay
    """
    device_type: builtins.int
    """投屏设备
    0:默认其他 1:OTT设备
    """
    def __init__(
        self,
        *,
        aid: builtins.int = ...,
        cid: builtins.int = ...,
        qn: builtins.int = ...,
        fnver: builtins.int = ...,
        fnval: builtins.int = ...,
        download: builtins.int = ...,
        force_host: builtins.int = ...,
        fourk: builtins.bool = ...,
        spmid: builtins.str = ...,
        from_spmid: builtins.str = ...,
        protocol: builtins.int = ...,
        device_type: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "aid",
            b"aid",
            "cid",
            b"cid",
            "device_type",
            b"device_type",
            "download",
            b"download",
            "fnval",
            b"fnval",
            "fnver",
            b"fnver",
            "force_host",
            b"force_host",
            "fourk",
            b"fourk",
            "from_spmid",
            b"from_spmid",
            "protocol",
            b"protocol",
            "qn",
            b"qn",
            "spmid",
            b"spmid",
        ],
    ) -> None: ...

global___ProjectReq = ProjectReq

@typing_extensions.final
class ResponseDash(google.protobuf.message.Message):
    """dash数据"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VIDEO_FIELD_NUMBER: builtins.int
    AUDIO_FIELD_NUMBER: builtins.int
    @property
    def video(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___DashItem
    ]:
        """dash视频流"""
    @property
    def audio(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___DashItem
    ]:
        """dash伴音流"""
    def __init__(
        self,
        *,
        video: collections.abc.Iterable[global___DashItem] | None = ...,
        audio: collections.abc.Iterable[global___DashItem] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "audio", b"audio", "video", b"video"
        ],
    ) -> None: ...

global___ResponseDash = ResponseDash

@typing_extensions.final
class ResponseUrl(google.protobuf.message.Message):
    """分段流条目"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    BACKUP_URL_FIELD_NUMBER: builtins.int
    MD5_FIELD_NUMBER: builtins.int
    order: builtins.int
    """分段序号"""
    length: builtins.int
    """分段时长"""
    size: builtins.int
    """分段大小"""
    url: builtins.str
    """主线流"""
    @property
    def backup_url(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.str
    ]:
        """备用流"""
    md5: builtins.str
    """md5"""
    def __init__(
        self,
        *,
        order: builtins.int = ...,
        length: builtins.int = ...,
        size: builtins.int = ...,
        url: builtins.str = ...,
        backup_url: collections.abc.Iterable[builtins.str] | None = ...,
        md5: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "backup_url",
            b"backup_url",
            "length",
            b"length",
            "md5",
            b"md5",
            "order",
            b"order",
            "size",
            b"size",
            "url",
            b"url",
        ],
    ) -> None: ...

global___ResponseUrl = ResponseUrl

@typing_extensions.final
class SegmentVideo(google.protobuf.message.Message):
    """分段视频流"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SEGMENT_FIELD_NUMBER: builtins.int
    @property
    def segment(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___ResponseUrl
    ]:
        """分段视频流列表"""
    def __init__(
        self,
        *,
        segment: collections.abc.Iterable[global___ResponseUrl] | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["segment", b"segment"]
    ) -> None: ...

global___SegmentVideo = SegmentVideo

@typing_extensions.final
class Shake(google.protobuf.message.Message):
    """震动"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_FIELD_NUMBER: builtins.int
    file: builtins.str
    """文件地址"""
    def __init__(
        self,
        *,
        file: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["file", b"file"]
    ) -> None: ...

global___Shake = Shake

@typing_extensions.final
class Stream(google.protobuf.message.Message):
    """视频流信息"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STREAM_INFO_FIELD_NUMBER: builtins.int
    DASH_VIDEO_FIELD_NUMBER: builtins.int
    SEGMENT_VIDEO_FIELD_NUMBER: builtins.int
    @property
    def stream_info(self) -> global___StreamInfo:
        """元数据"""
    @property
    def dash_video(self) -> global___DashVideo:
        """dash流"""
    @property
    def segment_video(self) -> global___SegmentVideo:
        """分段流"""
    def __init__(
        self,
        *,
        stream_info: global___StreamInfo | None = ...,
        dash_video: global___DashVideo | None = ...,
        segment_video: global___SegmentVideo | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "content",
            b"content",
            "dash_video",
            b"dash_video",
            "segment_video",
            b"segment_video",
            "stream_info",
            b"stream_info",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "content",
            b"content",
            "dash_video",
            b"dash_video",
            "segment_video",
            b"segment_video",
            "stream_info",
            b"stream_info",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["content", b"content"]
    ) -> typing_extensions.Literal["dash_video", "segment_video"] | None: ...

global___Stream = Stream

@typing_extensions.final
class StreamInfo(google.protobuf.message.Message):
    """流媒体元数据"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUALITY_FIELD_NUMBER: builtins.int
    FORMAT_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ERR_CODE_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    NEED_VIP_FIELD_NUMBER: builtins.int
    NEED_LOGIN_FIELD_NUMBER: builtins.int
    INTACT_FIELD_NUMBER: builtins.int
    NO_REXCODE_FIELD_NUMBER: builtins.int
    ATTRIBUTE_FIELD_NUMBER: builtins.int
    NEW_DESCRIPTION_FIELD_NUMBER: builtins.int
    DISPLAY_DESC_FIELD_NUMBER: builtins.int
    SUPERSCRIPT_FIELD_NUMBER: builtins.int
    quality: builtins.int
    """清晰度"""
    format: builtins.str
    """格式"""
    description: builtins.str
    """格式描述"""
    err_code: global___PlayErr.ValueType
    """错误码"""
    @property
    def limit(self) -> global___StreamLimit:
        """不满足条件信息"""
    need_vip: builtins.bool
    """是否需要vip"""
    need_login: builtins.bool
    """是否需要登录"""
    intact: builtins.bool
    """是否完整"""
    no_rexcode: builtins.bool
    """是否非全二压"""
    attribute: builtins.int
    """清晰度属性位"""
    new_description: builtins.str
    """新版格式描述"""
    display_desc: builtins.str
    """格式文字"""
    superscript: builtins.str
    """新版格式描述备注"""
    def __init__(
        self,
        *,
        quality: builtins.int = ...,
        format: builtins.str = ...,
        description: builtins.str = ...,
        err_code: global___PlayErr.ValueType = ...,
        limit: global___StreamLimit | None = ...,
        need_vip: builtins.bool = ...,
        need_login: builtins.bool = ...,
        intact: builtins.bool = ...,
        no_rexcode: builtins.bool = ...,
        attribute: builtins.int = ...,
        new_description: builtins.str = ...,
        display_desc: builtins.str = ...,
        superscript: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["limit", b"limit"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "attribute",
            b"attribute",
            "description",
            b"description",
            "display_desc",
            b"display_desc",
            "err_code",
            b"err_code",
            "format",
            b"format",
            "intact",
            b"intact",
            "limit",
            b"limit",
            "need_login",
            b"need_login",
            "need_vip",
            b"need_vip",
            "new_description",
            b"new_description",
            "no_rexcode",
            b"no_rexcode",
            "quality",
            b"quality",
            "superscript",
            b"superscript",
        ],
    ) -> None: ...

global___StreamInfo = StreamInfo

@typing_extensions.final
class StreamLimit(google.protobuf.message.Message):
    """清晰度不满足条件信息"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TITLE_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    MSG_FIELD_NUMBER: builtins.int
    title: builtins.str
    """标题"""
    uri: builtins.str
    """跳转地址"""
    msg: builtins.str
    """提示信息"""
    def __init__(
        self,
        *,
        title: builtins.str = ...,
        uri: builtins.str = ...,
        msg: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "msg", b"msg", "title", b"title", "uri", b"uri"
        ],
    ) -> None: ...

global___StreamLimit = StreamLimit

@typing_extensions.final
class UpgradeButton(google.protobuf.message.Message):
    """互动视频升级按钮信息"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TITLE_FIELD_NUMBER: builtins.int
    LINK_FIELD_NUMBER: builtins.int
    title: builtins.str
    """标题"""
    link: builtins.str
    """链接"""
    def __init__(
        self,
        *,
        title: builtins.str = ...,
        link: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "link", b"link", "title", b"title"
        ],
    ) -> None: ...

global___UpgradeButton = UpgradeButton

@typing_extensions.final
class UpgradeLimit(google.protobuf.message.Message):
    """互动视频升级提示"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    IMAGE_FIELD_NUMBER: builtins.int
    BUTTON_FIELD_NUMBER: builtins.int
    code: builtins.int
    """错误码"""
    message: builtins.str
    """错误信息"""
    image: builtins.str
    """图片url"""
    @property
    def button(self) -> global___UpgradeButton:
        """按钮信息"""
    def __init__(
        self,
        *,
        code: builtins.int = ...,
        message: builtins.str = ...,
        image: builtins.str = ...,
        button: global___UpgradeButton | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["button", b"button"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "button",
            b"button",
            "code",
            b"code",
            "image",
            b"image",
            "message",
            b"message",
        ],
    ) -> None: ...

global___UpgradeLimit = UpgradeLimit

@typing_extensions.final
class VideoInfo(google.protobuf.message.Message):
    """视频url信息"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUALITY_FIELD_NUMBER: builtins.int
    FORMAT_FIELD_NUMBER: builtins.int
    TIMELENGTH_FIELD_NUMBER: builtins.int
    VIDEO_CODECID_FIELD_NUMBER: builtins.int
    STREAM_LIST_FIELD_NUMBER: builtins.int
    DASH_AUDIO_FIELD_NUMBER: builtins.int
    DOLBY_FIELD_NUMBER: builtins.int
    VOLUME_FIELD_NUMBER: builtins.int
    quality: builtins.int
    """视频清晰度"""
    format: builtins.str
    """视频格式"""
    timelength: builtins.int
    """视频时长"""
    video_codecid: builtins.int
    """视频编码id"""
    @property
    def stream_list(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___Stream
    ]:
        """视频流"""
    @property
    def dash_audio(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___DashItem
    ]:
        """伴音流"""
    @property
    def dolby(self) -> global___DolbyItem:
        """杜比伴音流"""
    @property
    def volume(self) -> global___VolumeInfo:
        """"""
    def __init__(
        self,
        *,
        quality: builtins.int = ...,
        format: builtins.str = ...,
        timelength: builtins.int = ...,
        video_codecid: builtins.int = ...,
        stream_list: collections.abc.Iterable[global___Stream] | None = ...,
        dash_audio: collections.abc.Iterable[global___DashItem] | None = ...,
        dolby: global___DolbyItem | None = ...,
        volume: global___VolumeInfo | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "dolby", b"dolby", "volume", b"volume"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "dash_audio",
            b"dash_audio",
            "dolby",
            b"dolby",
            "format",
            b"format",
            "quality",
            b"quality",
            "stream_list",
            b"stream_list",
            "timelength",
            b"timelength",
            "video_codecid",
            b"video_codecid",
            "volume",
            b"volume",
        ],
    ) -> None: ...

global___VideoInfo = VideoInfo

@typing_extensions.final
class VolumeInfo(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MEASURED_I_FIELD_NUMBER: builtins.int
    MEASURED_LRA_FIELD_NUMBER: builtins.int
    MEASURED_TP_FIELD_NUMBER: builtins.int
    MEASURED_THRESHOLD_FIELD_NUMBER: builtins.int
    TARGET_OFFSET_FIELD_NUMBER: builtins.int
    TARGET_I_FIELD_NUMBER: builtins.int
    TARGET_TP_FIELD_NUMBER: builtins.int
    measured_i: builtins.float
    """"""
    measured_lra: builtins.float
    """"""
    measured_tp: builtins.float
    """"""
    measured_threshold: builtins.float
    """"""
    target_offset: builtins.float
    """"""
    target_i: builtins.float
    """"""
    target_tp: builtins.float
    """"""
    def __init__(
        self,
        *,
        measured_i: builtins.float = ...,
        measured_lra: builtins.float = ...,
        measured_tp: builtins.float = ...,
        measured_threshold: builtins.float = ...,
        target_offset: builtins.float = ...,
        target_i: builtins.float = ...,
        target_tp: builtins.float = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "measured_i",
            b"measured_i",
            "measured_lra",
            b"measured_lra",
            "measured_threshold",
            b"measured_threshold",
            "measured_tp",
            b"measured_tp",
            "target_i",
            b"target_i",
            "target_offset",
            b"target_offset",
            "target_tp",
            b"target_tp",
        ],
    ) -> None: ...

global___VolumeInfo = VolumeInfo
