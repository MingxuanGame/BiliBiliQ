"""
Generated by generator/gen_pydantic.py. DO NOT EDIT!
isort:skip_file
"""
import builtins
from typing import List, Dict, Any, Optional
from pydantic import BaseModel
from enum import Enum
from datetime import datetime


class AnimateIcon(BaseModel):
    """动画效果"""

    icon: builtins.str
    """icon文件"""
    json: builtins.str
    """动效json文件"""


class EntranceReply(BaseModel):
    """活动入口-响应"""

    icon: builtins.str
    """展示图标"""
    name: builtins.str
    """活动名称"""
    url: builtins.str
    """活动跳转链接"""
    animate_icon: Optional["AnimateIcon"] = None
    """动画效果"""


class EntranceReq(BaseModel):
    """活动入口-请求"""


class PrivacyReply(BaseModel):
    """"""

    message: builtins.str
    """"""


class PrivacyReq(BaseModel):
    """"""

    activity_uid: builtins.str
    """"""


class WindowReply(BaseModel):
    """首页弹窗-响应"""

    type: builtins.int
    """弹窗类型
    0:弹窗 1:普通页面
    """
    url: builtins.str
    """跳转链接"""
    report_data: builtins.str
    """上报数据字段"""


class WindowReq(BaseModel):
    """首页弹窗-请求"""


EntranceReq.update_forward_refs()
WindowReply.update_forward_refs()
EntranceReply.update_forward_refs()
AnimateIcon.update_forward_refs()
WindowReq.update_forward_refs()
PrivacyReq.update_forward_refs()
PrivacyReply.update_forward_refs()
