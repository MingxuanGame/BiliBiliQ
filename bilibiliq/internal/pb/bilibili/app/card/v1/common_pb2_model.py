"""
Generated by generator/gen_pydantic.py. DO NOT EDIT!
isort:skip_file
"""
import builtins
from typing import List, Dict, Any, Optional
from pydantic import BaseModel
from enum import Enum
from datetime import datetime
import bilibiliq.internal.pb.bilibili.app.card.v1.ad_pb2_model


class Args(BaseModel):
    """"""

    type: builtins.int
    """"""
    up_id: builtins.int
    """"""
    up_name: builtins.str
    """"""
    rid: builtins.int
    """"""
    rname: builtins.str
    """"""
    tid: builtins.int
    """"""
    tname: builtins.str
    """"""
    track_id: builtins.str
    """"""
    state: builtins.str
    """"""
    converge_type: builtins.int
    """"""
    aid: builtins.int
    """"""


class Avatar(BaseModel):
    """"""

    cover: builtins.str
    """"""
    text: builtins.str
    """"""
    uri: builtins.str
    """"""
    type: builtins.int
    """"""
    event: builtins.str
    """"""
    event_v2: builtins.str
    """"""
    defalut_cover: builtins.int
    """"""


class Base(BaseModel):
    """条目基本信息"""

    card_type: builtins.str
    """卡片类型"""
    card_goto: builtins.str
    """卡片跳转类型?"""
    goto: builtins.str
    """跳转类型
    av:视频稿件 mid:用户空间
    """
    param: builtins.str
    """目标参数"""
    cover: builtins.str
    """封面url"""
    title: builtins.str
    """标题"""
    uri: builtins.str
    """跳转uri"""
    three_point: Optional["ThreePoint"] = None
    """"""
    args: Optional["Args"] = None
    """"""
    player_args: Optional["PlayerArgs"] = None
    """"""
    idx: builtins.int
    """条目排位序号"""
    ad_info: bilibiliq.internal.pb.bilibili.app.card.v1.ad_pb2_model.AdInfo
    """"""
    mask: Optional["Mask"] = None
    """"""
    from_type: builtins.str
    """来源标识
    recommend:推荐 operation:管理?
    """
    three_point_v2: "List[ThreePointV2]"
    """"""
    three_point_v3: "List[ThreePointV3]"
    """"""
    desc_button: Optional["Button"] = None
    """"""
    three_point_v4: Optional["ThreePointV4"] = None
    """三点v4"""
    up_args: Optional["UpArgs"] = None
    """"""


class Button(BaseModel):
    """按钮信息"""

    text: builtins.str
    """文案"""
    param: builtins.str
    """参数"""
    uri: builtins.str
    """"""
    event: builtins.str
    """事件"""
    selected: builtins.int
    """"""
    type: builtins.int
    """类型"""
    event_v2: builtins.str
    """事件v2"""
    relation: Optional["Relation"] = None
    """关系信息"""


class DislikeReason(BaseModel):
    """"""

    id: builtins.int
    """"""
    name: builtins.str
    """"""


class LikeButton(BaseModel):
    """"""

    Aid: builtins.int
    """"""
    count: builtins.int
    """"""
    show_count: builtins.bool
    """"""
    event: builtins.str
    """"""
    selected: builtins.int
    """"""
    event_v2: builtins.str
    """"""


class Mask(BaseModel):
    """"""

    avatar: Optional["Avatar"] = None
    """"""
    button: Optional["Button"] = None
    """"""


class PlayerArgs(BaseModel):
    """"""

    is_live: builtins.int
    """"""
    aid: builtins.int
    """"""
    cid: builtins.int
    """"""
    sub_type: builtins.int
    """"""
    room_id: builtins.int
    """"""
    ep_id: builtins.int
    """"""
    is_preview: builtins.int
    """"""
    type: builtins.str
    """"""
    duration: builtins.int
    """"""
    season_id: builtins.int
    """"""


class ReasonStyle(BaseModel):
    """标签框信息"""

    text: builtins.str
    """文案"""
    text_color: builtins.str
    """文字颜色"""
    bg_color: builtins.str
    """背景色"""
    border_color: builtins.str
    """边框色"""
    icon_url: builtins.str
    """图标url"""
    text_color_night: builtins.str
    """文字颜色-夜间"""
    bg_color_night: builtins.str
    """背景色-夜间"""
    border_color_night: builtins.str
    """边框色-夜间"""
    icon_night_url: builtins.str
    """图标url-夜间"""
    bg_style: builtins.int
    """背景风格id
    1:无背景 2:有背景
    """
    uri: builtins.str
    """"""
    icon_bg_url: builtins.str
    """"""
    event: builtins.str
    """"""
    event_v2: builtins.str
    """"""
    right_icon_type: builtins.int
    """"""
    left_icon_type: builtins.str
    """"""


class Relation(BaseModel):
    """关系信息"""

    status: builtins.int
    """关系状态"""
    is_follow: builtins.int
    """是否关注"""
    is_followed: builtins.int
    """是否粉丝"""


class SharePlane(BaseModel):
    """分享面板信息"""

    title: builtins.str
    """标题"""
    share_subtitle: builtins.str
    """副标贴文案"""
    desc: builtins.str
    """备注"""
    cover: builtins.str
    """封面url"""
    aid: builtins.int
    """稿件avid"""
    bvid: builtins.str
    """稿件bvid"""
    share_to: Dict[builtins.str, builtins.bool]
    """允许分享方式"""
    author: builtins.str
    """UP主昵称"""
    author_id: builtins.int
    """UP主mid"""
    short_link: builtins.str
    """短连接"""
    play_number: builtins.str
    """播放次数文案"""
    first_cid: builtins.int
    """"""


class ThreePoint(BaseModel):
    """"""

    dislike_reasons: "List[DislikeReason]"
    """"""
    feedbacks: "List[DislikeReason]"
    """"""
    watch_later: builtins.int
    """稍后再看"""


class ThreePointV2(BaseModel):
    """"""

    title: builtins.str
    """"""
    subtitle: builtins.str
    """"""
    reasons: "List[DislikeReason]"
    """"""
    type: builtins.str
    """"""
    id: builtins.int
    """"""


class ThreePointV3(BaseModel):
    """"""

    title: builtins.str
    """"""
    selected_title: builtins.str
    """"""
    subtitle: builtins.str
    """"""
    reasons: "List[DislikeReason]"
    """"""
    type: builtins.str
    """"""
    id: builtins.int
    """"""
    selected: builtins.int
    """"""
    icon: builtins.str
    """"""
    selected_icon: builtins.str
    """"""
    url: builtins.str
    """"""
    default_id: builtins.int
    """"""


class ThreePointV4(BaseModel):
    """三点v4"""

    share_plane: Optional["SharePlane"] = None
    """分享面板信息"""
    watch_later: Optional["WatchLater"] = None
    """稍后再看"""


class Up(BaseModel):
    """"""

    id: builtins.int
    """"""
    name: builtins.str
    """"""
    desc: builtins.str
    """"""
    avatar: Optional["Avatar"] = None
    """"""
    official_icon: builtins.int
    """"""
    desc_button: Optional["Button"] = None
    """"""
    cooperation: builtins.str
    """"""


class UpArgs(BaseModel):
    """"""

    up_id: builtins.int
    """"""
    up_name: builtins.str
    """"""
    up_face: builtins.str
    """"""
    selected: builtins.int
    """"""


class WatchLater(BaseModel):
    """稍后再看信息"""

    aid: builtins.int
    """稿件avid"""
    bvid: builtins.str
    """稿件bvid"""


Up.update_forward_refs()
Avatar.update_forward_refs()
Relation.update_forward_refs()
LikeButton.update_forward_refs()
UpArgs.update_forward_refs()
DislikeReason.update_forward_refs()
ThreePoint.update_forward_refs()
Button.update_forward_refs()
Mask.update_forward_refs()
ReasonStyle.update_forward_refs()
SharePlane.update_forward_refs()
ThreePointV3.update_forward_refs()
Base.update_forward_refs()
ThreePointV2.update_forward_refs()
WatchLater.update_forward_refs()
Args.update_forward_refs()
PlayerArgs.update_forward_refs()
ThreePointV4.update_forward_refs()
