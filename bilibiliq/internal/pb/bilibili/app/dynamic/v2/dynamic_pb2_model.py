"""
Generated by generator/gen_pydantic.py. DO NOT EDIT!
isort:skip_file
"""
import builtins
from typing import List, Dict, Any, Optional
from pydantic import BaseModel
from enum import Enum
from datetime import datetime
import bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model


class AddButtonBgStyle(str, Enum):
    """"""

    fill = 'fill'
    """默认填充"""
    stroke = 'stroke'
    """描边"""
    gray = 'gray'
    """置灰"""


class AddButtonType(str, Enum):
    """按钮类型"""

    bt_none = 'bt_none'
    """占位"""
    bt_jump = 'bt_jump'
    """跳转"""
    bt_button = 'bt_button'
    """按钮"""


class AdditionVoteState(str, Enum):
    """投票状态"""

    addition_vote_state_none = 'addition_vote_state_none'
    """"""
    addition_vote_state_open = 'addition_vote_state_open'
    """"""
    addition_vote_state_close = 'addition_vote_state_close'
    """"""


class AdditionVoteType(str, Enum):
    """投票类型"""

    addition_vote_type_none = 'addition_vote_type_none'
    """"""
    addition_vote_type_word = 'addition_vote_type_word'
    """"""
    addition_vote_type_pic = 'addition_vote_type_pic'
    """"""
    addition_vote_type_default = 'addition_vote_type_default'
    """"""


class AdditionalButtonClickType(str, Enum):
    """附加卡按钮点击类型"""

    click_none = 'click_none'
    """通用按钮"""
    click_up = 'click_up'
    """预约卡按钮"""


class AdditionalButtonStatus(str, Enum):
    """附加卡按钮状态"""

    none = 'none'
    """"""
    uncheck = 'uncheck'
    """"""
    check = 'check'
    """"""


class AdditionalShareShowType(str, Enum):
    """"""

    st_none = 'st_none'
    """"""
    st_show = 'st_show'
    """"""


class AdditionalType(str, Enum):
    """枚举-动态附加卡"""

    additional_none = 'additional_none'
    """占位"""
    additional_type_pgc = 'additional_type_pgc'
    """附加卡-追番"""
    additional_type_goods = 'additional_type_goods'
    """附加卡-商品"""
    additional_type_vote = 'additional_type_vote'
    """附加卡投票"""
    additional_type_common = 'additional_type_common'
    """附加通用卡"""
    additional_type_esport = 'additional_type_esport'
    """附加电竞卡"""
    additional_type_up_rcmd = 'additional_type_up_rcmd'
    """附加UP主推荐卡"""
    additional_type_ugc = 'additional_type_ugc'
    """附加卡-ugc"""
    additional_type_up_reservation = 'additional_type_up_reservation'
    """UP主预约卡"""


class CampusTabType(str, Enum):
    """"""

    campus_none = 'campus_none'
    """"""
    campus_school = 'campus_school'
    """"""
    campus_dynamic = 'campus_dynamic'
    """"""
    campus_account = 'campus_account'
    """"""
    campus_billboard = 'campus_billboard'
    """"""
    campus_topic = 'campus_topic'
    """"""


class CoverIcon(str, Enum):
    """"""

    cover_icon_none = 'cover_icon_none'
    """占位 啥都不展示"""
    cover_icon_play = 'cover_icon_play'
    """播放icon"""


class DescType(str, Enum):
    """文本类型"""

    desc_type_none = 'desc_type_none'
    """占位"""
    desc_type_text = 'desc_type_text'
    """文本"""
    desc_type_aite = 'desc_type_aite'
    """@"""
    desc_type_lottery = 'desc_type_lottery'
    """抽奖"""
    desc_type_vote = 'desc_type_vote'
    """投票"""
    desc_type_topic = 'desc_type_topic'
    """话题"""
    desc_type_goods = 'desc_type_goods'
    """商品"""
    desc_type_bv = 'desc_type_bv'
    """bv"""
    desc_type_av = 'desc_type_av'
    """av"""
    desc_type_emoji = 'desc_type_emoji'
    """表情"""
    desc_type_user = 'desc_type_user'
    """外露用户"""
    desc_type_cv = 'desc_type_cv'
    """专栏"""
    desc_type_vc = 'desc_type_vc'
    """小视频"""
    desc_type_web = 'desc_type_web'
    """网址"""
    desc_type_taobao = 'desc_type_taobao'
    """淘宝"""
    desc_type_mail = 'desc_type_mail'
    """邮箱"""
    desc_type_ogv_season = 'desc_type_ogv_season'
    """番剧season"""
    desc_type_ogv_ep = 'desc_type_ogv_ep'
    """番剧ep"""
    desc_type_search_word = 'desc_type_search_word'
    """"""


class DisableState(str, Enum):
    """"""

    highlight = 'highlight'
    """高亮"""
    gary = 'gary'
    """置灰(按钮不可点击)"""


class DynExtendType(str, Enum):
    """动态小卡类型"""

    dyn_ext_type_none = 'dyn_ext_type_none'
    """占位"""
    dyn_ext_type_topic = 'dyn_ext_type_topic'
    """话题小卡"""
    dyn_ext_type_lbs = 'dyn_ext_type_lbs'
    """lbs小卡"""
    dyn_ext_type_hot = 'dyn_ext_type_hot'
    """热门小卡"""
    dyn_ext_type_game = 'dyn_ext_type_game'
    """游戏小卡"""
    dyn_ext_type_common = 'dyn_ext_type_common'
    """通用小卡"""
    dyn_ext_type_biliCut = 'dyn_ext_type_biliCut'
    """必剪小卡"""
    dyn_ext_type_ogv = 'dyn_ext_type_ogv'
    """ogv小卡"""
    dyn_ext_type_auto_ogv = 'dyn_ext_type_auto_ogv'
    """自动附加ogv小卡"""


class DynModuleType(str, Enum):
    """动态模块类型"""

    module_none = 'module_none'
    """占位"""
    module_author = 'module_author'
    """发布人模块"""
    module_dispute = 'module_dispute'
    """争议小黄条"""
    module_desc = 'module_desc'
    """描述文案"""
    module_dynamic = 'module_dynamic'
    """动态卡片"""
    module_forward = 'module_forward'
    """转发模块"""
    module_likeUser = 'module_likeUser'
    """点赞用户(废弃)"""
    module_extend = 'module_extend'
    """小卡模块"""
    module_additional = 'module_additional'
    """附加卡"""
    module_stat = 'module_stat'
    """计数信息"""
    module_fold = 'module_fold'
    """折叠"""
    module_comment = 'module_comment'
    """评论外露(废弃)"""
    module_interaction = 'module_interaction'
    """外露交互模块(点赞、评论)"""
    module_author_forward = 'module_author_forward'
    """转发卡的发布人模块"""
    module_ad = 'module_ad'
    """广告卡模块"""
    module_banner = 'module_banner'
    """通栏模块"""
    module_item_null = 'module_item_null'
    """获取物料失败模块"""
    module_share_info = 'module_share_info'
    """分享组件"""
    module_recommend = 'module_recommend'
    """相关推荐模块"""
    module_stat_forward = 'module_stat_forward'
    """转发卡计数信息"""
    module_top = 'module_top'
    """顶部模块"""
    module_bottom = 'module_bottom'
    """底部模块"""
    module_story = 'module_story'
    """"""
    module_topic = 'module_topic'
    """"""
    module_topic_details_ext = 'module_topic_details_ext'
    """"""
    module_top_tag = 'module_top_tag'
    """"""
    module_topic_brief = 'module_topic_brief'
    """"""
    module_title = 'module_title'
    """"""


class DynUriType(str, Enum):
    """"""

    dyn_uri_type_none = 'dyn_uri_type_none'
    """"""
    dyn_uri_type_direct = 'dyn_uri_type_direct'
    """直接跳转对应uri"""
    dyn_uri_type_suffix = 'dyn_uri_type_suffix'
    """作为后缀拼接"""


class DynamicType(str, Enum):
    """枚举-动态类型"""

    dyn_none = 'dyn_none'
    """占位"""
    forward = 'forward'
    """转发"""
    av = 'av'
    """稿件: ugc、小视频、短视频、UGC转PGC"""
    pgc = 'pgc'
    """pgc：番剧、PGC番剧、PGC电影、PGC电视剧、PGC国创、PGC纪录片"""
    courses = 'courses'
    """付费更新批次"""
    fold = 'fold'
    """折叠"""
    word = 'word'
    """纯文字"""
    draw = 'draw'
    """图文"""
    article = 'article'
    """专栏 原仅phone端"""
    music = 'music'
    """音频 原仅phone端"""
    common_square = 'common_square'
    """通用卡 方形"""
    common_vertical = 'common_vertical'
    """通用卡 竖形"""
    live = 'live'
    """直播卡 只有转发态"""
    medialist = 'medialist'
    """播单 原仅phone端 只有转发态"""
    courses_season = 'courses_season'
    """付费更新批次 只有转发态"""
    ad = 'ad'
    """广告卡"""
    applet = 'applet'
    """小程序卡"""
    subscription = 'subscription'
    """订阅卡"""
    live_rcmd = 'live_rcmd'
    """直播推荐卡"""
    banner = 'banner'
    """通栏"""
    ugc_season = 'ugc_season'
    """合集卡"""
    subscription_new = 'subscription_new'
    """新订阅卡"""
    story = 'story'
    """"""
    topic_rcmd = 'topic_rcmd'
    """"""


class EmojiType(str, Enum):
    """表情包类型"""

    emoji_none = 'emoji_none'
    """占位"""
    emoji_old = 'emoji_old'
    """emoji旧类型"""
    emoji_new = 'emoji_new'
    """emoji新类型"""
    vip = 'vip'
    """大会员表情"""


class EspaceStyle(str, Enum):
    """附加大卡-电竞卡样式"""

    moba = 'moba'
    """moba类"""


class FoldType(str, Enum):
    """折叠类型"""

    FoldTypeZore = 'FoldTypeZore'
    """占位"""
    FoldTypePublish = 'FoldTypePublish'
    """用户发布折叠"""
    FoldTypeFrequent = 'FoldTypeFrequent'
    """转发超频折叠"""
    FoldTypeUnite = 'FoldTypeUnite'
    """联合投稿折叠"""
    FoldTypeLimit = 'FoldTypeLimit'
    """动态受限折叠"""


class FollowType(str, Enum):
    """"""

    ft_not_follow = 'ft_not_follow'
    """"""
    ft_follow = 'ft_follow'
    """"""


class HighlightTextStyle(str, Enum):
    """文本高亮枚举"""

    style_none = 'style_none'
    """默认"""
    style_highlight = 'style_highlight'
    """高亮"""


class ImageStyle(str, Enum):
    """枚举-附加卡样式"""

    add_style_vertical = 'add_style_vertical'
    """"""
    add_style_square = 'add_style_square'
    """"""


class LightFromType(str, Enum):
    """"""

    from_login = 'from_login'
    """"""
    from_unlogin = 'from_unlogin'
    """"""


class LiveState(str, Enum):
    """直播状态"""

    live_none = 'live_none'
    """未直播"""
    live_live = 'live_live'
    """直播中"""
    live_rotation = 'live_rotation'
    """轮播中"""


class LocalIconType(str, Enum):
    """外露模块类型"""

    local_icon_comment = 'local_icon_comment'
    """"""
    local_icon_like = 'local_icon_like'
    """"""


class MdlDynCommonType(str, Enum):
    """"""

    mdl_dyn_common_none = 'mdl_dyn_common_none'
    """"""
    mdl_dyn_common_square = 'mdl_dyn_common_square'
    """"""
    mdl_dyn_common_vertica = 'mdl_dyn_common_vertica'
    """"""


class MdlDynDrawTagType(str, Enum):
    """图文标签类型"""

    mdl_draw_tag_none = 'mdl_draw_tag_none'
    """占位"""
    mdl_draw_tag_common = 'mdl_draw_tag_common'
    """普通标签"""
    mdl_draw_tag_goods = 'mdl_draw_tag_goods'
    """商品标签"""
    mdl_draw_tag_user = 'mdl_draw_tag_user'
    """用户昵称"""
    mdl_draw_tag_topic = 'mdl_draw_tag_topic'
    """话题名称"""
    mdl_draw_tag_lbs = 'mdl_draw_tag_lbs'
    """lbs标签"""


class MdlDynSubscriptionNewStyle(str, Enum):
    """"""

    mdl_dyn_subscription_new_style_nont = 'mdl_dyn_subscription_new_style_nont'
    """占位"""
    mdl_dyn_subscription_new_style_live = 'mdl_dyn_subscription_new_style_live'
    """直播"""
    mdl_dyn_subscription_new_style_draw = 'mdl_dyn_subscription_new_style_draw'
    """图文"""


class MediaType(str, Enum):
    """播放器类型"""

    MediaTypeNone = 'MediaTypeNone'
    """本地"""
    MediaTypeUGC = 'MediaTypeUGC'
    """UGC"""
    MediaTypePGC = 'MediaTypePGC'
    """PGC"""
    MediaTypeLive = 'MediaTypeLive'
    """直播"""
    MediaTypeVCS = 'MediaTypeVCS'
    """小视频"""


class ModuleAuthorBadgeType(str, Enum):
    """右侧操作区域样式枚举"""

    module_author_badge_type_none = 'module_author_badge_type_none'
    """占位"""
    module_author_badge_type_threePoint = 'module_author_badge_type_threePoint'
    """三点"""
    module_author_badge_type_button = 'module_author_badge_type_button'
    """按钮类型"""
    module_author_badge_type_weight = 'module_author_badge_type_weight'
    """提权"""


class ModuleBannerType(str, Enum):
    """动态列表-通栏类型"""

    module_banner_type_none = 'module_banner_type_none'
    """"""
    module_banner_type_user = 'module_banner_type_user'
    """"""


class ModuleDynamicType(str, Enum):
    """动态详情模块类型"""

    mdl_dyn_archive = 'mdl_dyn_archive'
    """稿件"""
    mdl_dyn_pgc = 'mdl_dyn_pgc'
    """pgc"""
    mdl_dyn_cour_season = 'mdl_dyn_cour_season'
    """付费课程-系列"""
    mdl_dyn_cour_batch = 'mdl_dyn_cour_batch'
    """付费课程-批次"""
    mdl_dyn_forward = 'mdl_dyn_forward'
    """转发卡"""
    mdl_dyn_draw = 'mdl_dyn_draw'
    """图文"""
    mdl_dyn_article = 'mdl_dyn_article'
    """专栏"""
    mdl_dyn_music = 'mdl_dyn_music'
    """音频"""
    mdl_dyn_common = 'mdl_dyn_common'
    """通用卡方"""
    mdl_dyn_live = 'mdl_dyn_live'
    """直播卡"""
    mdl_dyn_medialist = 'mdl_dyn_medialist'
    """播单"""
    mdl_dyn_applet = 'mdl_dyn_applet'
    """小程序卡"""
    mdl_dyn_subscription = 'mdl_dyn_subscription'
    """订阅卡"""
    mdl_dyn_live_rcmd = 'mdl_dyn_live_rcmd'
    """直播推荐卡"""
    mdl_dyn_ugc_season = 'mdl_dyn_ugc_season'
    """UGC合集"""
    mdl_dyn_subscription_new = 'mdl_dyn_subscription_new'
    """订阅卡"""


class NetworkType(str, Enum):

    NT_UNKNOWN = 'NT_UNKNOWN'
    """"""
    WIFI = 'WIFI'
    """"""
    CELLULAR = 'CELLULAR'
    """"""
    OFFLINE = 'OFFLINE'
    """"""
    OTHERNET = 'OTHERNET'
    """"""
    ETHERNET = 'ETHERNET'
    """"""


class RcmdType(str, Enum):
    """推荐模块数据类型"""

    rcmd_archive = 'rcmd_archive'
    """稿件"""
    rcmd_dynamic = 'rcmd_dynamic'
    """动态"""


class Refresh(str, Enum):
    """刷新方式"""

    refresh_new = 'refresh_new'
    """刷新列表"""
    refresh_history = 'refresh_history'
    """请求历史"""


class RelationStatus(str, Enum):
    """关注关系 枚举"""

    relation_status_none = 'relation_status_none'
    """1-未关注 2-关注 3-被关注 4-互相关注 5-特别关注"""
    relation_status_nofollow = 'relation_status_nofollow'
    relation_status_follow = 'relation_status_follow'
    relation_status_followed = 'relation_status_followed'
    relation_status_mutual_concern = 'relation_status_mutual_concern'
    relation_status_special = 'relation_status_special'


class RepostType(str, Enum):
    """评论类型"""

    repost_hot = 'repost_hot'
    """热门评论"""
    repost_general = 'repost_general'
    """普通评论"""


class ReserveRelationLotteryType(str, Enum):
    """"""

    reserve_relation_lottery_type_default = (
        'reserve_relation_lottery_type_default'
    )
    """"""
    reserve_relation_lottery_type_cron = 'reserve_relation_lottery_type_cron'
    """"""


class ReserveType(str, Enum):
    """"""

    reserve_none = 'reserve_none'
    """占位"""
    reserve_recall = 'reserve_recall'
    """预约召回"""


class ShowType(str, Enum):
    """"""

    show_type_none = 'show_type_none'
    """"""
    show_type_backup = 'show_type_backup'
    """"""


class StyleType(str, Enum):
    """"""

    STYLE_TYPE_NONE = 'STYLE_TYPE_NONE'
    """"""
    STYLE_TYPE_LIVE = 'STYLE_TYPE_LIVE'
    """"""
    STYLE_TYPE_DYN_UP = 'STYLE_TYPE_DYN_UP'
    """"""


class TFType(str, Enum):
    """"""

    U_CARD = 'U_CARD'
    """"""
    U_PKG = 'U_PKG'
    """"""
    C_CARD = 'C_CARD'
    """"""
    C_PKG = 'C_PKG'
    """"""
    T_CARD = 'T_CARD'
    """"""
    T_PKG = 'T_PKG'
    """"""


class ThreePointAttentionStatus(str, Enum):
    """枚举-三点关注状态"""

    tp_not_attention = 'tp_not_attention'
    """"""
    tp_attention = 'tp_attention'
    """"""


class ThreePointType(str, Enum):
    """三点类型"""

    tp_none = 'tp_none'
    """占位"""
    background = 'background'
    """使用此背景"""
    auto_play = 'auto_play'
    """自动播放"""
    share = 'share'
    """分享"""
    wait = 'wait'
    """稍后再播"""
    attention = 'attention'
    """关注"""
    report = 'report'
    """举报"""
    delete = 'delete'
    """删除"""
    dislike = 'dislike'
    """不感兴趣"""
    favorite = 'favorite'
    """收藏"""
    top = 'top'
    """置顶"""
    comment = 'comment'
    """评论"""
    hide = 'hide'
    """"""
    campus_delete = 'campus_delete'
    """"""
    topic_irrelevant = 'topic_irrelevant'
    """"""


class ThumbType(str, Enum):
    """"""

    cancel = 'cancel'
    """"""
    thumb = 'thumb'
    """"""


class TopType(str, Enum):
    """状态"""

    top_none = 'top_none'
    """默认 置顶"""
    top_cancel = 'top_cancel'
    """取消置顶"""


class UserItemType(str, Enum):
    """用户类型"""

    user_item_type_none = 'user_item_type_none'
    """"""
    user_item_type_live = 'user_item_type_live'
    """"""
    user_item_type_live_custom = 'user_item_type_live_custom'
    """"""
    user_item_type_normal = 'user_item_type_normal'
    """"""
    user_item_type_extend = 'user_item_type_extend'
    """"""


class VideoSubType(str, Enum):
    """番剧类型"""

    VideoSubTypeNone = 'VideoSubTypeNone'
    """没有子类型"""
    VideoSubTypeBangumi = 'VideoSubTypeBangumi'
    """番剧"""
    VideoSubTypeMovie = 'VideoSubTypeMovie'
    """电影"""
    VideoSubTypeDocumentary = 'VideoSubTypeDocumentary'
    """纪录片"""
    VideoSubTypeDomestic = 'VideoSubTypeDomestic'
    """国创"""
    VideoSubTypeTeleplay = 'VideoSubTypeTeleplay'
    """电视剧"""


class VideoType(str, Enum):
    """视频类型"""

    video_type_general = 'video_type_general'
    """普通视频"""
    video_type_dynamic = 'video_type_dynamic'
    """动态视频"""
    video_type_playback = 'video_type_playback'
    """直播回放视频"""
    video_type_story = 'video_type_story'
    """"""


class VoteStatus(str, Enum):
    """状态"""

    normal = 'normal'
    """正常"""
    anonymous = 'anonymous'
    """匿名"""


class WeightType(str, Enum):
    """枚举-提权类型"""

    weight_none = 'weight_none'
    """默认 占位"""
    weight_dislike = 'weight_dislike'
    """不感兴趣"""
    weight_jump = 'weight_jump'
    """跳链"""


class AdParam(BaseModel):
    """综合页请求广告所需字段，由客户端-网关透传"""

    ad_extra: builtins.str
    """综合页请求广告所需字段，由客户端-网关透传"""
    request_id: builtins.str
    """request_id"""


class AdditionCommon(BaseModel):
    """动态-附加卡-通用卡"""

    head_text: builtins.str
    """头部说明文案"""
    title: builtins.str
    """标题"""
    image_url: builtins.str
    """展示图"""
    desc_text_1: builtins.str
    """描述文字1"""
    desc_text_2: builtins.str
    """描述文字2"""
    url: builtins.str
    """点击跳转链接"""
    button: Optional["AdditionalButton"] = None
    """按钮"""
    head_icon: builtins.str
    """头部icon"""
    style: ImageStyle
    """style"""
    type: builtins.str
    """动态本身的类型 type"""
    card_type: builtins.str
    """附加卡类型
    ogv manga
    """


class AdditionEsport(BaseModel):
    """动态-附加卡-电竞卡"""

    style: EspaceStyle
    """电竞类型"""
    addition_esport_moba: Optional["AdditionEsportMoba"] = None
    """moba类"""
    type: builtins.str
    """动态本身的类型 type"""
    card_type: builtins.str
    """附加卡类型
    ogv manga
    """


class AdditionEsportMoba(BaseModel):
    """动态-附加卡-电竞卡-moba类"""

    head_text: builtins.str
    """头部说明文案"""
    title: builtins.str
    """标题"""
    match_team: "List[MatchTeam]"
    """战队列表"""
    addition_esport_moba_status: Optional["AdditionEsportMobaStatus"] = None
    """比赛信息"""
    uri: builtins.str
    """卡片跳转"""
    button: Optional["AdditionalButton"] = None
    """按钮"""
    sub_title: builtins.str
    """副标题"""
    type: builtins.str
    """动态本身的类型 type"""
    card_type: builtins.str
    """附加卡类型"""
    head_icon: builtins.str
    """附加卡图标"""


class AdditionEsportMobaStatus(BaseModel):
    """动态-附加卡-电竞卡-moba类-比赛信息"""

    addition_esport_moba_status_desc: "List[AdditionEsportMobaStatusDesc]"
    """文案类"""
    title: builtins.str
    """比赛状态文案"""
    status: builtins.int
    """比赛状态状态"""
    color: builtins.str
    """日间色值"""
    night_color: builtins.str
    """夜间色值"""


class AdditionEsportMobaStatusDesc(BaseModel):
    """动态-附加卡-电竞卡-moba类-比赛信息-文案类"""

    title: builtins.str
    """文案"""
    color: builtins.str
    """日间色值"""
    night_color: builtins.str
    """夜间色值"""


class AdditionGoods(BaseModel):
    """动态-附加卡-商品卡"""

    rcmd_desc: builtins.str
    """推荐文案"""
    goods_items: "List[GoodsItem]"
    """商品信息"""
    card_type: builtins.str
    """附加卡类型"""
    icon: builtins.str
    """头部icon"""
    uri: builtins.str
    """商品附加卡整卡跳转"""
    source_type: builtins.int
    """商品类型
    1:淘宝 2:会员购，注：实际是获取的goods_items里面的第一个source_type
    """


class AdditionUP(BaseModel):
    """up主预约发布卡"""

    title: builtins.str
    """标题"""
    desc_text_1: Optional["HighlightText"] = None
    """高亮文本，描述文字1"""
    desc_text_2: builtins.str
    """描述文字2"""
    url: builtins.str
    """点击跳转链接"""
    button: Optional["AdditionalButton"] = None
    """按钮"""
    card_type: builtins.str
    """附加卡类型"""
    reserve_total: builtins.int
    """预约人数(用于预约人数变化)"""
    act_skin: Optional["AdditionalActSkin"] = None
    """活动皮肤"""
    rid: builtins.int
    """预约id"""
    lottery_type: builtins.int
    """"""
    desc_text3: Optional["HighlightText"] = None
    """"""
    up_mid: builtins.int
    """"""
    user_info: Optional["AdditionUserInfo"] = None
    """"""
    dynamic_id: builtins.str
    """"""
    show_text2: builtins.bool
    """"""
    dyn_type: builtins.int
    """"""
    business_id: builtins.str
    """"""


class AdditionUgc(BaseModel):
    """动态-附加卡-UGC视频附加卡"""

    head_text: builtins.str
    """说明文案"""
    title: builtins.str
    """稿件标题"""
    cover: builtins.str
    """封面"""
    desc_text_1: builtins.str
    """描述文字1"""
    desc_text_2: builtins.str
    """描述文字2"""
    uri: builtins.str
    """接秒开"""
    duration: builtins.str
    """时长"""
    line_feed: builtins.bool
    """标题支持换行-标题支持单行和双行，本期不支持填充up昵称，支持双行展示，字段默认为true"""
    card_type: builtins.str
    """附加卡类型"""


class AdditionUserInfo(BaseModel):
    """"""

    name: builtins.str
    """"""
    face: builtins.str
    """"""


class AdditionVote(BaseModel):
    """动态-附加卡-投票"""

    image_url: builtins.str
    """封面图"""
    title: builtins.str
    """标题"""
    text_1: builtins.str
    """展示项1"""
    button_text: builtins.str
    """button文案"""
    url: builtins.str
    """点击跳转链接"""


class AdditionVote2(BaseModel):
    """动态模块-投票"""

    addition_vote_type: AdditionVoteType
    """投票类型"""
    vote_id: builtins.int
    """投票ID"""
    title: builtins.str
    """标题"""
    label: builtins.str
    """已过期： xxx人参与· 投票已过期。button 展示去查看
    未过期： xxx人参与· 剩xx天xx时xx分。button展示去投票
    """
    deadline: builtins.int
    """剩余时间"""
    open_text: builtins.str
    """生效文案"""
    close_text: builtins.str
    """过期文案"""
    voted_text: builtins.str
    """已投票"""
    state: AdditionVoteState
    """投票状态"""
    addition_vote_word: Optional["AdditionVoteWord"] = None
    """"""
    addition_vote_pic: Optional["AdditionVotePic"] = None
    """"""
    addition_vote_defaule: Optional["AdditionVoteDefaule"] = None
    """"""
    biz_type: builtins.int
    """业务类型
    0:动态投票 1:话题h5组件
    """
    total: builtins.int
    """投票总人数"""
    card_type: builtins.str
    """附加卡类型"""
    tips: builtins.str
    """异常提示"""
    uri: builtins.str
    """跳转地址"""
    is_voted: builtins.bool
    """是否投票"""
    choice_cnt: builtins.int
    """投票最多多选个数，单选为1"""
    defaule_select_share: builtins.bool
    """是否默认选中分享到动态"""


class AdditionVoteDefaule(BaseModel):
    """外露投票"""

    cover: List[builtins.str]
    """图片 多张"""


class AdditionVotePic(BaseModel):
    """外露图片类型"""

    item: "List[AdditionVotePicItem]"
    """图片投票详情"""


class AdditionVotePicItem(BaseModel):
    """图片投票详情"""

    opt_idx: builtins.int
    """选项索引，从1开始"""
    cover: builtins.str
    """图片"""
    is_vote: builtins.bool
    """选中状态"""
    total: builtins.int
    """人数"""
    persent: builtins.float
    """占比"""
    title: builtins.str
    """标题文案"""
    is_max_option: builtins.bool
    """是否投票人数最多的选项"""


class AdditionVoteWord(BaseModel):
    """外露文字类型"""

    item: "List[AdditionVoteWordItem]"
    """外露文字投票详情"""


class AdditionVoteWordItem(BaseModel):
    """外露文字投票详情"""

    opt_idx: builtins.int
    """选项索引，从1开始"""
    title: builtins.str
    """文案"""
    is_vote: builtins.bool
    """选中状态"""
    total: builtins.int
    """人数"""
    persent: builtins.float
    """占比"""
    is_max_option: builtins.bool
    """是否投票人数最多的选项"""


class AdditionalActSkin(BaseModel):
    """活动皮肤"""

    svga: builtins.str
    """动画SVGA资源"""
    last_image: builtins.str
    """动画SVGA最后一帧图片资源"""
    play_times: builtins.int
    """动画播放次数"""


class AdditionalButton(BaseModel):
    """动态-附加卡-按钮"""

    type: AddButtonType
    """按钮类型"""
    jump_style: Optional["AdditionalButtonStyle"] = None
    """jump-跳转样式"""
    jump_url: builtins.str
    """jump-跳转链接"""
    uncheck: Optional["AdditionalButtonStyle"] = None
    """button-未点样式"""
    check: Optional["AdditionalButtonStyle"] = None
    """button-已点样式"""
    status: AdditionalButtonStatus
    """button-当前状态"""
    click_type: AdditionalButtonClickType
    """按钮点击样式"""


class AdditionalButtonInteractive(BaseModel):
    """"""

    popups: builtins.str
    """是否弹窗"""
    confirm: builtins.str
    """弹窗确认文案"""
    cancel: builtins.str
    """弹窗取消文案"""
    desc: builtins.str
    """"""


class AdditionalButtonShare(BaseModel):
    """"""

    show: builtins.int
    """"""
    icon: builtins.str
    """"""
    text: builtins.str
    """"""


class AdditionalButtonStyle(BaseModel):
    """动态-附加卡-按钮样式"""

    icon: builtins.str
    """icon"""
    text: builtins.str
    """文案"""
    interactive: Optional["AdditionalButtonInteractive"] = None
    """按钮点击交互"""
    bg_style: AddButtonBgStyle
    """当前按钮填充样式"""
    toast: builtins.str
    """toast文案, 当disable=1时有效"""
    disable: DisableState
    """当前按钮样式,
    0:高亮 1:置灰(按钮不可点击)
    """
    share: Optional["AdditionalButtonShare"] = None
    """"""


class AdditionalPGC(BaseModel):
    """动态-附加卡-番剧卡"""

    head_text: builtins.str
    """头部说明文案"""
    title: builtins.str
    """标题"""
    image_url: builtins.str
    """展示图"""
    desc_text_1: builtins.str
    """描述文字1"""
    desc_text_2: builtins.str
    """描述文字2"""
    url: builtins.str
    """点击跳转链接"""
    button: Optional["AdditionalButton"] = None
    """按钮"""
    head_icon: builtins.str
    """头部icon"""
    style: ImageStyle
    """style"""
    type: builtins.str
    """动态本身的类型 type"""


class AlumniDynamicsReply(BaseModel):
    """"""

    list: "List[DynamicItem]"
    """"""
    toast: builtins.str
    """"""


class AlumniDynamicsReq(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    first_time: builtins.int
    """"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """"""
    local_time: builtins.int
    """"""
    page: builtins.int
    """"""


class CampusBannerInfo(BaseModel):
    """"""

    image: builtins.str
    """"""
    jump_url: builtins.str
    """"""


class CampusBillBoardReply(BaseModel):
    """"""

    title: builtins.str
    """"""
    help_uri: builtins.str
    """"""
    campus_name: builtins.str
    """"""
    build_time: builtins.int
    """"""
    version_code: builtins.str
    """"""
    list: "List[OfficialItem]"
    """"""
    share_uri: builtins.str
    """"""
    bind_notice: builtins.int
    """"""
    update_toast: builtins.str
    """"""
    campus_id: builtins.int
    """"""


class CampusBillBoardReq(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    version_code: builtins.str
    """"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """"""


class CampusBillboardInternalReq(BaseModel):
    """"""

    mid: builtins.int
    """"""
    campus_id: builtins.int
    """"""
    version_code: builtins.str
    """"""


class CampusFeedbackInfo(BaseModel):
    """"""

    biz_type: builtins.int
    """"""
    biz_id: builtins.int
    """"""
    campus_id: builtins.int
    """"""
    reason: builtins.str
    """"""


class CampusFeedbackReply(BaseModel):
    """"""

    message: builtins.str
    """"""


class CampusFeedbackReq(BaseModel):
    """"""

    infos: "List[CampusFeedbackInfo]"
    """"""


class CampusInfo(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    campus_name: builtins.str
    """"""
    desc: builtins.str
    """"""
    online: builtins.int
    """"""


class CampusLabel(BaseModel):
    """"""

    text: builtins.str
    """"""
    url: builtins.str
    """"""
    desc: builtins.str
    """"""


class CampusMateLikeListReply(BaseModel):
    """"""

    list: "List[ModuleAuthor]"
    """"""


class CampusMateLikeListReq(BaseModel):
    """"""

    dynamic_id: builtins.int
    """"""


class CampusNoticeInfo(BaseModel):
    """"""

    title: builtins.str
    """"""
    desc: builtins.str
    """"""
    button: Optional["CampusLabel"] = None
    """"""


class CampusRcmdFeedReply(BaseModel):
    """"""

    list: "List[DynamicItem]"
    """"""
    toast: builtins.str
    """"""
    guide_bar: Optional["GuideBarInfo"] = None
    """"""
    has_more: builtins.bool
    """"""
    update: builtins.bool
    """"""


class CampusRcmdFeedReq(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    first_time: builtins.int
    """"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """"""
    local_time: builtins.int
    """"""
    page: builtins.int
    """"""
    scroll: builtins.int
    """"""
    view_dyn_id: builtins.str
    """"""


class CampusRcmdInfo(BaseModel):
    """"""

    title: builtins.str
    """"""
    items: "List[CampusRcmdItem]"
    """"""


class CampusRcmdItem(BaseModel):
    """"""

    title: builtins.str
    """"""
    items: "List[RcmdItem]"
    """"""
    campus_id: builtins.int
    """"""
    entry_label: Optional["CampusLabel"] = None
    """"""


class CampusRcmdReply(BaseModel):
    """"""

    top: Optional["CampusRcmdTop"] = None
    """"""
    rcmd: Optional["CampusRcmdInfo"] = None
    """"""
    campus_top: Optional["CampusTop"] = None
    """"""
    page_type: builtins.int
    """"""


class CampusRcmdReq(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    campus_name: builtins.str
    """"""
    lat: builtins.float
    """"""
    lng: builtins.float
    """"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """"""


class CampusRcmdTop(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    campus_name: builtins.str
    """"""
    title: builtins.str
    """"""
    desc: builtins.str
    """"""
    type: builtins.int
    """"""
    button: Optional["RcmdTopButton"] = None
    """"""
    switch_label: Optional["CampusLabel"] = None
    """"""
    notice_label: Optional["CampusLabel"] = None
    """"""
    desc2: builtins.str
    """"""
    desc3: builtins.str
    """"""
    invite_label: Optional["CampusLabel"] = None
    """"""
    reserve_label: Optional["CampusLabel"] = None
    """"""
    reserve_number: builtins.int
    """"""


class CampusRedDotReply(BaseModel):
    """"""

    red_dot: builtins.int
    """"""


class CampusRedDotReq(BaseModel):
    """"""

    campus_id: builtins.int
    """"""


class CampusShowTabInfo(BaseModel):
    """"""

    name: builtins.str
    """"""
    url: builtins.str
    """"""
    type: builtins.int
    """"""
    red_dot: builtins.int
    """"""


class CampusTop(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    campus_name: builtins.str
    """"""
    tabs: "List[CampusShowTabInfo]"
    """"""
    switch_label: Optional["CampusLabel"] = None
    """"""
    title: builtins.str
    """"""
    banner: "List[CampusBannerInfo]"
    """"""
    invite_label: Optional["CampusLabel"] = None
    """"""
    notice: Optional["CampusNoticeInfo"] = None
    """"""
    topic_square: Optional["TopicSquareInfo"] = None
    """"""
    campus_badge: builtins.str
    """"""
    campus_background: builtins.str
    """"""


class CampusTopicRcmdFeedReply(BaseModel):
    """"""

    list: "List[DynamicItem]"
    """"""
    toast: builtins.str
    """"""
    has_more: builtins.bool
    """"""
    offset: builtins.str
    """"""


class CampusTopicRcmdFeedReq(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    offset: builtins.str
    """"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """"""
    local_time: builtins.int
    """"""


class CardVideoDynList(BaseModel):
    """动态卡片列表"""

    list: "List[DynamicItem]"
    """动态列表"""
    update_num: builtins.int
    """更新的动态数"""
    history_offset: builtins.str
    """历史偏移"""
    update_baseline: builtins.str
    """更新基础信息"""
    has_more: builtins.bool
    """是否还有更多数据"""


class CardVideoFollowList(BaseModel):
    """视频页-我的追番"""

    view_all_link: builtins.str
    """查看全部(跳转链接)"""
    list: "List[FollowListItem]"
    """追番列表"""


class CardVideoUpList(BaseModel):
    """视频页-最近访问"""

    title: builtins.str
    """标题展示文案"""
    list: "List[UpListItem]"
    """up主列表"""
    footprint: builtins.str
    """服务端生成的透传上报字段"""
    show_live_num: builtins.int
    """直播数"""
    more_label: "UpListMoreLabel"
    """跳转label"""
    title_switch: builtins.int
    """标题开关(综合页)"""
    show_more_label: builtins.bool
    """是否展示右上角查看更多label"""
    show_in_personal: builtins.bool
    """是否在快速消费页查看更多按钮"""
    show_more_button: builtins.bool
    """是否展示右侧查看更多按钮"""


class ChannelInfo(BaseModel):
    """"""

    channel_id: builtins.int
    """"""
    channel_name: builtins.str
    """"""
    desc: builtins.str
    """"""
    is_atten: builtins.bool
    """"""
    type_icon: builtins.str
    """"""
    items: "List[RcmdItem]"
    """"""
    icon: builtins.str
    """"""
    jump_uri: builtins.str
    """"""


class CmtShowItem(BaseModel):
    """评论外露展示项"""

    uid: builtins.int
    """用户mid"""
    uname: builtins.str
    """用户昵称"""
    uri: builtins.str
    """点击跳转链接"""
    comment: builtins.str
    """评论内容"""


class CommentDetail(BaseModel):
    """精选评论区"""

    can_modify: builtins.bool
    """该功能能不能用"""
    status: builtins.int
    """up关闭评论区功能 1允许关闭 0允许开放
    精选评论区功能 1允许停止评论精选 0允许评论精选
    """


class DecoCardFan(BaseModel):
    """装扮卡片-粉丝勋章信息"""

    is_fan: builtins.int
    """是否是粉丝"""
    number: builtins.int
    """数量"""
    number_str: builtins.str
    """数量 str"""
    color: builtins.str
    """颜色"""


class DecorateCard(BaseModel):
    """装扮卡片"""

    id: builtins.int
    """装扮卡片id"""
    card_url: builtins.str
    """装扮卡片链接"""
    jump_url: builtins.str
    """装扮卡片点击跳转链接"""
    fan: Optional["DecoCardFan"] = None
    """粉丝样式"""


class Description(BaseModel):
    """文本描述"""

    text: builtins.str
    """文本内容"""
    type: DescType
    """文本类型"""
    uri: builtins.str
    """点击跳转链接"""
    emoji_type: EmojiType
    """emoji类型"""
    goods_type: builtins.str
    """商品类型"""
    icon_url: builtins.str
    """前置Icon"""
    icon_name: builtins.str
    """icon_name"""
    rid: builtins.str
    """资源ID"""
    goods: Optional["ModuleDescGoods"] = None
    """商品卡特殊字段"""
    orig_text: builtins.str
    """文本原始文案"""
    emoji_size: builtins.int
    """"""


class Dimension(BaseModel):
    """尺寸信息"""

    height: builtins.int
    """"""
    width: builtins.int
    """"""
    rotate: builtins.int
    """"""


class DynAdditionCommonFollowReply(BaseModel):
    """动态通用附加卡-follow/取消follow-响应"""

    status: AdditionalButtonStatus
    """"""


class DynAdditionCommonFollowReq(BaseModel):
    """动态通用附加卡-follow/取消follow-请求"""

    status: AdditionalButtonStatus
    """"""
    dyn_id: builtins.str
    """"""
    card_type: builtins.str
    """"""


class DynAllPersonalReply(BaseModel):
    """最近访问-个人feed流列表-返回"""

    list: "List[DynamicItem]"
    """动态列表"""
    offset: builtins.str
    """偏移量"""
    has_more: builtins.bool
    """是否还有更多数据"""
    read_offset: builtins.str
    """已读进度"""
    relation: Optional["Relation"] = None
    """关注状态"""
    addition_up: Optional["TopAdditionUP"] = None
    """顶部预约卡"""


class DynAllPersonalReq(BaseModel):
    """最近访问-个人feed流列表-请求"""

    host_uid: builtins.int
    """被访问者的 UID"""
    offset: builtins.str
    """偏移量 第一页可传空"""
    page: builtins.int
    """标明下拉几次"""
    is_preload: builtins.int
    """是否是预加载 默认是1；客户端预加载。1：是预加载，不更新已读进度，不会影响小红点；0：非预加载，更新已读进度"""
    playurl_param: Optional["PlayurlParam"] = None
    """秒开参数 新版本废弃，统一使用player_args"""
    local_time: builtins.int
    """客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8"""
    footprint: builtins.str
    """服务端生成的透传上报字段"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """秒开用"""


class DynAllReply(BaseModel):
    """动态综合页-响应"""

    dynamic_list: "DynamicList"
    """卡片列表"""
    up_list: "CardVideoUpList"
    """顶部up list"""
    topic_list: "TopicList"
    """话题广场"""
    unfollow: Optional["Unfollow"] = None
    """无关注推荐"""
    region_rcmd: Optional["DynRegionRcmd"] = None
    """分区UP推荐"""


class DynAllReq(BaseModel):
    """动态综合页-请求"""

    update_baseline: builtins.str
    """透传 update_baseline"""
    offset: builtins.str
    """透传 history_offset"""
    page: builtins.int
    """向下翻页数"""
    refresh_type: Refresh
    """刷新方式 1向上刷新 2向下翻页"""
    playurl_param: Optional["PlayurlParam"] = None
    """秒开参数 新版本废弃，统一使用player_args"""
    assist_baseline: builtins.str
    """综合页当前更新的最大值"""
    local_time: builtins.int
    """客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8"""
    rcmd_ups_param: Optional["RcmdUPsParam"] = None
    """推荐up主入参(new的时候传)"""
    ad_param: Optional["AdParam"] = None
    """广告参数"""
    cold_start: builtins.int
    """是否冷启"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """秒开参数"""
    tab_recall_uid: builtins.int
    """"""
    tab_recall_type: builtins.int
    """"""


class DynAllUpdOffsetReq(BaseModel):
    """最近访问-标记已读-请求"""

    host_uid: builtins.int
    """被访问者的UID"""
    read_offset: builtins.str
    """用户已读进度"""
    footprint: builtins.str
    """服务端生成的透传上报字段"""


class DynDetailReply(BaseModel):
    """动态详情页-响应"""

    item: Optional["DynamicItem"] = None
    """动态详情"""


class DynDetailReq(BaseModel):
    """动态详情页-请求"""

    uid: builtins.int
    """up主uid"""
    dynamic_id: builtins.str
    """动态ID"""
    dyn_type: builtins.int
    """动态类型"""
    rid: builtins.int
    """业务方资源id"""
    ad_param: Optional["AdParam"] = None
    """广告参数"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """秒开参数"""
    share_id: builtins.str
    """分享id"""
    share_mode: builtins.int
    """分享类型
    1:文字 2:图片 3:链接 4:视频 5:音频
    """
    local_time: builtins.int
    """客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8"""
    pattern: builtins.str
    """pattern"""


class DynDetailsReply(BaseModel):
    """批量动态id获取动态详情-响应"""

    list: "List[DynamicItem]"
    """动态列表"""


class DynDetailsReq(BaseModel):
    """批量动态id获取动态详情-请求"""

    dynamic_ids: builtins.str
    """动态id"""
    playurl_param: Optional["PlayurlParam"] = None
    """秒开参数 新版本废弃，统一使用player_args"""
    local_time: builtins.int
    """客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """秒开参数"""


class DynFakeCardReply(BaseModel):
    """动态发布生成临时卡-响应"""

    item: Optional["DynamicItem"] = None
    """动态卡片"""


class DynFakeCardReq(BaseModel):
    """动态发布生成临时卡-请求"""

    content: builtins.str
    """卡片内容json string"""


class DynLightReply(BaseModel):
    """轻浏览-响应"""

    dynamic_list: "DynamicList"
    """卡片列表"""


class DynLightReq(BaseModel):
    """轻浏览-请求"""

    history_offset: builtins.str
    """透传 history_offset"""
    page: builtins.int
    """向下翻页数"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """秒开参数"""
    local_time: builtins.int
    """客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8"""
    from_type: builtins.int
    """"""
    fake_uid: builtins.int
    """"""


class DynMixUpListViewMoreReply(BaseModel):
    """查看更多-列表-响应"""

    items: "List[MixUpListItem]"
    """"""
    search_default_text: builtins.str
    """"""
    sort_types: "List[SortType]"
    """排序类型列表"""
    show_more_sort_types: builtins.bool
    """是否展示更多的排序策略"""
    default_sort_type: builtins.int
    """默认排序策略"""


class DynMixUpListViewMoreReq(BaseModel):
    """查看更多-请求"""

    sort_type: builtins.int
    """排序策略
    1:推荐排序 2:最常访问 3:最近关注，其他值为默认排序
    """


class DynRcmdReply(BaseModel):
    """推荐页-响应"""

    region_rcmd: Optional["DynRegionRcmd"] = None
    """推荐页返回参数"""
    dynamic_list: "DynamicList"
    """"""


class DynRcmdReq(BaseModel):
    """推荐页-请求"""

    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """秒开参数"""
    local_time: builtins.int
    """客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8"""
    fake_uid: builtins.int
    """"""
    is_refresh: builtins.bool
    """"""


class DynRcmdUpExchangeReply(BaseModel):
    """关注推荐up主换一换-响应"""

    unfollow: Optional["Unfollow"] = None
    """无关注推荐"""


class DynRcmdUpExchangeReq(BaseModel):
    """关注推荐up主换一换-请求"""

    uid: builtins.int
    """登录用户id"""
    dislikeTs: builtins.int
    """上一次不感兴趣的ts，单位：秒；该字段透传给搜索"""


class DynRegionRcmd(BaseModel):
    """推荐页返回参数"""

    items: "List[DynRegionRcmdItem]"
    """分区推荐项目列表"""
    opts: Optional["RcmdOption"] = None
    """分区聚类推荐选项"""


class DynRegionRcmdItem(BaseModel):
    """分区推荐项目"""

    rid: builtins.int
    """分区id"""
    title: builtins.str
    """标题"""
    items: "List[ModuleRcmd]"
    """推荐模块"""


class DynSearchReply(BaseModel):
    """"""

    channel_info: Optional["SearchChannel"] = None
    """"""
    search_topic: Optional["SearchTopic"] = None
    """"""
    search_info: Optional["SearchInfo"] = None
    """"""


class DynSearchReq(BaseModel):
    """"""

    keyword: builtins.str
    """"""
    page: builtins.int
    """"""
    local_time: builtins.int
    """"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """"""


class DynServerDetailsReply(BaseModel):
    """"""

    items: Dict[builtins.int, Optional["DynamicItem"]]
    """"""


class DynServerDetailsReq(BaseModel):
    """"""

    local_time: builtins.int
    """"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """"""
    mobi_app: builtins.str
    """"""
    device: builtins.str
    """"""
    buvid: builtins.str
    """"""
    build: builtins.int
    """"""
    mid: builtins.int
    """"""
    platform: builtins.str
    """"""
    is_master: builtins.bool
    """"""


class DynSpaceReq(BaseModel):
    """空间页动态-请求"""

    host_uid: builtins.int
    """被访问者，也就是空间主人的uid"""
    history_offset: builtins.str
    """动态偏移history_offset"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """秒开参数"""
    local_time: builtins.int
    """客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8"""
    page: builtins.int
    """向下翻页数，默认从1开始"""


class DynSpaceRsp(BaseModel):
    """空间页动态-响应"""

    list: "List[DynamicItem]"
    """卡片列表"""
    history_offset: builtins.str
    """历史偏移"""
    has_more: builtins.bool
    """是否还有更多数据"""


class DynSpaceSearchDetailsReply(BaseModel):
    """"""

    items: Dict[builtins.int, Optional["DynamicItem"]]
    """"""


class DynSpaceSearchDetailsReq(BaseModel):
    """"""

    search_words: List[builtins.str]
    """"""
    local_time: builtins.int
    """"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """"""
    mobi_app: builtins.str
    """"""
    device: builtins.str
    """"""
    buvid: builtins.str
    """"""
    build: builtins.int
    """"""
    mid: builtins.int
    """"""
    platform: builtins.str
    """"""
    ip: builtins.str
    """"""
    net_type: builtins.int
    """"""
    tf_type: builtins.int
    """"""


class DynTab(BaseModel):
    """"""

    title: builtins.str
    """"""
    uri: builtins.str
    """"""
    bubble: builtins.str
    """"""
    red_point: builtins.int
    """"""
    city_id: builtins.int
    """"""
    is_popup: builtins.int
    """"""
    popup: Optional["Popup"] = None
    """"""
    default_tab: builtins.bool
    """"""
    sub_title: builtins.str
    """"""
    anchor: builtins.str
    """"""
    internal_test: builtins.str
    """"""
    type: builtins.int
    """"""
    back_up: Optional["DynTab"] = None
    """"""


class DynTabReply(BaseModel):
    """"""

    dyn_tab: "List[DynTab]"
    """"""


class DynTabReq(BaseModel):
    """"""

    teenagers_mode: builtins.int
    """"""


class DynThumbReq(BaseModel):
    """动态点赞-请求"""

    uid: builtins.int
    """用户uid"""
    dyn_id: builtins.str
    """动态id"""
    dyn_type: builtins.int
    """动态类型(透传extend中的dyn_type)"""
    rid: builtins.str
    """业务方资源id"""
    type: ThumbType
    """点赞类型"""


class DynVideoPersonalReply(BaseModel):
    """最近访问-个人feed流列表-响应"""

    list: "List[DynamicItem]"
    """动态列表"""
    offset: builtins.str
    """偏移量"""
    has_more: builtins.bool
    """是否还有更多数据"""
    read_offset: builtins.str
    """已读进度"""
    relation: Optional["Relation"] = None
    """关注状态"""
    addition_up: Optional["TopAdditionUP"] = None
    """顶部预约卡"""


class DynVideoPersonalReq(BaseModel):
    """最近访问-个人feed流列表-请求"""

    host_uid: builtins.int
    """被访问者的 UID"""
    offset: builtins.str
    """偏移量 第一页可传空"""
    page: builtins.int
    """标明下拉几次"""
    is_preload: builtins.int
    """是否是预加载"""
    playurl_param: Optional["PlayurlParam"] = None
    """秒开参数 新版本废弃，统一使用player_args"""
    local_time: builtins.int
    """客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8"""
    footprint: builtins.str
    """服务端生成的透传上报字段"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """秒开参数"""


class DynVideoReply(BaseModel):
    """动态视频页-响应"""

    dynamic_list: "CardVideoDynList"
    """卡片列表"""
    video_up_list: "CardVideoUpList"
    """动态卡片"""
    video_follow_list: "CardVideoFollowList"
    """视频页-我的追番"""


class DynVideoReq(BaseModel):
    """动态视频页-请求"""

    update_baseline: builtins.str
    """透传 update_baseline"""
    offset: builtins.str
    """透传 history_offset"""
    page: builtins.int
    """向下翻页数"""
    refresh_type: Refresh
    """刷新方式
    1:向上刷新 2:向下翻页
    """
    playurl_param: Optional["PlayurlParam"] = None
    """秒开参数 新版本废弃，统一使用player_args"""
    assist_baseline: builtins.str
    """综合页当前更新的最大值"""
    local_time: builtins.int
    """客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """秒开参数"""


class DynVideoUpdOffsetReq(BaseModel):
    """最近访问-标记已读-请求"""

    host_uid: builtins.int
    """被访问者的UID"""
    read_offset: builtins.str
    """用户已读进度"""
    footprint: builtins.str
    """服务端生成的透传上报字段"""


class DynVoteReply(BaseModel):
    """投票操作-响应"""

    item: Optional["AdditionVote2"] = None
    """投票详情"""
    toast: builtins.str
    """投票操作返回状态"""


class DynVoteReq(BaseModel):
    """投票操作-请求"""

    vote_id: builtins.int
    """投票ID"""
    votes: List[builtins.int]
    """选项索引数组"""
    status: VoteStatus
    """状态"""
    dynamic_id: builtins.str
    """动态ID"""
    share: builtins.bool
    """是否分享"""


class DynamicItem(BaseModel):
    """动态卡片"""

    card_type: DynamicType
    """动态卡片类型"""
    item_type: DynamicType
    """转发类型下，源卡片类型"""
    modules: "List[Module]"
    """模块内容"""
    extend: Optional["Extend"] = None
    """操作相关字段"""
    has_fold: builtins.int
    """该卡片下面是否含有折叠卡"""
    server_info: builtins.str
    """透传到客户端的埋点字段。"""


class DynamicList(BaseModel):
    """动态卡片列表"""

    list: "List[DynamicItem]"
    """动态列表"""
    update_num: builtins.int
    """更新的动态数"""
    history_offset: builtins.str
    """历史偏移"""
    update_baseline: builtins.str
    """更新基础信息"""
    has_more: builtins.bool
    """是否还有更多数据"""


class ExtInfoCommon(BaseModel):
    """动态-拓展小卡模块-通用小卡"""

    title: builtins.str
    """标题"""
    uri: builtins.str
    """跳转地址"""
    icon: builtins.str
    """小图标"""
    poi_type: builtins.int
    """poiType"""
    type: DynExtendType
    """类型"""
    sub_module: builtins.str
    """客户端埋点用"""
    action_text: builtins.str
    """行动点文案"""
    action_url: builtins.str
    """行动点链接"""
    rid: builtins.int
    """资源rid"""
    is_show_light: builtins.bool
    """轻浏览是否展示"""


class ExtInfoGame(BaseModel):
    """动态-拓展小卡模块-游戏小卡"""

    title: builtins.str
    """标题"""
    uri: builtins.str
    """跳转地址"""
    icon: builtins.str
    """小图标"""


class ExtInfoHot(BaseModel):
    """动态-拓展小卡模块-热门小卡"""

    title: builtins.str
    """标题"""
    uri: builtins.str
    """跳转地址"""
    icon: builtins.str
    """小图标"""


class ExtInfoLBS(BaseModel):
    """动态-拓展小卡模块-lbs小卡"""

    title: builtins.str
    """标题"""
    uri: builtins.str
    """跳转地址"""
    icon: builtins.str
    """小图标"""
    poi_type: builtins.int
    """poiType"""


class ExtInfoOGV(BaseModel):
    """动态-拓展小卡模块-ogv小卡"""

    info_ogv: "List[InfoOGV]"
    """ogv小卡"""


class ExtInfoTopic(BaseModel):
    """动态-拓展小卡模块-话题小卡"""

    title: builtins.str
    """标题-话题名"""
    uri: builtins.str
    """跳转地址"""
    icon: builtins.str
    """小图标"""


class Extend(BaseModel):
    """扩展字段，用于动态部分操作使用"""

    dyn_id_str: builtins.str
    """动态id"""
    business_id: builtins.str
    """业务方id"""
    orig_dyn_id_str: builtins.str
    """源动态id"""
    orig_name: builtins.str
    """转发卡：用户名"""
    orig_img_url: builtins.str
    """转发卡：图片url"""
    orig_desc: "List[Description]"
    """转发卡：文字内容"""
    desc: "List[Description]"
    """填充文字内容"""
    orig_dyn_type: DynamicType
    """被转发的源动态类型"""
    share_type: builtins.str
    """分享到站外展示类型"""
    share_scene: builtins.str
    """分享的场景"""
    is_fast_share: builtins.bool
    """是否快速转发"""
    r_type: builtins.int
    """r_type 分享和转发"""
    dyn_type: builtins.int
    """数据源的动态类型"""
    uid: builtins.int
    """用户id"""
    card_url: builtins.str
    """卡片跳转"""
    source_content: Any
    """透传字段"""
    orig_face: builtins.str
    """转发卡：用户头像"""
    reply: Optional["ExtendReply"] = None
    """评论跳转"""


class ExtendReply(BaseModel):
    """评论扩展"""

    uri: builtins.str
    """基础跳转地址"""
    params: "List[ExtendReplyParam]"
    """参数部分"""


class ExtendReplyParam(BaseModel):
    """评论扩展参数部分"""

    key: builtins.str
    """参数名"""
    value: builtins.str
    """参数值"""


class FollowListItem(BaseModel):
    """视频页-我的追番-番剧信息"""

    season_id: builtins.int
    """season_id"""
    title: builtins.str
    """标题"""
    cover: builtins.str
    """封面图"""
    url: builtins.str
    """跳转链接"""
    new_ep: Optional["NewEP"] = None
    """new_ep"""
    sub_title: builtins.str
    """子标题"""
    pos: builtins.int
    """卡片位次"""


class GoodsItem(BaseModel):
    """动态-附加卡-商品卡-商品"""

    cover: builtins.str
    """图片"""
    schema_package_name: builtins.str
    """schemaPackageName(Android用)"""
    source_type: builtins.int
    """商品类型
    1:淘宝 2:会员购
    """
    jump_url: builtins.str
    """跳转链接"""
    jump_desc: builtins.str
    """跳转文案"""
    title: builtins.str
    """标题"""
    brief: builtins.str
    """摘要"""
    price: builtins.str
    """价格"""
    item_id: builtins.int
    """item_id"""
    schema_url: builtins.str
    """schema_url"""
    open_white_list: List[builtins.str]
    """open_white_list"""
    user_web_v2: builtins.bool
    """use_web_v2"""
    ad_mark: builtins.str
    """ad mark"""


class GuideBarInfo(BaseModel):
    """"""

    show: builtins.int
    """"""
    page: builtins.int
    """"""
    position: builtins.int
    """"""
    desc: builtins.str
    """"""
    jump_page: builtins.int
    """"""
    jump_position: builtins.int
    """"""


class HighlightText(BaseModel):
    """高亮文本"""

    text: builtins.str
    """展示文本"""
    text_style: HighlightTextStyle
    """高亮类型"""
    jump_url: builtins.str
    """"""
    icon: builtins.str
    """"""


class IconBadge(BaseModel):
    """"""

    icon_bg_url: builtins.str
    """"""
    text: builtins.str
    """"""


class IconButton(BaseModel):
    """"""

    text: builtins.str
    """"""
    icon_head: builtins.str
    """"""
    icon_tail: builtins.str
    """"""
    jump_uri: builtins.str
    """"""


class InfoOGV(BaseModel):
    """动态-拓展小卡模块-ogv小卡-(one of 片单、榜单、分区)"""

    title: builtins.str
    """标题"""
    uri: builtins.str
    """跳转地址"""
    icon: builtins.str
    """小图标"""
    sub_module: builtins.str
    """客户端埋点用"""


class InteractionFace(BaseModel):
    """"""

    mid: builtins.int
    """"""
    face: builtins.str
    """"""


class InteractionItem(BaseModel):
    """外露交互模块"""

    icon_type: LocalIconType
    """外露模块类型"""
    desc: "List[Description]"
    """外露模块文案"""
    uri: builtins.str
    """外露模块uri相关 根据type不同用法不同"""
    dynamic_id: builtins.str
    """动态id"""
    comment_mid: builtins.int
    """评论mid"""
    faces: "List[InteractionFace]"
    """"""
    stat: Optional["InteractionStat"] = None
    """"""
    icon: builtins.str
    """"""


class InteractionStat(BaseModel):
    """"""

    like: builtins.int
    """"""


class LikeAnimation(BaseModel):
    """点赞动画"""

    begin: builtins.str
    """开始动画"""
    proc: builtins.str
    """过程动画"""
    end: builtins.str
    """结束动画"""
    like_icon_id: builtins.int
    """id"""


class LikeInfo(BaseModel):
    """点赞拓展信息"""

    animation: Optional["LikeAnimation"] = None
    """点赞动画"""
    is_like: builtins.bool
    """是否点赞"""


class LikeListReply(BaseModel):
    """点赞列表-响应"""

    list: "List[ModuleAuthor]"
    """用户模块列表"""
    has_more: builtins.bool
    """是否还有更多数据"""
    total_count: builtins.int
    """点赞总数"""


class LikeListReq(BaseModel):
    """点赞列表-请求"""

    dynamic_id: builtins.str
    """动态ID"""
    dyn_type: builtins.int
    """动态类型"""
    rid: builtins.int
    """业务方资源id"""
    uid_offset: builtins.int
    """上一页最后一个uid"""
    page: builtins.int
    """下拉页数"""


class LikeUser(BaseModel):
    """点赞用户"""

    uid: builtins.int
    """用户mid"""
    uname: builtins.str
    """用户昵称"""
    uri: builtins.str
    """点击跳转链接"""


class LiveInfo(BaseModel):
    """直播信息"""

    is_living: builtins.int
    """是否在直播
    0:未直播 1:正在直播 (废弃)
    """
    uri: builtins.str
    """跳转链接"""
    live_state: LiveState
    """直播状态"""


class LivePendant(BaseModel):
    """"""

    text: builtins.str
    """"""
    icon: builtins.str
    """"""
    pendant_id: builtins.int
    """"""


class MatchTeam(BaseModel):
    """动态-附加卡-电竞卡-战队"""

    id: builtins.int
    """战队ID"""
    name: builtins.str
    """战队名"""
    cover: builtins.str
    """战队图标"""
    color: builtins.str
    """日间色值"""
    night_color: builtins.str
    """夜间色值"""


class MdlDynApplet(BaseModel):
    """动态列表渲染部分-详情模块-小程序/小游戏"""

    id: builtins.int
    """小程序id"""
    uri: builtins.str
    """跳转地址"""
    title: builtins.str
    """主标题"""
    sub_title: builtins.str
    """副标题"""
    cover: builtins.str
    """封面图"""
    icon: builtins.str
    """小程序icon"""
    label: builtins.str
    """小程序标题"""
    button_title: builtins.str
    """按钮文案"""


class MdlDynArchive(BaseModel):
    """动态-详情模块-稿件"""

    title: builtins.str
    """标题"""
    cover: builtins.str
    """封面图"""
    uri: builtins.str
    """秒开地址"""
    cover_left_text_1: builtins.str
    """视频封面展示项 1"""
    cover_left_text_2: builtins.str
    """视频封面展示项 2"""
    cover_left_text_3: builtins.str
    """封面视频展示项 3"""
    avid: builtins.int
    """avid"""
    cid: builtins.int
    """cid"""
    media_type: MediaType
    """视频源类型"""
    dimension: Optional["Dimension"] = None
    """尺寸信息"""
    badge: "List[VideoBadge]"
    """角标，多个角标之前有间距"""
    can_play: builtins.bool
    """是否能够自动播放"""
    stype: VideoType
    """stype"""
    isPGC: builtins.bool
    """是否PGC"""
    inlineURL: builtins.str
    """inline播放地址"""
    EpisodeId: builtins.int
    """PGC的epid"""
    SubType: builtins.int
    """子类型"""
    PgcSeasonId: builtins.int
    """PGC的ssid"""
    play_icon: builtins.str
    """播放按钮"""
    duration: builtins.int
    """时长"""
    jump_url: builtins.str
    """跳转地址"""
    is_preview: builtins.bool
    """番剧是否为预览视频"""
    badge_category: "List[VideoBadge]"
    """新角标，多个角标之前没有间距"""
    is_feature: builtins.bool
    """当前是否是pgc正片"""
    reserve_type: ReserveType
    """是否是预约召回"""
    bvid: builtins.str
    """bvid"""
    view: builtins.int
    """播放数"""


class MdlDynArticle(BaseModel):
    """动态列表渲染部分-详情模块-专栏模块"""

    id: builtins.int
    """专栏id"""
    uri: builtins.str
    """跳转地址"""
    title: builtins.str
    """标题"""
    desc: builtins.str
    """文案部分"""
    covers: List[builtins.str]
    """配图"""
    label: builtins.str
    """阅读量标签"""
    templateID: builtins.int
    """模板类型"""


class MdlDynCommon(BaseModel):
    """动态列表渲染部分-详情模块-通用"""

    oid: builtins.int
    """物料id"""
    uri: builtins.str
    """跳转地址"""
    title: builtins.str
    """标题"""
    desc: builtins.str
    """描述 漫画卡标题下第一行"""
    cover: builtins.str
    """封面"""
    label: builtins.str
    """标签1 漫画卡标题下第二行"""
    bizType: builtins.int
    """所属业务类型"""
    sketchID: builtins.int
    """镜像数据ID"""
    style: MdlDynCommonType
    """卡片样式"""
    badge: "List[VideoBadge]"
    """角标"""
    button: Optional["AdditionalButton"] = None
    """"""


class MdlDynCourBatch(BaseModel):
    """动态-详情模块-付费课程批次"""

    title: builtins.str
    """标题"""
    cover: builtins.str
    """封面图"""
    uri: builtins.str
    """跳转地址"""
    text_1: builtins.str
    """展示项 1(本集标题)"""
    text_2: builtins.str
    """展示项 2(更新了多少个视频)"""
    badge: Optional["VideoBadge"] = None
    """角标"""
    play_icon: builtins.str
    """播放按钮"""


class MdlDynCourSeason(BaseModel):
    """动态-详情模块-付费课程系列"""

    title: builtins.str
    """标题"""
    cover: builtins.str
    """封面图"""
    uri: builtins.str
    """跳转地址"""
    text_1: builtins.str
    """展示项 1(更新信息)"""
    desc: builtins.str
    """描述信息"""
    badge: Optional["VideoBadge"] = None
    """角标"""
    play_icon: builtins.str
    """播放按钮"""


class MdlDynDraw(BaseModel):
    """动态列表渲染部分-详情模块-图文模块"""

    items: "List[MdlDynDrawItem]"
    """图片"""
    uri: builtins.str
    """跳转地址"""
    id: builtins.int
    """图文ID"""


class MdlDynDrawItem(BaseModel):
    """动态列表渲染部分-详情模块-图文"""

    src: builtins.str
    """图片链接"""
    width: builtins.int
    """图片宽度"""
    height: builtins.int
    """图片高度"""
    size: builtins.float
    """图片大小"""
    tags: "List[MdlDynDrawTag]"
    """图片标签"""


class MdlDynDrawTag(BaseModel):
    """动态列表渲染部分-详情模块-图文-标签"""

    type: MdlDynDrawTagType
    """标签类型"""
    item: Optional["MdlDynDrawTagItem"] = None
    """标签详情"""


class MdlDynDrawTagItem(BaseModel):
    """动态列表部分-详情模块-图文-标签详情"""

    url: builtins.str
    """跳转链接"""
    text: builtins.str
    """标签内容"""
    x: builtins.int
    """坐标-x"""
    y: builtins.int
    """坐标-y"""
    orientation: builtins.int
    """方向"""
    source: builtins.int
    """来源
    0:未知 1:淘宝 2:自营
    """
    item_id: builtins.int
    """商品id"""
    mid: builtins.int
    """用户mid"""
    tid: builtins.int
    """话题id"""
    poi: builtins.str
    """lbs信息"""
    schema_url: builtins.str
    """商品标签链接"""


class MdlDynForward(BaseModel):
    """动态列表渲染部分-详情模块-转发模块"""

    item: Optional["DynamicItem"] = None
    """动态转发核心模块 套娃"""
    rtype: builtins.int
    """透传类型
    0:分享 1:转发
    """


class MdlDynLive(BaseModel):
    """动态列表渲染部分-详情模块-直播"""

    id: builtins.int
    """房间号"""
    uri: builtins.str
    """跳转地址"""
    title: builtins.str
    """直播间标题"""
    cover: builtins.str
    """直播间封面"""
    cover_label: builtins.str
    """标题1 例: 陪伴学习"""
    cover_label2: builtins.str
    """标题2 例: 54.6万人气"""
    live_state: LiveState
    """直播状态"""
    badge: Optional["VideoBadge"] = None
    """直播角标"""
    reserve_type: ReserveType
    """是否是预约召回"""


class MdlDynLiveRcmd(BaseModel):
    """动态列表渲染部分-详情模块-直播推荐"""

    content: builtins.str
    """直播数据"""
    reserve_type: ReserveType
    """是否是预约召回"""
    pendant: Optional["LivePendant"] = None
    """"""


class MdlDynMedialist(BaseModel):
    """动态列表渲染部分-详情模块-播单"""

    id: builtins.int
    """播单id"""
    uri: builtins.str
    """跳转地址"""
    title: builtins.str
    """主标题"""
    sub_title: builtins.str
    """副标题"""
    cover: builtins.str
    """封面图"""
    cover_type: builtins.int
    """封面类型"""
    badge: Optional["VideoBadge"] = None
    """角标"""


class MdlDynMusic(BaseModel):
    """动态列表渲染部分-详情模块-音频模块"""

    id: builtins.int
    """音频id"""
    uri: builtins.str
    """跳转地址"""
    up_id: builtins.int
    """upId"""
    title: builtins.str
    """歌名"""
    cover: builtins.str
    """专辑封面"""
    label1: builtins.str
    """展示项1"""
    upper: builtins.str
    """upper"""


class MdlDynPGC(BaseModel):
    """动态-详情模块-pgc"""

    title: builtins.str
    """标题"""
    cover: builtins.str
    """封面图"""
    uri: builtins.str
    """秒开地址"""
    cover_left_text_1: builtins.str
    """视频封面展示项 1"""
    cover_left_text_2: builtins.str
    """视频封面展示项 2"""
    cover_left_text_3: builtins.str
    """封面视频展示项 3"""
    cid: builtins.int
    """cid"""
    season_id: builtins.int
    """season_id"""
    epid: builtins.int
    """epid"""
    aid: builtins.int
    """aid"""
    media_type: MediaType
    """视频源类型"""
    sub_type: VideoSubType
    """番剧类型"""
    is_preview: builtins.bool
    """番剧是否为预览视频"""
    dimension: Optional["Dimension"] = None
    """尺寸信息"""
    badge: "List[VideoBadge]"
    """角标，多个角标之前有间距"""
    can_play: builtins.bool
    """是否能够自动播放"""
    season: Optional["PGCSeason"] = None
    """season"""
    play_icon: builtins.str
    """播放按钮"""
    duration: builtins.int
    """时长"""
    jump_url: builtins.str
    """跳转地址"""
    badge_category: "List[VideoBadge]"
    """新角标，多个角标之前没有间距"""
    is_feature: builtins.bool
    """当前是否是pgc正片"""


class MdlDynSubscription(BaseModel):
    """动态列表渲染部分-详情模块-订阅卡"""

    id: builtins.int
    """卡片物料id"""
    ad_id: builtins.int
    """广告创意id"""
    uri: builtins.str
    """跳转地址"""
    title: builtins.str
    """标题"""
    cover: builtins.str
    """封面图"""
    ad_title: builtins.str
    """广告标题"""
    badge: Optional["VideoBadge"] = None
    """角标"""
    tips: builtins.str
    """小提示"""


class MdlDynSubscriptionNew(BaseModel):
    """动态新附加卡"""

    style: MdlDynSubscriptionNewStyle
    """样式类型"""
    dyn_subscription: Optional["MdlDynSubscription"] = None
    """"""
    dyn_live_rcmd: Optional["MdlDynLiveRcmd"] = None
    """直播推荐"""


class MdlDynUGCSeason(BaseModel):
    """动态列表渲染部分-UGC合集"""

    title: builtins.str
    """标题"""
    cover: builtins.str
    """封面图"""
    uri: builtins.str
    """秒开地址"""
    cover_left_text_1: builtins.str
    """视频封面展示项 1"""
    cover_left_text_2: builtins.str
    """视频封面展示项 2"""
    cover_left_text_3: builtins.str
    """封面视频展示项 3"""
    id: builtins.int
    """卡片物料id"""
    inlineURL: builtins.str
    """inline播放地址"""
    can_play: builtins.bool
    """是否能够自动播放"""
    play_icon: builtins.str
    """播放按钮"""
    avid: builtins.int
    """avid"""
    cid: builtins.int
    """cid"""
    dimension: Optional["Dimension"] = None
    """尺寸信息"""
    duration: builtins.int
    """时长"""
    jump_url: builtins.str
    """跳转地址"""


class MixUpListItem(BaseModel):
    """查看更多-列表单条数据"""

    uid: builtins.int
    """用户mid"""
    special_attention: builtins.int
    """特别关注
    0:否 1:是
    """
    reddot_state: builtins.int
    """小红点状态
    0:没有 1:有
    """
    live_info: "MixUpListLiveItem"
    """直播信息"""
    name: builtins.str
    """昵称"""
    face: builtins.str
    """头像"""
    official: Optional["OfficialVerify"] = None
    """认证信息"""
    vip: Optional["VipInfo"] = None
    """大会员信息"""
    relation: Optional["Relation"] = None
    """关注状态"""
    permire_state: builtins.int
    """"""
    uri: builtins.str
    """"""


class MixUpListLiveItem(BaseModel):
    status: builtins.bool
    """直播状态
    0:未直播 1:直播中
    """
    room_id: builtins.int
    """房间号"""
    uri: builtins.str
    """跳转地址"""


class Module(BaseModel):
    """动态模块"""

    module_type: DynModuleType
    """类型"""
    module_author: Optional["ModuleAuthor"] = None
    """用户模块 1"""
    module_dispute: Optional["ModuleDispute"] = None
    """争议黄条模块 2"""
    module_desc: Optional["ModuleDesc"] = None
    """动态正文模块 3"""
    module_dynamic: Optional["ModuleDynamic"] = None
    """动态卡模块 4"""
    module_likeUser: Optional["ModuleLikeUser"] = None
    """点赞外露(废弃)"""
    module_extend: Optional["ModuleExtend"] = None
    """小卡模块 6"""
    module_additional: Optional["ModuleAdditional"] = None
    """大卡模块 5"""
    module_stat: Optional["ModuleStat"] = None
    """计数模块 8"""
    module_fold: Optional["ModuleFold"] = None
    """折叠模块 9"""
    module_comment: Optional["ModuleComment"] = None
    """评论外露(废弃)"""
    module_interaction: Optional["ModuleInteraction"] = None
    """外露交互模块(点赞、评论) 7"""
    module_author_forward: Optional["ModuleAuthorForward"] = None
    """转发卡-原卡用户模块"""
    module_ad: Optional["ModuleAd"] = None
    """广告卡"""
    module_banner: Optional["ModuleBanner"] = None
    """通栏"""
    module_item_null: Optional["ModuleItemNull"] = None
    """获取物料失败"""
    module_share_info: Optional["ModuleShareInfo"] = None
    """分享组件"""
    module_recommend: Optional["ModuleRecommend"] = None
    """相关推荐模块"""
    module_top: Optional["ModuleTop"] = None
    """顶部模块"""
    module_buttom: Optional["ModuleButtom"] = None
    """底部模块"""
    module_stat_forward: Optional["ModuleStat"] = None
    """转发卡计数模块"""
    module_story: Optional["ModuleStory"] = None
    """"""
    module_topic: Optional["ModuleTopic"] = None
    """"""
    module_topic_details_ext: Optional["ModuleTopicDetailsExt"] = None
    """"""
    module_top_tag: Optional["ModuleTopTag"] = None
    """"""
    module_topic_brief: Optional["ModuleTopicBrief"] = None
    """"""
    module_title: Optional["ModuleTitle"] = None
    """"""


class ModuleAd(BaseModel):
    """动态列表-用户模块-广告卡"""

    source_content: Any
    """广告透传信息"""
    module_author: Optional["ModuleAuthor"] = None
    """用户模块"""
    ad_content_type: builtins.int
    """"""
    cover_left_text1: builtins.str
    """"""
    cover_left_text2: builtins.str
    """"""
    cover_left_text3: builtins.str
    """"""


class ModuleAdditional(BaseModel):
    """动态-附加卡模块"""

    type: AdditionalType
    """类型"""
    pgc: Optional["AdditionalPGC"] = None
    """废弃"""
    goods: Optional["AdditionGoods"] = None
    """"""
    vote: Optional["AdditionVote"] = None
    """废弃"""
    common: Optional["AdditionCommon"] = None
    """"""
    esport: Optional["AdditionEsport"] = None
    """"""
    vote2: Optional["AdditionVote2"] = None
    """投票"""
    ugc: Optional["AdditionUgc"] = None
    """"""
    up: Optional["AdditionUP"] = None
    """up主预约发布卡"""
    rid: builtins.int
    """附加卡物料ID"""
    need_write_calender: builtins.bool
    """"""


class ModuleAuthor(BaseModel):
    """动态-发布人模块"""

    mid: builtins.int
    """用户mid"""
    ptime_label_text: builtins.str
    """时间标签"""
    author: Optional["UserInfo"] = None
    """用户详情"""
    decorate_card: Optional["DecorateCard"] = None
    """装扮卡片"""
    uri: builtins.str
    """点击跳转链接"""
    tp_list: "List[ThreePointItem]"
    """右侧操作区域 - 三点样式"""
    badge_type: ModuleAuthorBadgeType
    """右侧操作区域样式枚举"""
    badge_button: Optional["ModuleAuthorBadgeButton"] = None
    """右侧操作区域 - 按钮样式"""
    attend: builtins.int
    """是否关注
    1:关注 0:不关注 默认0，注：点赞列表使用，其他场景不使用该字段
    """
    relation: Optional["Relation"] = None
    """关注状态"""
    weight: Optional["Weight"] = None
    """右侧操作区域 - 提权样式"""
    show_follow: builtins.bool
    """是否展示关注"""
    is_top: builtins.bool
    """是否置顶"""
    ptime_location_text: builtins.str
    """ip属地"""
    show_level: builtins.bool
    """"""


class ModuleAuthorBadgeButton(BaseModel):
    """动态列表渲染部分-用户模块-按钮"""

    icon: builtins.str
    """图标"""
    title: builtins.str
    """文案"""
    state: builtins.int
    """状态"""
    id: builtins.int
    """物料ID"""


class ModuleAuthorForward(BaseModel):
    """动态列表-用户模块-转发模板"""

    title: "List[ModuleAuthorForwardTitle]"
    """展示标题"""
    url: builtins.str
    """源卡片跳转链接"""
    uid: builtins.int
    """用户uid"""
    ptime_label_text: builtins.str
    """时间标签"""
    show_follow: builtins.bool
    """是否展示关注"""
    face_url: builtins.str
    """源up主头像"""
    relation: Optional["Relation"] = None
    """双向关系"""
    tp_list: "List[ThreePointItem]"
    """右侧操作区域 - 三点样式"""


class ModuleAuthorForwardTitle(BaseModel):
    """动态列表-用户模块-转发模板-title部分"""

    text: builtins.str
    """文案"""
    url: builtins.str
    """跳转链接"""


class ModuleBanner(BaseModel):
    """动态列表-通栏"""

    title: builtins.str
    """模块标题"""
    type: ModuleBannerType
    """卡片类型"""
    user: Optional["ModuleBannerUser"] = None
    """Ellipsis"""
    dislike_text: builtins.str
    """不感兴趣文案"""
    dislike_icon: builtins.str
    """不感兴趣图标"""


class ModuleBannerUser(BaseModel):
    """动态通栏-用户"""

    list: "List[ModuleBannerUserItem]"
    """卡片列表"""


class ModuleBannerUserItem(BaseModel):
    """动态通栏-推荐用户卡"""

    face: builtins.str
    """up主头像"""
    name: builtins.str
    """up主昵称"""
    uid: builtins.int
    """up主uid"""
    live_state: LiveState
    """直播状态"""
    official: Optional["OfficialVerify"] = None
    """认证信息"""
    vip: Optional["VipInfo"] = None
    """大会员信息"""
    label: builtins.str
    """标签信息"""
    button: Optional["AdditionalButton"] = None
    """按钮"""
    uri: builtins.str
    """跳转地址"""


class ModuleButtom(BaseModel):
    """底部模块"""

    module_stat: Optional["ModuleStat"] = None
    """计数模块"""


class ModuleComment(BaseModel):
    """评论外露模块"""

    cmtShowItem: "List[CmtShowItem]"
    """评论外露展示项"""


class ModuleDesc(BaseModel):
    """动态-描述文字模块"""

    desc: "List[Description]"
    """描述信息(已按高亮拆分)"""
    jump_uri: builtins.str
    """点击跳转链接"""
    text: builtins.str
    """文本原本"""


class ModuleDescGoods(BaseModel):
    """正文商品卡参数"""

    source_type: builtins.int
    """商品类型
    1:淘宝 2:会员购
    """
    jump_url: builtins.str
    """跳转链接"""
    schema_url: builtins.str
    """schema_url"""
    item_id: builtins.int
    """item_id"""
    open_white_list: List[builtins.str]
    """open_white_list"""
    user_web_v2: builtins.bool
    """use_web_v2"""
    ad_mark: builtins.str
    """ad mark"""
    schema_package_name: builtins.str
    """schemaPackageName(Android用)"""


class ModuleDispute(BaseModel):
    """动态-争议小黄条模块"""

    title: builtins.str
    """标题"""
    desc: builtins.str
    """描述内容"""
    uri: builtins.str
    """跳转链接"""


class ModuleDynamic(BaseModel):
    """动态-详情模块"""

    type: ModuleDynamicType
    """类型"""
    dyn_archive: Optional["MdlDynArchive"] = None
    """稿件"""
    dyn_pgc: Optional["MdlDynPGC"] = None
    """pgc"""
    dyn_cour_season: Optional["MdlDynCourSeason"] = None
    """付费课程-系列"""
    dyn_cour_batch: Optional["MdlDynCourBatch"] = None
    """付费课程-批次"""
    dyn_forward: Optional["MdlDynForward"] = None
    """转发卡"""
    dyn_draw: Optional["MdlDynDraw"] = None
    """图文"""
    dyn_article: Optional["MdlDynArticle"] = None
    """专栏"""
    dyn_music: Optional["MdlDynMusic"] = None
    """音频"""
    dyn_common: Optional["MdlDynCommon"] = None
    """通用卡方"""
    dyn_common_live: Optional["MdlDynLive"] = None
    """直播卡"""
    dyn_medialist: Optional["MdlDynMedialist"] = None
    """播单"""
    dyn_applet: Optional["MdlDynApplet"] = None
    """小程序卡"""
    dyn_subscription: Optional["MdlDynSubscription"] = None
    """订阅卡"""
    dyn_live_rcmd: Optional["MdlDynLiveRcmd"] = None
    """直播推荐卡"""
    dyn_ugc_season: Optional["MdlDynUGCSeason"] = None
    """UGC合集"""
    dyn_subscription_new: Optional["MdlDynSubscriptionNew"] = None
    """订阅卡"""


class ModuleExtend(BaseModel):
    """动态-小卡模块"""

    extend: "List[ModuleExtendItem]"
    """详情"""
    uri: builtins.str
    """模块整体跳转uri
    废弃
    """


class ModuleExtendItem(BaseModel):
    """动态-拓展小卡模块"""

    type: DynExtendType
    """类型"""
    ext_info_topic: Optional["ExtInfoTopic"] = None
    """废弃"""
    ext_info_lbs: Optional["ExtInfoLBS"] = None
    """废弃"""
    ext_info_hot: Optional["ExtInfoHot"] = None
    """废弃"""
    ext_info_game: Optional["ExtInfoGame"] = None
    """废弃"""
    ext_info_common: Optional["ExtInfoCommon"] = None
    """"""
    ext_info_ogv: Optional["ExtInfoOGV"] = None
    """"""


class ModuleFold(BaseModel):
    """动态-折叠模块"""

    fold_type: FoldType
    """折叠分类"""
    text: builtins.str
    """折叠文案"""
    fold_ids: builtins.str
    """被折叠的动态"""
    fold_users: "List[UserInfo]"
    """被折叠的用户信息"""


class ModuleInteraction(BaseModel):
    """外露交互模块"""

    interaction_item: "List[InteractionItem]"
    """外露交互模块"""


class ModuleItemNull(BaseModel):
    """获取物料失败模块"""

    icon: builtins.str
    """图标"""
    text: builtins.str
    """文案"""


class ModuleLikeUser(BaseModel):
    """动态-点赞用户模块"""

    like_users: "List[LikeUser]"
    """点赞用户"""
    display_text: builtins.str
    """文案"""


class ModuleRcmd(BaseModel):
    """推荐模块"""

    author: Optional["RcmdAuthor"] = None
    """用户头像"""
    items: "List[RcmdItem]"
    """推荐卡片列表"""
    server_info: builtins.str
    """透传到客户端的埋点字段"""


class ModuleRecommend(BaseModel):
    """相关推荐模块"""

    module_title: builtins.str
    """模块标题"""
    image: builtins.str
    """图片"""
    tag: builtins.str
    """标签"""
    title: builtins.str
    """标题"""
    jump_url: builtins.str
    """跳转链接"""
    ad: Any
    """序列化的广告信息"""


class ModuleShareInfo(BaseModel):
    """分享模块"""

    title: builtins.str
    """展示标题"""
    share_channels: "List[ShareChannel]"
    """分享组件列表"""
    share_origin: builtins.str
    """share_origin"""
    oid: builtins.str
    """业务id"""
    sid: builtins.str
    """sid"""


class ModuleStat(BaseModel):
    """动态-计数模块"""

    repost: builtins.int
    """转发数"""
    like: builtins.int
    """点赞数"""
    reply: builtins.int
    """评论数"""
    like_info: Optional["LikeInfo"] = None
    """点赞拓展信息"""
    no_comment: builtins.bool
    """禁评"""
    no_forward: builtins.bool
    """禁转"""
    reply_url: builtins.str
    """点击评论跳转链接"""
    no_comment_text: builtins.str
    """禁评文案"""
    no_forward_text: builtins.str
    """禁转文案"""


class ModuleStory(BaseModel):
    """"""

    title: builtins.str
    """"""
    items: "List[StoryItem]"
    """"""
    show_publish_entrance: builtins.bool
    """"""
    fold_state: builtins.int
    """"""
    uri: builtins.str
    """"""
    cover: builtins.str
    """"""
    publish_text: builtins.str
    """"""


class ModuleTitle(BaseModel):
    """"""

    title: builtins.str
    """"""
    right_btn: Optional["IconButton"] = None
    """"""


class ModuleTop(BaseModel):
    """顶部模块"""

    tp_list: "List[ThreePointItem]"
    """三点模块"""


class ModuleTopTag(BaseModel):
    """"""

    tag_name: builtins.str
    """"""


class ModuleTopic(BaseModel):
    """"""

    id: builtins.int
    """"""
    name: builtins.str
    """"""
    url: builtins.str
    """"""


class ModuleTopicBrief(BaseModel):
    """"""

    topic: Optional["TopicItem"] = None
    """"""


class ModuleTopicDetailsExt(BaseModel):
    """"""

    comment_guide: builtins.str
    """"""


class Nameplate(BaseModel):
    """认证名牌"""

    nid: builtins.int
    """nid"""
    name: builtins.str
    """名称"""
    image: builtins.str
    """图片地址"""
    image_small: builtins.str
    """小图地址"""
    level: builtins.str
    """等级"""
    condition: builtins.str
    """获取条件"""


class NewEP(BaseModel):
    """最新ep"""

    id: builtins.int
    """最新话epid"""
    index_show: builtins.str
    """更新至XX话"""
    cover: builtins.str
    """更新剧集的封面"""


class NoReply(BaseModel):
    """空响应"""


class NoReq(BaseModel):
    """空请求"""


class OfficialAccountInfo(BaseModel):
    """"""

    author: Optional["UserInfo"] = None
    """"""
    mid: builtins.int
    """"""
    uri: builtins.str
    """"""
    relation: Optional["Relation"] = None
    """"""
    desc_text1: builtins.str
    """"""
    desc_text2: builtins.str
    """"""


class OfficialAccountsReply(BaseModel):
    """"""

    items: "List[OfficialAccountInfo]"
    """"""
    has_more: builtins.bool
    """"""
    offset: builtins.int
    """"""


class OfficialAccountsReq(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    campus_name: builtins.str
    """"""
    offset: builtins.int
    """"""


class OfficialDynamicsReply(BaseModel):
    """"""

    items: "List[OfficialItem]"
    """"""
    offset: builtins.int
    """"""
    has_more: builtins.bool
    """"""
    player_args: bilibiliq.internal.pb.bilibili.app.archive.middleware.v1.preload_pb2_model.PlayerArgs
    """"""


class OfficialDynamicsReq(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    campus_name: builtins.str
    """"""
    offset: builtins.int
    """"""


class OfficialItem(BaseModel):
    type: builtins.int
    rcmd_archive: Optional["OfficialRcmdArchive"] = None
    """Ellipsis"""
    rcmd_dynamic: Optional["OfficialRcmdDynamic"] = None
    """Ellipsis"""


class OfficialRcmdArchive(BaseModel):
    """"""

    title: builtins.str
    """"""
    cover: builtins.str
    """"""
    cover_right_text: builtins.str
    """"""
    desc_icon1: builtins.int
    """"""
    desc_text1: builtins.str
    """"""
    desc_icon2: builtins.int
    """"""
    desc_text2: builtins.str
    """"""
    reason: builtins.str
    """"""
    show_three_point: builtins.bool
    """"""
    uri: builtins.str
    """"""
    aid: builtins.int
    """"""
    mid: builtins.int
    """"""
    name: builtins.str
    """"""
    dynamic_id: builtins.int
    """"""
    cid: builtins.int
    """"""


class OfficialRcmdDynamic(BaseModel):
    """"""

    title: builtins.str
    """"""
    cover: builtins.str
    """"""
    cover_right_top_text: builtins.str
    """"""
    desc_icon1: builtins.int
    """"""
    desc_text1: builtins.str
    """"""
    desc_icon2: builtins.int
    """"""
    desc_text2: builtins.str
    """"""
    reason: builtins.str
    """"""
    uri: builtins.str
    """"""
    dynamic_id: builtins.int
    """"""
    mid: builtins.int
    """"""
    user_name: builtins.str
    """"""
    rid: builtins.int
    """"""


class OfficialVerify(BaseModel):
    """认证信息"""

    type: builtins.int
    """127:未认证 0:个人 1:机构"""
    desc: builtins.str
    """认证描述"""
    is_atten: builtins.int
    """是否关注"""


class PGCSeason(BaseModel):
    """PGC单季信息"""

    is_finish: builtins.int
    """是否完结"""
    title: builtins.str
    """标题"""
    type: builtins.int
    """类型"""


class PlayurlParam(BaseModel):
    """秒开通用参数"""

    qn: builtins.int
    """清晰度"""
    fnver: builtins.int
    """流版本"""
    fnval: builtins.int
    """流类型"""
    force_host: builtins.int
    """是否强制使用域名"""
    fourk: builtins.int
    """是否4k"""


class Popup(BaseModel):
    """"""

    title: builtins.str
    """"""
    desc: builtins.str
    """"""
    uri: builtins.str
    """"""


class RcmdArchive(BaseModel):
    """"""

    title: builtins.str
    """标题"""
    cover: builtins.str
    """封面图"""
    cover_left_icon_1: CoverIcon
    """视频封面展示项 1"""
    cover_left_text_1: builtins.str
    """视频封面展示项 1"""
    uri: builtins.str
    """秒开地址"""
    is_pgc: builtins.bool
    """是否PGC"""
    aid: builtins.int
    """aid"""
    badge: Optional["IconBadge"] = None
    """"""
    cover_left_icon2: builtins.int
    """"""
    cover_left_text2: builtins.str
    """"""
    cover_left_icon3: builtins.int
    """"""
    cover_left_text3: builtins.str
    """"""


class RcmdAuthor(BaseModel):
    """推荐UP主用户模块"""

    author: Optional["UserInfo"] = None
    """用户详情"""
    desc: builtins.str
    """描述：粉丝数、推荐理由"""
    relation: Optional["Relation"] = None
    """关注状态"""


class RcmdItem(BaseModel):
    """推荐卡片列表"""

    type: RcmdType
    """卡片类型"""
    rcmd_archive: Optional["RcmdArchive"] = None
    """"""


class RcmdOption(BaseModel):
    """分区聚类推荐选项"""

    show_title: builtins.bool
    """视频是否展示标题"""


class RcmdTopButton(BaseModel):
    """"""

    text: builtins.str
    """"""
    url: builtins.str
    """"""


class RcmdUPsParam(BaseModel):
    """推荐up主入参"""

    dislike_ts: builtins.int


class Relation(BaseModel):
    """关注关系"""

    status: RelationStatus
    """关注状态"""
    is_follow: builtins.int
    """关注"""
    is_followed: builtins.int
    """被关注"""
    title: builtins.str
    """文案"""


class RepostListReq(BaseModel):
    """转发列表-请求"""

    dynamic_id: builtins.str
    """动态ID"""
    dyn_type: builtins.int
    """动态类型"""
    rid: builtins.int
    """业务方资源id"""
    offset: builtins.str
    """偏移,使用上一页回包中的offset字段；第一页不传。"""
    repost_type: RepostType
    """评论类型"""


class RepostListRsp(BaseModel):
    """转发列表-响应"""

    list: "List[DynamicItem]"
    """列表"""
    offset: builtins.str
    """偏移"""
    has_more: builtins.bool
    """是否还有更多"""
    total_count: builtins.int
    """转发总数"""
    repost_type: RepostType
    """评论类型"""


class SchoolRecommendReply(BaseModel):
    """"""

    items: "List[CampusInfo]"
    """"""


class SchoolRecommendReq(BaseModel):
    """"""

    lat: builtins.float
    """"""
    lng: builtins.float
    """"""


class SchoolSearchReply(BaseModel):
    """"""

    items: "List[CampusInfo]"
    """"""
    toast: Optional["SearchToast"] = None
    """"""


class SchoolSearchReq(BaseModel):
    """"""

    keyword: builtins.str
    """"""


class SearchChannel(BaseModel):
    """"""

    title: builtins.str
    """"""
    more_button: Optional["SearchTopicButton"] = None
    """"""
    channels: "List[ChannelInfo]"
    """"""


class SearchInfo(BaseModel):
    """"""

    title: builtins.str
    """"""
    list: "List[DynamicItem]"
    """"""
    track_id: builtins.str
    """"""
    total: builtins.int
    """"""
    has_more: builtins.bool
    """"""
    version: builtins.str
    """"""


class SearchToast(BaseModel):
    """"""

    desc_text1: builtins.str
    """"""
    desc_text2: builtins.str
    """"""


class SearchTopic(BaseModel):
    """"""

    title: builtins.str
    """"""
    more_button: Optional["SearchTopicButton"] = None
    """"""
    items: "List[SearchTopicItem]"
    """"""


class SearchTopicButton(BaseModel):
    """"""

    title: builtins.str
    """"""
    jump_uri: builtins.str
    """"""


class SearchTopicItem(BaseModel):
    """"""

    topic_id: builtins.int
    """"""
    topic_name: builtins.str
    """"""
    desc: builtins.str
    """"""
    url: builtins.str
    """"""
    is_activity: builtins.bool
    """"""


class SetDecisionReq(BaseModel):
    """"""

    result: builtins.int
    """"""


class SetRecentCampusReq(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    campus_name: builtins.str
    """"""


class ShareChannel(BaseModel):
    """分享渠道组件"""

    name: builtins.str
    """分享名称"""
    image: builtins.str
    """分享按钮图片"""
    channel: builtins.str
    """分享渠道"""
    reserve: Optional["ShareReserve"] = None
    """预约卡分享图信息，仅分享有预约信息的动态时存在"""


class ShareReserve(BaseModel):
    """预约卡分享图信息"""

    title: builtins.str
    """展示标题"""
    desc: builtins.str
    """描述(时间+类型)"""
    qr_code_icon: builtins.str
    """二维码附带icon"""
    qr_code_text: builtins.str
    """二维码附带文本"""
    qr_code_url: builtins.str
    """二维码url"""
    user_info: Optional["AdditionUserInfo"] = None
    """"""


class SortType(BaseModel):
    """排序类型"""

    sort_type: builtins.int
    """排序策略
    1:推荐排序 2:最常访问 3:最近关注
    """
    sort_type_name: builtins.str
    """排序策略名称"""


class StoryArchive(BaseModel):
    """"""

    cover: builtins.str
    """"""
    aid: builtins.int
    """"""
    uri: builtins.str
    """"""
    dimension: Optional["Dimension"] = None
    """"""


class StoryItem(BaseModel):
    """"""

    author: Optional["UserInfo"] = None
    """"""
    desc: builtins.str
    """"""
    status: builtins.int
    """"""
    type: builtins.int
    """"""
    story_archive: Optional["StoryArchive"] = None
    """"""


class SubscribeCampusReq(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    campus_name: builtins.str
    """"""


class ThreePointAttention(BaseModel):
    """三点-关注"""

    attention_icon: builtins.str
    """attention icon"""
    attention_text: builtins.str
    """关注时显示的文案"""
    not_attention_icon: builtins.str
    """not attention icon"""
    not_attention_text: builtins.str
    """未关注时显示的文案"""
    status: ThreePointAttentionStatus
    """当前关注状态"""


class ThreePointAutoPlay(BaseModel):
    """三点-自动播放 旧版不维护"""

    open_icon: builtins.str
    """open icon"""
    open_text: builtins.str
    """开启时显示文案"""
    close_icon: builtins.str
    """close icon"""
    close_text: builtins.str
    """关闭时显示文案"""
    open_text_v2: builtins.str
    """开启时显示文案v2"""
    close_text_v2: builtins.str
    """关闭时显示文案v2"""
    only_icon: builtins.str
    """仅wifi/免流 icon"""
    only_text: builtins.str
    """仅wifi/免流 文案"""
    open_icon_v2: builtins.str
    """open icon v2"""
    close_icon_v2: builtins.str
    """close icon v2"""


class ThreePointComment(BaseModel):
    """三点-评论"""

    up_selection: Optional["CommentDetail"] = None
    """精选评论区功能"""
    up_close: Optional["CommentDetail"] = None
    """up关闭评论区功能"""
    icon: builtins.str
    """icon"""
    title: builtins.str
    """标题"""


class ThreePointDefault(BaseModel):
    """三点-默认结构(使用此背景、举报、删除)"""

    icon: builtins.str
    """icon"""
    title: builtins.str
    """标题"""
    uri: builtins.str
    """跳转链接"""
    id: builtins.str
    """id"""
    toast: Optional["ThreePointDefaultToast"] = None
    """"""


class ThreePointDefaultToast(BaseModel):
    """"""

    title: builtins.str
    """"""
    desc: builtins.str
    """"""


class ThreePointDislike(BaseModel):
    """三点-不感兴趣"""

    icon: builtins.str
    """icon"""
    title: builtins.str
    """标题"""


class ThreePointFavorite(BaseModel):
    """三点-收藏"""

    icon: builtins.str
    """icon"""
    title: builtins.str
    """标题"""
    id: builtins.int
    """物料ID"""
    is_favourite: builtins.bool
    """是否订阅"""
    cancel_icon: builtins.str
    """取消收藏图标"""
    cancel_title: builtins.str
    """取消收藏文案"""


class ThreePointHide(BaseModel):
    """"""

    icon: builtins.str
    """"""
    title: builtins.str
    """"""
    interactive: Optional["ThreePointHideInteractive"] = None
    """"""
    blook_fid: builtins.int
    """"""
    blook_type: builtins.str
    """"""


class ThreePointHideInteractive(BaseModel):
    """"""

    title: builtins.str
    """"""
    confirm: builtins.str
    """"""
    cancel: builtins.str
    """"""
    toast: builtins.str
    """"""


class ThreePointItem(BaseModel):
    """三点Item"""

    type: ThreePointType
    """类型"""
    default: Optional["ThreePointDefault"] = None
    """默认结构"""
    auto_player: Optional["ThreePointAutoPlay"] = None
    """自动播放"""
    share: Optional["ThreePointShare"] = None
    """分享"""
    attention: Optional["ThreePointAttention"] = None
    """关注"""
    wait: Optional["ThreePointWait"] = None
    """稍后在看"""
    dislike: Optional["ThreePointDislike"] = None
    """不感兴趣"""
    favorite: Optional["ThreePointFavorite"] = None
    """收藏"""
    top: Optional["ThreePointTop"] = None
    """置顶"""
    comment: Optional["ThreePointComment"] = None
    """评论"""
    hide: Optional["ThreePointHide"] = None
    """"""
    topic_irrelevant: Optional["ThreePointTopicIrrelevant"] = None
    """"""


class ThreePointShare(BaseModel):
    """三点-分享"""

    icon: builtins.str
    """icon"""
    title: builtins.str
    """标题"""
    channel: "List[ThreePointShareChannel]"
    """分享渠道"""
    channel_name: builtins.str
    """分享渠道名"""
    reserve: Optional["ShareReserve"] = None
    """预约卡分享图信息，仅分享有预约信息的动态时存在"""


class ThreePointShareChannel(BaseModel):
    """三点-分享渠道"""

    icon: builtins.str
    """icon"""
    title: builtins.str
    """名称"""


class ThreePointTop(BaseModel):
    """三点-置顶"""

    icon: builtins.str
    """icon"""
    title: builtins.str
    """标题"""
    type: TopType
    """状态"""


class ThreePointTopicIrrelevant(BaseModel):
    """"""

    icon: builtins.str
    """"""
    title: builtins.str
    """"""
    toast: builtins.str
    """"""
    topic_id: builtins.int
    """"""
    res_id: builtins.int
    """"""
    res_type: builtins.int
    """"""
    reason: builtins.str
    """"""


class ThreePointWait(BaseModel):
    """三点-稍后在看"""

    addition_icon: builtins.str
    """addition icon"""
    addition_text: builtins.str
    """已添加时的文案"""
    no_addition_icon: builtins.str
    """no addition icon"""
    no_addition_text: builtins.str
    """未添加时的文案"""
    id: builtins.int
    """avid"""


class TopAdditionUP(BaseModel):
    """顶部预约卡"""

    up: "List[AdditionUP]"
    """预约卡"""
    has_fold: builtins.int
    """折叠数量，大于多少个进行折叠"""


class TopicButton(BaseModel):
    """话题广场操作按钮"""

    icon: builtins.str
    """按钮图标"""
    title: builtins.str
    """按钮文案"""
    jump_uri: builtins.str
    """跳转"""
    red_dot: builtins.bool
    """"""


class TopicItem(BaseModel):
    """"""

    topic_id: builtins.int
    """"""
    topic_name: builtins.str
    """"""
    url: builtins.str
    """"""
    desc: builtins.str
    """"""
    desc2: builtins.str
    """"""
    rcmd_desc: builtins.str
    """"""


class TopicList(BaseModel):
    """综合页-话题广场"""

    title: builtins.str
    """模块标题"""
    topic_list_item: "List[TopicListItem]"
    """话题列表"""
    act_button: Optional["TopicButton"] = None
    """发起活动"""
    more_button: Optional["TopicButton"] = None
    """查看更多"""
    server_info: builtins.str
    """透传服务端上报"""


class TopicListItem(BaseModel):
    """综合页-话题广场-话题"""

    icon: builtins.str
    """前置图标"""
    icon_title: builtins.str
    """前置图标文案"""
    topic_id: builtins.int
    """话题id"""
    topic_name: builtins.str
    """话题名"""
    url: builtins.str
    """跳转链接"""
    pos: builtins.int
    """卡片位次"""
    server_info: builtins.str
    """透传服务端上报"""
    head_icon_url: builtins.str
    """"""
    up_mid: builtins.int
    """"""
    tail_icon_url: builtins.str
    """"""
    extension: builtins.str
    """"""


class TopicListReply(BaseModel):
    """"""

    items: "List[TopicItem]"
    """"""
    has_more: builtins.bool
    """"""
    offset: builtins.str
    """"""


class TopicListReq(BaseModel):
    """"""

    campus_id: builtins.int
    """"""
    offset: builtins.str
    """"""


class TopicRcmdCard(BaseModel):
    """"""

    topic_id: builtins.int
    """"""
    topic_name: builtins.str
    """"""
    url: builtins.str
    """"""
    button: Optional["CampusLabel"] = None
    """"""
    desc1: builtins.str
    """"""
    desc2: builtins.str
    """"""
    update_desc: builtins.str
    """"""


class TopicSquareInfo(BaseModel):
    """"""

    title: builtins.str
    """"""
    button: Optional["CampusLabel"] = None
    """"""
    rcmd: Optional["TopicRcmdCard"] = None
    """"""


class TopicSquareReply(BaseModel):
    """"""

    info: Optional["TopicSquareInfo"] = None
    """"""


class TopicSquareReq(BaseModel):
    """"""

    campus_id: builtins.int
    """"""


class Unfollow(BaseModel):
    """综合页-无关注列表"""

    title: builtins.str
    """标题展示文案"""
    list: "List[UnfollowUserItem]"
    """无关注列表"""
    TrackId: builtins.str
    """trackID"""


class UnfollowUserItem(BaseModel):
    """综合页-无关注列表"""

    has_update: builtins.bool
    """是否有更新"""
    face: builtins.str
    """up主头像"""
    name: builtins.str
    """up主昵称"""
    uid: builtins.int
    """up主uid"""
    pos: builtins.int
    """排序字段 从1开始"""
    live_state: LiveState
    """直播状态"""
    official: Optional["OfficialVerify"] = None
    """认证信息"""
    vip: Optional["VipInfo"] = None
    """大会员信息"""
    sign: builtins.str
    """up介绍"""
    label: builtins.str
    """标签信息"""
    button: Optional["AdditionalButton"] = None
    """按钮"""
    uri: builtins.str
    """跳转地址"""


class UpListItem(BaseModel):
    """动态顶部up列表-up主信息"""

    has_update: builtins.bool
    """是否有更新"""
    face: builtins.str
    """up主头像"""
    name: builtins.str
    """up主昵称"""
    uid: builtins.int
    """up主uid"""
    pos: builtins.int
    """排序字段 从1开始"""
    user_item_type: UserItemType
    """用户类型"""
    display_style_day: Optional["UserItemStyle"] = None
    """直播头像样式-日"""
    display_style_night: Optional["UserItemStyle"] = None
    """直播头像样式-夜"""
    style_id: builtins.int
    """直播埋点"""
    live_state: LiveState
    """直播状态"""
    separator: builtins.bool
    """分割线"""
    uri: builtins.str
    """跳转"""
    is_recall: builtins.bool
    """UP主预约上报使用"""


class UpListMoreLabel(BaseModel):
    """最常访问-查看更多"""

    title: builtins.str
    """文案"""
    uri: builtins.str
    """跳转地址"""


class UserInfo(BaseModel):
    """用户信息"""

    mid: builtins.int
    """用户mid"""
    name: builtins.str
    """用户昵称"""
    face: builtins.str
    """用户头像"""
    official: Optional["OfficialVerify"] = None
    """认证信息"""
    vip: Optional["VipInfo"] = None
    """大会员信息"""
    live: Optional["LiveInfo"] = None
    """直播信息"""
    uri: builtins.str
    """空间页跳转链接"""
    pendant: Optional["UserPendant"] = None
    """挂件信息"""
    nameplate: Optional["Nameplate"] = None
    """认证名牌"""
    level: builtins.int
    """用户等级"""
    sign: builtins.str
    """用户简介"""
    face_nft: builtins.int
    """"""
    face_nft_new: builtins.int
    """"""


class UserItemStyle(BaseModel):
    """直播头像样式"""

    rect_text: builtins.str
    """"""
    rect_text_color: builtins.str
    """"""
    rect_icon: builtins.str
    """"""
    rect_bg_color: builtins.str
    """"""
    outer_animation: builtins.str
    """"""


class UserPendant(BaseModel):
    """头像挂件信息"""

    pid: builtins.int
    """pid"""
    name: builtins.str
    """名称"""
    image: builtins.str
    """图片链接"""
    expire: builtins.int
    """有效期"""


class VideoBadge(BaseModel):
    """角标信息"""

    text: builtins.str
    """文案"""
    text_color: builtins.str
    """文案颜色-日间"""
    text_color_night: builtins.str
    """文案颜色-夜间"""
    bg_color: builtins.str
    """背景颜色-日间"""
    bg_color_night: builtins.str
    """背景颜色-夜间"""
    border_color: builtins.str
    """边框颜色-日间"""
    border_color_night: builtins.str
    """边框颜色-夜间"""
    bg_style: builtins.int
    """样式"""
    bg_alpha: builtins.int
    """背景透明度-日间"""
    bg_alpha_night: builtins.int
    """背景透明度-夜间"""


class VipInfo(BaseModel):
    """大会员信息"""

    Type: builtins.int
    """大会员类型"""
    status: builtins.int
    """大会员状态"""
    due_date: builtins.int
    """到期时间"""
    label: Optional["VipLabel"] = None
    """标签"""
    theme_type: builtins.int
    """主题"""
    avatar_subscript: builtins.int
    """大会员角标
    0:无角标 1:粉色大会员角标 2:绿色小会员角标
    """
    nickname_color: builtins.str
    """昵称色值，可能为空，色值示例：#FFFB9E60"""


class VipLabel(BaseModel):
    """大会员标签"""

    path: builtins.str
    """图片地址"""
    text: builtins.str
    """文本值"""
    label_theme: builtins.str
    """对应颜色类型"""


class Weight(BaseModel):
    """提权样式"""

    title: builtins.str
    """提权展示标题"""
    items: "List[WeightItem]"
    """下拉框内容"""
    icon: builtins.str
    """icon"""


class WeightButton(BaseModel):
    """热门默认跳转按钮"""

    jump_url: builtins.str
    title: builtins.str
    """展示文案"""


class WeightDislike(BaseModel):
    """提权不感兴趣"""

    feed_back_type: builtins.str
    """负反馈业务类型 作为客户端调用负反馈接口的参数"""
    title: builtins.str
    """展示文案"""


class WeightItem(BaseModel):
    """提权样式"""

    type: WeightType
    """类型"""
    button: Optional["WeightButton"] = None
    """热门默认跳转按钮"""
    dislike: Optional["WeightDislike"] = None
    """提权不感兴趣"""


Popup.update_forward_refs()
MatchTeam.update_forward_refs()
TopicListReq.update_forward_refs()
InfoOGV.update_forward_refs()
InteractionFace.update_forward_refs()
ModuleButtom.update_forward_refs()
Nameplate.update_forward_refs()
ModuleAd.update_forward_refs()
MdlDynForward.update_forward_refs()
ThreePointTop.update_forward_refs()
CampusRedDotReply.update_forward_refs()
AlumniDynamicsReq.update_forward_refs()
AdditionVoteWordItem.update_forward_refs()
DynamicList.update_forward_refs()
TopicList.update_forward_refs()
MdlDynSubscriptionNew.update_forward_refs()
CommentDetail.update_forward_refs()
MdlDynArticle.update_forward_refs()
DynAllPersonalReq.update_forward_refs()
ModuleFold.update_forward_refs()
MdlDynLive.update_forward_refs()
DynRegionRcmd.update_forward_refs()
ModuleExtend.update_forward_refs()
AdditionalButton.update_forward_refs()
DynTab.update_forward_refs()
CampusFeedbackInfo.update_forward_refs()
DynTabReq.update_forward_refs()
Extend.update_forward_refs()
AdParam.update_forward_refs()
ExtInfoCommon.update_forward_refs()
SearchTopicItem.update_forward_refs()
DynVideoPersonalReq.update_forward_refs()
FollowListItem.update_forward_refs()
MdlDynUGCSeason.update_forward_refs()
HighlightText.update_forward_refs()
CampusFeedbackReply.update_forward_refs()
CampusRedDotReq.update_forward_refs()
DynAllUpdOffsetReq.update_forward_refs()
CmtShowItem.update_forward_refs()
MdlDynDrawTagItem.update_forward_refs()
Weight.update_forward_refs()
SubscribeCampusReq.update_forward_refs()
SearchChannel.update_forward_refs()
DynVideoUpdOffsetReq.update_forward_refs()
UnfollowUserItem.update_forward_refs()
Relation.update_forward_refs()
AdditionUserInfo.update_forward_refs()
Description.update_forward_refs()
MdlDynMusic.update_forward_refs()
AdditionEsportMobaStatus.update_forward_refs()
ModuleAdditional.update_forward_refs()
DynAllReq.update_forward_refs()
MdlDynDrawItem.update_forward_refs()
ModuleDynamic.update_forward_refs()
AdditionVotePicItem.update_forward_refs()
DynFakeCardReq.update_forward_refs()
RcmdOption.update_forward_refs()
OfficialItem.update_forward_refs()
ExtInfoOGV.update_forward_refs()
DynTabReply.update_forward_refs()
UserItemStyle.update_forward_refs()
DynRcmdReq.update_forward_refs()
DynDetailsReply.update_forward_refs()
DynMixUpListViewMoreReply.update_forward_refs()
InteractionStat.update_forward_refs()
DynVoteReply.update_forward_refs()
MixUpListLiveItem.update_forward_refs()
AdditionalButtonInteractive.update_forward_refs()
DynRcmdUpExchangeReply.update_forward_refs()
CampusNoticeInfo.update_forward_refs()
PGCSeason.update_forward_refs()
MdlDynPGC.update_forward_refs()
ModuleAuthor.update_forward_refs()
ThreePointAutoPlay.update_forward_refs()
CampusLabel.update_forward_refs()
AdditionVote2.update_forward_refs()
DynVideoReq.update_forward_refs()
LikeUser.update_forward_refs()
ModuleBanner.update_forward_refs()
RepostListReq.update_forward_refs()
ThreePointHideInteractive.update_forward_refs()
ThreePointItem.update_forward_refs()
AdditionUP.update_forward_refs()
WeightItem.update_forward_refs()
RcmdTopButton.update_forward_refs()
CampusRcmdFeedReply.update_forward_refs()
CardVideoUpList.update_forward_refs()
CampusTopicRcmdFeedReq.update_forward_refs()
DynFakeCardReply.update_forward_refs()
TopicItem.update_forward_refs()
ThreePointDefaultToast.update_forward_refs()
DynVoteReq.update_forward_refs()
ChannelInfo.update_forward_refs()
MdlDynMedialist.update_forward_refs()
UpListItem.update_forward_refs()
CampusBillboardInternalReq.update_forward_refs()
DynSearchReply.update_forward_refs()
LivePendant.update_forward_refs()
VipInfo.update_forward_refs()
ModuleTitle.update_forward_refs()
ModuleBannerUser.update_forward_refs()
DynThumbReq.update_forward_refs()
ThreePointFavorite.update_forward_refs()
IconButton.update_forward_refs()
OfficialRcmdArchive.update_forward_refs()
SearchTopicButton.update_forward_refs()
GuideBarInfo.update_forward_refs()
StoryItem.update_forward_refs()
MdlDynCommon.update_forward_refs()
DynServerDetailsReply.update_forward_refs()
AdditionGoods.update_forward_refs()
SearchTopic.update_forward_refs()
AdditionVote.update_forward_refs()
AdditionalButtonShare.update_forward_refs()
SchoolRecommendReq.update_forward_refs()
LikeAnimation.update_forward_refs()
ThreePointDislike.update_forward_refs()
SchoolSearchReq.update_forward_refs()
ExtInfoLBS.update_forward_refs()
DynAdditionCommonFollowReq.update_forward_refs()
TopicButton.update_forward_refs()
AdditionVoteWord.update_forward_refs()
DynRcmdUpExchangeReq.update_forward_refs()
AdditionalButtonStyle.update_forward_refs()
CampusRcmdReq.update_forward_refs()
VideoBadge.update_forward_refs()
SetDecisionReq.update_forward_refs()
ModuleLikeUser.update_forward_refs()
ModuleTop.update_forward_refs()
AdditionUgc.update_forward_refs()
DynSearchReq.update_forward_refs()
OfficialVerify.update_forward_refs()
GoodsItem.update_forward_refs()
CampusRcmdTop.update_forward_refs()
CampusFeedbackReq.update_forward_refs()
RcmdUPsParam.update_forward_refs()
MdlDynDraw.update_forward_refs()
RcmdAuthor.update_forward_refs()
ExtendReplyParam.update_forward_refs()
LikeListReply.update_forward_refs()
TopicRcmdCard.update_forward_refs()
ExtInfoTopic.update_forward_refs()
TopicSquareReply.update_forward_refs()
ModuleDispute.update_forward_refs()
ExtendReply.update_forward_refs()
MdlDynCourSeason.update_forward_refs()
AdditionalActSkin.update_forward_refs()
AdditionVoteDefaule.update_forward_refs()
SchoolRecommendReply.update_forward_refs()
CampusTop.update_forward_refs()
CardVideoFollowList.update_forward_refs()
DynRegionRcmdItem.update_forward_refs()
ThreePointShareChannel.update_forward_refs()
DynSpaceSearchDetailsReq.update_forward_refs()
AlumniDynamicsReply.update_forward_refs()
CampusBillBoardReply.update_forward_refs()
NewEP.update_forward_refs()
VipLabel.update_forward_refs()
WeightButton.update_forward_refs()
DynLightReply.update_forward_refs()
MdlDynSubscription.update_forward_refs()
DynLightReq.update_forward_refs()
ModuleRecommend.update_forward_refs()
RcmdArchive.update_forward_refs()
TopicSquareInfo.update_forward_refs()
ShareReserve.update_forward_refs()
SortType.update_forward_refs()
StoryArchive.update_forward_refs()
WeightDislike.update_forward_refs()
ThreePointComment.update_forward_refs()
DynSpaceReq.update_forward_refs()
TopicSquareReq.update_forward_refs()
CampusInfo.update_forward_refs()
NoReply.update_forward_refs()
TopicListReply.update_forward_refs()
ModuleDesc.update_forward_refs()
ModuleAuthorForward.update_forward_refs()
OfficialRcmdDynamic.update_forward_refs()
DynMixUpListViewMoreReq.update_forward_refs()
ModuleTopicDetailsExt.update_forward_refs()
UserPendant.update_forward_refs()
AdditionEsport.update_forward_refs()
DecoCardFan.update_forward_refs()
AdditionVotePic.update_forward_refs()
CampusRcmdItem.update_forward_refs()
UserInfo.update_forward_refs()
CampusRcmdReply.update_forward_refs()
ModuleStory.update_forward_refs()
ModuleTopicBrief.update_forward_refs()
MixUpListItem.update_forward_refs()
DynamicItem.update_forward_refs()
LiveInfo.update_forward_refs()
OfficialAccountInfo.update_forward_refs()
OfficialAccountsReq.update_forward_refs()
ModuleTopic.update_forward_refs()
ThreePointHide.update_forward_refs()
OfficialAccountsReply.update_forward_refs()
MdlDynCourBatch.update_forward_refs()
ModuleAuthorBadgeButton.update_forward_refs()
OfficialDynamicsReply.update_forward_refs()
NoReq.update_forward_refs()
ModuleComment.update_forward_refs()
SchoolSearchReply.update_forward_refs()
ModuleInteraction.update_forward_refs()
IconBadge.update_forward_refs()
MdlDynArchive.update_forward_refs()
DynDetailReply.update_forward_refs()
ModuleItemNull.update_forward_refs()
ModuleTopTag.update_forward_refs()
InteractionItem.update_forward_refs()
ExtInfoHot.update_forward_refs()
ModuleRcmd.update_forward_refs()
MdlDynDrawTag.update_forward_refs()
CampusTopicRcmdFeedReply.update_forward_refs()
CampusMateLikeListReply.update_forward_refs()
Unfollow.update_forward_refs()
SearchInfo.update_forward_refs()
DynAllReply.update_forward_refs()
DynAdditionCommonFollowReply.update_forward_refs()
ModuleStat.update_forward_refs()
ModuleShareInfo.update_forward_refs()
SetRecentCampusReq.update_forward_refs()
UpListMoreLabel.update_forward_refs()
LikeInfo.update_forward_refs()
ModuleAuthorForwardTitle.update_forward_refs()
RepostListRsp.update_forward_refs()
AdditionCommon.update_forward_refs()
MdlDynApplet.update_forward_refs()
OfficialDynamicsReq.update_forward_refs()
PlayurlParam.update_forward_refs()
ModuleBannerUserItem.update_forward_refs()
ThreePointWait.update_forward_refs()
DynVideoReply.update_forward_refs()
MdlDynLiveRcmd.update_forward_refs()
ModuleExtendItem.update_forward_refs()
TopicListItem.update_forward_refs()
LikeListReq.update_forward_refs()
AdditionalPGC.update_forward_refs()
ThreePointAttention.update_forward_refs()
ThreePointTopicIrrelevant.update_forward_refs()
ShareChannel.update_forward_refs()
CardVideoDynList.update_forward_refs()
CampusMateLikeListReq.update_forward_refs()
ModuleDescGoods.update_forward_refs()
DynAllPersonalReply.update_forward_refs()
DynServerDetailsReq.update_forward_refs()
DynRcmdReply.update_forward_refs()
RcmdItem.update_forward_refs()
DynSpaceRsp.update_forward_refs()
CampusBannerInfo.update_forward_refs()
ThreePointShare.update_forward_refs()
TopAdditionUP.update_forward_refs()
DynDetailsReq.update_forward_refs()
CampusBillBoardReq.update_forward_refs()
AdditionEsportMobaStatusDesc.update_forward_refs()
ExtInfoGame.update_forward_refs()
Dimension.update_forward_refs()
DynVideoPersonalReply.update_forward_refs()
CampusRcmdInfo.update_forward_refs()
DynDetailReq.update_forward_refs()
CampusRcmdFeedReq.update_forward_refs()
DecorateCard.update_forward_refs()
DynSpaceSearchDetailsReply.update_forward_refs()
SearchToast.update_forward_refs()
Module.update_forward_refs()
ThreePointDefault.update_forward_refs()
CampusShowTabInfo.update_forward_refs()
AdditionEsportMoba.update_forward_refs()
