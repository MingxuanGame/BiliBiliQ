"""
Generated by generator/gen_pydantic.py. DO NOT EDIT!
isort:skip_file
"""

import builtins
from typing import List, Dict, Any, Optional
from pydantic import BaseModel
from enum import Enum
from datetime import datetime


class ButType(str, Enum):
    """"""

    BUT_INVALID = 'BUT_INVALID'
    """"""
    BUT_REDIRECT = 'BUT_REDIRECT'
    """"""
    BUT_LIKE = 'BUT_LIKE'
    """"""


class TabType(str, Enum):
    """"""

    TAB_INVALID = 'TAB_INVALID'
    """"""
    TAB_OGV_DETAIL = 'TAB_OGV_DETAIL'
    """"""
    TAB_OGV_REPLY = 'TAB_OGV_REPLY'
    """"""
    TAB_FEED_BID = 'TAB_FEED_BID'
    """"""
    TAB_FEED_SMALL = 'TAB_FEED_SMALL'
    """"""


class BigItem(BaseModel):
    """"""

    title: builtins.str
    """"""
    cover_image_uri: builtins.str
    """"""
    uri: builtins.str
    """"""
    cover_right_text: builtins.str
    """"""
    cover_left_text1: builtins.str
    """"""
    cover_left_icon1: builtins.int
    """"""
    cover_left_text2: builtins.str
    """"""
    cover_left_icon2: builtins.int
    """"""
    user_card: Optional["UserCard"] = None
    """"""
    like_button: Optional["LikeButton"] = None
    """"""
    param: builtins.int
    """"""


class Button(BaseModel):
    """"""

    title: builtins.str
    """"""
    link: builtins.str
    """"""
    id: builtins.str
    """"""
    icon: builtins.int
    """"""
    but_type: ButType
    """"""
    follow_state: builtins.int
    """"""
    has_title: builtins.str
    """"""


class Cast(BaseModel):
    """"""

    person: "List[MediaPerson]"
    """"""
    title: builtins.str
    """"""


class ChannelInfo(BaseModel):
    """"""

    channel_id: builtins.int
    """"""
    subscribed: builtins.bool
    """"""


class LikeButton(BaseModel):
    """"""

    aid: builtins.int
    """"""
    count: builtins.int
    """"""
    show_count: builtins.bool
    """"""
    event: builtins.str
    """"""
    selected: builtins.int
    """"""
    event_v2: builtins.str
    """"""
    like_resource: Optional["LikeButtonResource"] = None
    """"""
    dis_like_resource: Optional["LikeButtonResource"] = None
    """"""
    like_night_resource: Optional["LikeButtonResource"] = None
    """"""
    dis_like_night_resource: Optional["LikeButtonResource"] = None
    """"""


class LikeButtonResource(BaseModel):
    """"""

    url: builtins.str
    """"""
    hash: builtins.str
    """"""


class LikeCard(BaseModel):
    """"""

    like: builtins.int
    """"""
    is_follow: builtins.bool
    """"""


class MediaCard(BaseModel):
    """"""

    cover: builtins.str
    """"""
    cur_title: builtins.str
    """"""
    style: builtins.str
    """"""
    label: builtins.str
    """"""
    but_first: Optional["Button"] = None
    """"""


class MediaDetailReply(BaseModel):
    """"""

    cast: Optional["Cast"] = None
    """"""
    staff: Optional["Staff"] = None
    """"""
    overview: Optional["Overview"] = None
    """"""


class MediaDetailReq(BaseModel):
    """"""

    biz_id: builtins.int
    """"""
    biz_type: builtins.int
    """"""


class MediaFollowReply(BaseModel):
    """"""


class MediaFollowReq(BaseModel):
    """"""

    id: builtins.str
    """"""
    type: builtins.int
    """"""


class MediaPerson(BaseModel):
    """"""

    real_name: builtins.str
    """"""
    square_url: builtins.str
    """"""
    character: builtins.str
    """"""
    person_id: builtins.int
    """"""
    type: builtins.str
    """"""


class MediaRelationReply(BaseModel):
    """"""

    offset: builtins.str
    """"""
    has_more: builtins.bool
    """"""
    list: "List[SmallItem]"
    """"""


class MediaRelationReq(BaseModel):
    """"""

    biz_id: builtins.int
    """"""
    biz_type: builtins.int
    """"""
    feed_id: builtins.int
    """"""
    offset: builtins.str
    """"""
    ps: builtins.int
    """"""


class MediaTabReply(BaseModel):
    """"""

    media_card: Optional["MediaCard"] = None
    """"""
    tab: "List[ShowTab]"
    """"""
    default_tab_index: builtins.int
    """"""
    channel_info: Optional["ChannelInfo"] = None
    """"""


class MediaTabReq(BaseModel):
    """"""

    biz_id: builtins.int
    """"""
    biz_type: builtins.int
    """"""
    source: builtins.str
    """"""
    spmid: builtins.str
    """"""
    args: Dict[builtins.str, builtins.str]
    """"""


class MediaVideoReply(BaseModel):
    """"""

    offset: builtins.str
    """"""
    has_more: builtins.bool
    """"""
    list: "List[BigItem]"
    """"""


class MediaVideoReq(BaseModel):
    """"""

    biz_id: builtins.int
    """"""
    biz_type: builtins.int
    """"""
    feed_id: builtins.int
    """"""
    offset: builtins.str
    """"""
    ps: builtins.int
    """"""


class Overview(BaseModel):
    """"""

    title: builtins.str
    """"""
    text: builtins.str
    """"""


class ShowTab(BaseModel):
    """"""

    tab_type: TabType
    """"""
    title: builtins.str
    """"""
    url: builtins.str
    """"""


class SmallItem(BaseModel):
    """"""

    title: builtins.str
    """"""
    cover_image_uri: builtins.str
    """"""
    uri: builtins.str
    """"""
    cover_right_text: builtins.str
    """"""
    cover_left_text1: builtins.str
    """"""
    cover_left_icon1: builtins.int
    """"""
    cover_left_text2: builtins.str
    """"""
    cover_left_icon2: builtins.int
    """"""
    param: builtins.int
    """"""
    mid: builtins.int
    """"""


class Staff(BaseModel):
    """"""

    title: builtins.str
    """"""
    text: builtins.str
    """"""


class UserCard(BaseModel):
    """"""

    user_name: builtins.str
    """"""
    user_face: builtins.str
    """"""
    user_url: builtins.str
    """"""
    mid: builtins.int
    """"""


BigItem.update_forward_refs()
MediaTabReply.update_forward_refs()
SmallItem.update_forward_refs()
ChannelInfo.update_forward_refs()
MediaDetailReply.update_forward_refs()
MediaFollowReq.update_forward_refs()
MediaTabReq.update_forward_refs()
UserCard.update_forward_refs()
Cast.update_forward_refs()
LikeCard.update_forward_refs()
LikeButton.update_forward_refs()
LikeButtonResource.update_forward_refs()
Staff.update_forward_refs()
MediaFollowReply.update_forward_refs()
Button.update_forward_refs()
MediaCard.update_forward_refs()
MediaVideoReply.update_forward_refs()
MediaDetailReq.update_forward_refs()
MediaPerson.update_forward_refs()
MediaRelationReq.update_forward_refs()
MediaVideoReq.update_forward_refs()
MediaRelationReply.update_forward_refs()
ShowTab.update_forward_refs()
Overview.update_forward_refs()
