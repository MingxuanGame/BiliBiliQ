"""
Generated by generator/gen_pydantic.py. DO NOT EDIT!
isort:skip_file
"""
import builtins
from typing import List, Dict, Any, Optional
from pydantic import BaseModel
from enum import Enum
from datetime import datetime


class Business(str, Enum):
    """业务类型"""

    UNKNOWN = 'UNKNOWN'
    """未知类型"""
    STORY = 'STORY'
    """story业务"""


class CodeType(str, Enum):
    """编码类型"""

    NOCODE = 'NOCODE'
    """默认"""
    CODE264 = 'CODE264'
    """H.264"""
    CODE265 = 'CODE265'
    """H.265"""
    CODEAV1 = 'CODEAV1'
    """av1"""


class ConfType(str, Enum):
    """设置类型"""

    NoType = 'NoType'
    """"""
    FLIPCONF = 'FLIPCONF'
    """镜像反转"""
    CASTCONF = 'CASTCONF'
    """视频投屏"""
    FEEDBACK = 'FEEDBACK'
    """反馈"""
    SUBTITLE = 'SUBTITLE'
    """字幕"""
    PLAYBACKRATE = 'PLAYBACKRATE'
    """播放速度"""
    TIMEUP = 'TIMEUP'
    """定时停止播放"""
    PLAYBACKMODE = 'PLAYBACKMODE'
    """播放方式"""
    SCALEMODE = 'SCALEMODE'
    """画面尺寸"""
    BACKGROUNDPLAY = 'BACKGROUNDPLAY'
    """后台播放"""
    LIKE = 'LIKE'
    """顶"""
    DISLIKE = 'DISLIKE'
    """踩"""
    COIN = 'COIN'
    """投币"""
    ELEC = 'ELEC'
    """充电"""
    SHARE = 'SHARE'
    """分享"""
    SCREENSHOT = 'SCREENSHOT'
    """截图"""
    LOCKSCREEN = 'LOCKSCREEN'
    """锁屏"""
    RECOMMEND = 'RECOMMEND'
    """推荐"""
    PLAYBACKSPEED = 'PLAYBACKSPEED'
    """倍速"""
    DEFINITION = 'DEFINITION'
    """清晰度"""
    SELECTIONS = 'SELECTIONS'
    """选集"""
    NEXT = 'NEXT'
    """下一集"""
    EDITDM = 'EDITDM'
    """编辑弹幕"""
    SMALLWINDOW = 'SMALLWINDOW'
    """小窗"""
    SHAKE = 'SHAKE'
    """播放震动"""
    OUTERDM = 'OUTERDM'
    """外层面板弹幕设置"""
    INNERDM = 'INNERDM'
    """三点内弹幕设置"""
    PANORAMA = 'PANORAMA'
    """全景"""
    DOLBY = 'DOLBY'
    """杜比"""
    COLORFILTER = 'COLORFILTER'
    """颜色滤镜"""


class Group(str, Enum):
    """"""

    UnknownGroup = 'UnknownGroup'
    """"""
    A = 'A'
    """"""
    B = 'B'
    """"""
    C = 'C'
    """"""


class PlayErr(str, Enum):
    """错误码"""

    NoErr = 'NoErr'
    """"""
    WithMultiDeviceLoginErr = 'WithMultiDeviceLoginErr'
    """管控类型的错误码"""


class PlayLimitCode(str, Enum):
    """"""

    PLCUnkown = 'PLCUnkown'
    """"""
    PLCUgcNotPayed = 'PLCUgcNotPayed'
    """"""


class VideoType(str, Enum):
    """视频类型"""

    Unknown_VALUE = 'Unknown_VALUE'
    """"""
    FLV_VALUE = 'FLV_VALUE'
    """flv格式"""
    DASH_VALUE = 'DASH_VALUE'
    """dash格式"""
    MP4_VALUE = 'MP4_VALUE'
    """mp4格式"""


class AB(BaseModel):
    """"""

    glance: Optional["Glance"] = None
    """"""
    group: builtins.int
    """"""


class ArcConf(BaseModel):
    """配置项"""

    is_support: builtins.bool
    """是否支持"""
    disabled: builtins.bool
    """"""
    extra_content: Optional["ExtraContent"] = None
    """"""


class Chronos(BaseModel):
    """Chronos灰度管理"""

    md5: builtins.str
    """资源md5"""
    file: builtins.str
    """资源文件"""


class ButtonStyle(BaseModel):
    """"""

    text: builtins.str
    """"""
    text_color: builtins.str
    """"""
    bg_color: builtins.str
    """"""
    jump_link: builtins.str
    """"""


class CloudConf(BaseModel):
    """"""

    show: builtins.bool
    """是否展示功能"""
    conf_type: ConfType
    """设置类型"""
    field_value: Optional["FieldValue"] = None
    """"""
    conf_value: Optional["ConfValue"] = None
    """"""


class ConfValue(BaseModel):
    """"""

    switch_val: builtins.bool
    """"""
    selected_val: builtins.int
    """"""


class DashItem(BaseModel):
    """dash条目"""

    id: builtins.int
    """清晰度"""
    baseUrl: builtins.str
    """主线流"""
    backup_url: List[builtins.str]
    """备用流"""
    bandwidth: builtins.int
    """带宽"""
    codecid: builtins.int
    """编码id"""
    md5: builtins.str
    """md5"""
    size: builtins.int
    """大小"""
    frame_rate: builtins.str
    """帧率"""
    widevine_pssh: builtins.str
    """"""


class DashVideo(BaseModel):
    """dash视频流"""

    base_url: builtins.str
    """主线流"""
    backup_url: List[builtins.str]
    """备用流"""
    bandwidth: builtins.int
    """带宽"""
    codecid: builtins.int
    """编码id"""
    md5: builtins.str
    """md5"""
    size: builtins.int
    """大小"""
    audioId: builtins.int
    """伴音质量id"""
    no_rexcode: builtins.bool
    """是否非全二压"""
    frame_rate: builtins.str
    """码率"""
    width: builtins.int
    """宽度"""
    height: builtins.int
    """高度"""
    widevine_pssh: builtins.str
    """"""


class DolbyItem(BaseModel):
    """杜比伴音信息"""

    class DolbyItem_Type(str, Enum):
        NONE = 'NONE'
        """NONE"""
        COMMON = 'COMMON'
        """普通杜比音效"""
        ATMOS = 'ATMOS'
        """全景杜比音效"""

    """NONE"""
    """普通杜比音效"""
    """全景杜比音效"""
    type: DolbyItem_Type
    """杜比类型"""
    audio: Optional["DashItem"] = None
    """音频流"""


class Event(BaseModel):
    """事件"""

    shake: Optional["Shake"] = None
    """震动"""


class ExtraContent(BaseModel):
    """"""

    disabled_reason: builtins.str
    """"""
    disabled_code: builtins.int
    """"""


class FieldValue(BaseModel):
    """配置字段值"""

    switch: builtins.bool
    """开关"""


class FormatDescription(BaseModel):
    """清晰度描述"""

    quality: builtins.int
    """清晰度"""
    format: builtins.str
    """清晰度格式"""
    description: builtins.str
    """清晰度描述"""
    new_description: builtins.str
    """新描述"""
    display_desc: builtins.str
    """选中态的清晰度描述"""
    superscript: builtins.str
    """选中态的清晰度描述的角标"""


class Glance(BaseModel):
    """"""

    can_watch: builtins.bool
    """"""
    times: builtins.int
    """"""
    duration: builtins.int
    """"""


class PlayAbilityConf(BaseModel):
    """禁用功能配置"""

    background_play_conf: Optional["CloudConf"] = None
    """后台播放"""
    flip_conf: Optional["CloudConf"] = None
    """镜像反转"""
    cast_conf: Optional["CloudConf"] = None
    """投屏"""
    feedback_conf: Optional["CloudConf"] = None
    """反馈"""
    subtitle_conf: Optional["CloudConf"] = None
    """字幕"""
    playback_rate_conf: Optional["CloudConf"] = None
    """播放速度"""
    time_up_conf: Optional["CloudConf"] = None
    """定时停止"""
    playback_mode_conf: Optional["CloudConf"] = None
    """播放方式"""
    scale_mode_conf: Optional["CloudConf"] = None
    """画面尺寸"""
    like_conf: Optional["CloudConf"] = None
    """赞"""
    dislike_conf: Optional["CloudConf"] = None
    """踩"""
    coin_conf: Optional["CloudConf"] = None
    """投币"""
    elec_conf: Optional["CloudConf"] = None
    """充电"""
    share_conf: Optional["CloudConf"] = None
    """分享"""
    screen_shot_conf: Optional["CloudConf"] = None
    """截图"""
    lock_screen_conf: Optional["CloudConf"] = None
    """锁定"""
    recommend_conf: Optional["CloudConf"] = None
    """相关推荐"""
    playback_speed_conf: Optional["CloudConf"] = None
    """播放速度"""
    definition_conf: Optional["CloudConf"] = None
    """清晰度"""
    selections_conf: Optional["CloudConf"] = None
    """选集"""
    next_conf: Optional["CloudConf"] = None
    """下一集"""
    edit_dm_conf: Optional["CloudConf"] = None
    """编辑弹幕"""
    small_window_conf: Optional["CloudConf"] = None
    """小窗"""
    shake_conf: Optional["CloudConf"] = None
    """震动"""
    outer_dm_conf: Optional["CloudConf"] = None
    """外层面板弹幕设置"""
    innerDmDisable: Optional["CloudConf"] = None
    """三点内弹幕设置"""
    inner_dm_conf: Optional["CloudConf"] = None
    """一起看入口"""
    dolby_conf: Optional["CloudConf"] = None
    """杜比音效"""
    color_filter_conf: Optional["CloudConf"] = None
    """颜色滤镜"""


class PlayArcConf(BaseModel):
    """播放控件稿件配置"""

    background_play_conf: Optional["ArcConf"] = None
    """后台播放"""
    flip_conf: Optional["ArcConf"] = None
    """镜像反转"""
    cast_conf: Optional["ArcConf"] = None
    """投屏"""
    feedback_conf: Optional["ArcConf"] = None
    """反馈"""
    subtitle_conf: Optional["ArcConf"] = None
    """字幕"""
    playback_rate_conf: Optional["ArcConf"] = None
    """播放速度"""
    time_up_conf: Optional["ArcConf"] = None
    """定时停止"""
    playback_mode_conf: Optional["ArcConf"] = None
    """播放方式"""
    scale_mode_conf: Optional["ArcConf"] = None
    """画面尺寸"""
    like_conf: Optional["ArcConf"] = None
    """赞"""
    dislike_conf: Optional["ArcConf"] = None
    """踩"""
    coin_conf: Optional["ArcConf"] = None
    """投币"""
    elec_conf: Optional["ArcConf"] = None
    """充电"""
    share_conf: Optional["ArcConf"] = None
    """分享"""
    screen_shot_conf: Optional["ArcConf"] = None
    """截图"""
    lock_screen_conf: Optional["ArcConf"] = None
    """锁定"""
    recommend_conf: Optional["ArcConf"] = None
    """相关推荐"""
    playback_speed_conf: Optional["ArcConf"] = None
    """播放速度"""
    definition_conf: Optional["ArcConf"] = None
    """清晰度"""
    selections_conf: Optional["ArcConf"] = None
    """选集"""
    next_conf: Optional["ArcConf"] = None
    """下一集"""
    edit_dm_conf: Optional["ArcConf"] = None
    """编辑弹幕"""
    small_window_conf: Optional["ArcConf"] = None
    """小窗"""
    shake_conf: Optional["ArcConf"] = None
    """震动"""
    outer_dm_conf: Optional["ArcConf"] = None
    """外层面板弹幕设置"""
    inner_dm_conf: Optional["ArcConf"] = None
    """三点内弹幕设置"""
    panorama_conf: Optional["ArcConf"] = None
    """一起看入口"""
    dolby_conf: Optional["ArcConf"] = None
    """杜比音效"""
    screen_recording_conf: Optional["ArcConf"] = None
    """屏幕录制"""
    color_filter_conf: Optional["ArcConf"] = None
    """颜色滤镜"""


class PlayConfEditReply(BaseModel):
    """编辑播放界面配置-响应"""


class PlayConfEditReq(BaseModel):
    """编辑播放界面配置-请求"""

    play_conf: "List[PlayConfState]"
    """播放界面配置"""


class PlayConfReply(BaseModel):
    """获取播放界面配置-响应"""

    play_conf: Optional["PlayAbilityConf"] = None
    """播放控件用户自定义配置"""


class PlayConfReq(BaseModel):
    """获取播放界面配置-请求"""


class PlayConfState(BaseModel):
    """播放界面配置"""

    conf_type: ConfType
    """设置类型"""
    show: builtins.bool
    """是否隐藏"""
    field_value: Optional["FieldValue"] = None
    """配置字段值"""
    conf_value: Optional["ConfValue"] = None
    """"""


class PlayLimit(BaseModel):
    """"""

    code: PlayLimitCode
    """"""
    message: builtins.str
    """"""
    sub_message: builtins.str
    """"""
    button: Optional["ButtonStyle"] = None
    """"""


class PlayURLReply(BaseModel):
    """视频地址-回复"""

    quality: builtins.int
    """清晰的"""
    format: builtins.str
    """格式"""
    timelength: builtins.int
    """总时长(单位为ms)"""
    video_codecid: builtins.int
    """编码id"""
    fnver: builtins.int
    """视频流版本"""
    fnval: builtins.int
    """视频流格式"""
    video_project: builtins.bool
    """是否支持投影"""
    durl: "List[ResponseUrl]"
    """分段视频流列表"""
    dash: Optional["ResponseDash"] = None
    """dash数据"""
    no_rexcode: builtins.int
    """是否非全二压"""
    upgrade_limit: Optional["UpgradeLimit"] = None
    """互动视频升级提示"""
    support_formats: "List[FormatDescription]"
    """清晰度描述列表"""
    type: VideoType
    """视频格式"""


class PlayURLReq(BaseModel):
    """视频地址-请求"""

    aid: builtins.int
    """稿件avid"""
    cid: builtins.int
    """视频cid"""
    qn: builtins.int
    """清晰度"""
    fnver: builtins.int
    """视频流版本"""
    fnval: builtins.int
    """视频流格式"""
    download: builtins.int
    """下载模式
    0:播放 1:flv下载 2:dash下载
    """
    force_host: builtins.int
    """流url强制是用域名
    0:允许使用ip 1:使用http 2:使用https
    """
    fourk: builtins.bool
    """是否4K"""
    spmid: builtins.str
    """当前页spm"""
    from_spmid: builtins.str
    """上一页spm"""


class PlayViewReply(BaseModel):
    """播放页信息-回复"""

    video_info: Optional["VideoInfo"] = None
    """视频流信息"""
    play_conf: Optional["PlayAbilityConf"] = None
    """播放控件用户自定义配置"""
    upgrade_limit: Optional["UpgradeLimit"] = None
    """互动视频升级提示"""
    chronos: Optional["Chronos"] = None
    """Chronos灰度管理"""
    play_arc: Optional["PlayArcConf"] = None
    """播放控件稿件配置"""
    event: Optional["Event"] = None
    """事件"""
    ab: Optional["AB"] = None
    """"""
    play_limit: Optional["PlayLimit"] = None
    """"""


class PlayViewReq(BaseModel):
    """播放页信息-请求"""

    aid: builtins.int
    """稿件avid"""
    cid: builtins.int
    """视频cid"""
    qn: builtins.int
    """清晰度"""
    fnver: builtins.int
    """视频流版本"""
    fnval: builtins.int
    """视频流格式"""
    download: builtins.int
    """下载模式
    0:播放 1:flv下载 2:dash下载
    """
    force_host: builtins.int
    """流url强制是用域名
    0:允许使用ip 1:使用http 2:使用https
    """
    fourk: builtins.bool
    """是否4K"""
    spmid: builtins.str
    """当前页spm"""
    from_spmid: builtins.str
    """上一页spm"""
    teenagers_mode: builtins.int
    """青少年模式"""
    prefer_codec_type: CodeType
    """编码"""
    business: Business
    """业务类型"""
    voice_balance: builtins.int
    """"""


class ProjectReply(BaseModel):
    """投屏地址-响应"""

    project: Optional["PlayURLReply"] = None
    """Ellipsis"""


class ProjectReq(BaseModel):
    """投屏地址-请求"""

    aid: builtins.int
    """稿件avid"""
    cid: builtins.int
    """视频cid"""
    qn: builtins.int
    """清晰度"""
    fnver: builtins.int
    """视频流版本"""
    fnval: builtins.int
    """视频流格式"""
    download: builtins.int
    """下载模式
    0:播放 1:flv下载 2:dash下载
    """
    force_host: builtins.int
    """流url强制是用域名
    0:允许使用ip 1:使用http 2:使用https
    """
    fourk: builtins.bool
    """是否4K"""
    spmid: builtins.str
    """当前页spm"""
    from_spmid: builtins.str
    """上一页spm"""
    protocol: builtins.int
    """使用协议
    0:默认乐播 1:自建协议 2:云投屏 3:airplay
    """
    device_type: builtins.int
    """投屏设备
    0:默认其他 1:OTT设备
    """


class ResponseDash(BaseModel):
    """dash数据"""

    video: "List[DashItem]"
    """dash视频流"""
    audio: "List[DashItem]"
    """dash伴音流"""


class ResponseUrl(BaseModel):
    """分段流条目"""

    order: builtins.int
    """分段序号"""
    length: builtins.int
    """分段时长"""
    size: builtins.int
    """分段大小"""
    url: builtins.str
    """主线流"""
    backup_url: List[builtins.str]
    """备用流"""
    md5: builtins.str
    """md5"""


class SegmentVideo(BaseModel):
    """分段视频流"""

    segment: "List[ResponseUrl]"
    """分段视频流列表"""


class Shake(BaseModel):
    """震动"""

    file: builtins.str
    """文件地址"""


class Stream(BaseModel):
    """视频流信息"""

    stream_info: Optional["StreamInfo"] = None
    """元数据"""
    dash_video: Optional["DashVideo"] = None
    """dash流"""
    segment_video: Optional["SegmentVideo"] = None
    """分段流"""


class StreamInfo(BaseModel):
    """流媒体元数据"""

    quality: builtins.int
    """清晰度"""
    format: builtins.str
    """格式"""
    description: builtins.str
    """格式描述"""
    err_code: PlayErr
    """错误码"""
    limit: Optional["StreamLimit"] = None
    """不满足条件信息"""
    need_vip: builtins.bool
    """是否需要vip"""
    need_login: builtins.bool
    """是否需要登录"""
    intact: builtins.bool
    """是否完整"""
    no_rexcode: builtins.bool
    """是否非全二压"""
    attribute: builtins.int
    """清晰度属性位"""
    new_description: builtins.str
    """新版格式描述"""
    display_desc: builtins.str
    """格式文字"""
    superscript: builtins.str
    """新版格式描述备注"""


class StreamLimit(BaseModel):
    """清晰度不满足条件信息"""

    title: builtins.str
    """标题"""
    uri: builtins.str
    """跳转地址"""
    msg: builtins.str
    """提示信息"""


class UpgradeButton(BaseModel):
    """互动视频升级按钮信息"""

    title: builtins.str
    """标题"""
    link: builtins.str
    """链接"""


class UpgradeLimit(BaseModel):
    """互动视频升级提示"""

    code: builtins.int
    """错误码"""
    message: builtins.str
    """错误信息"""
    image: builtins.str
    """图片url"""
    button: Optional["UpgradeButton"] = None
    """按钮信息"""


class VideoInfo(BaseModel):
    """视频url信息"""

    quality: builtins.int
    """视频清晰度"""
    format: builtins.str
    """视频格式"""
    timelength: builtins.int
    """视频时长"""
    video_codecid: builtins.int
    """视频编码id"""
    stream_list: "List[Stream]"
    """视频流"""
    dash_audio: "List[DashItem]"
    """伴音流"""
    dolby: Optional["DolbyItem"] = None
    """杜比伴音流"""
    volume: Optional["VolumeInfo"] = None
    """"""


class VolumeInfo(BaseModel):
    """"""

    measured_i: builtins.float
    """"""
    measured_lra: builtins.float
    """"""
    measured_tp: builtins.float
    """"""
    measured_threshold: builtins.float
    """"""
    target_offset: builtins.float
    """"""
    target_i: builtins.float
    """"""
    target_tp: builtins.float
    """"""


PlayConfReply.update_forward_refs()
Chronos.update_forward_refs()
Stream.update_forward_refs()
PlayConfEditReply.update_forward_refs()
Glance.update_forward_refs()
DashVideo.update_forward_refs()
ArcConf.update_forward_refs()
Event.update_forward_refs()
ResponseUrl.update_forward_refs()
AB.update_forward_refs()
StreamLimit.update_forward_refs()
PlayConfState.update_forward_refs()
PlayConfEditReq.update_forward_refs()
ProjectReply.update_forward_refs()
VideoInfo.update_forward_refs()
FormatDescription.update_forward_refs()
PlayConfReq.update_forward_refs()
PlayLimit.update_forward_refs()
ButtonStyle.update_forward_refs()
VolumeInfo.update_forward_refs()
ConfValue.update_forward_refs()
UpgradeButton.update_forward_refs()
FieldValue.update_forward_refs()
PlayAbilityConf.update_forward_refs()
DolbyItem.update_forward_refs()
PlayViewReply.update_forward_refs()
PlayArcConf.update_forward_refs()
PlayViewReq.update_forward_refs()
PlayURLReq.update_forward_refs()
ProjectReq.update_forward_refs()
ExtraContent.update_forward_refs()
ResponseDash.update_forward_refs()
SegmentVideo.update_forward_refs()
CloudConf.update_forward_refs()
PlayURLReply.update_forward_refs()
UpgradeLimit.update_forward_refs()
StreamInfo.update_forward_refs()
Shake.update_forward_refs()
DashItem.update_forward_refs()
