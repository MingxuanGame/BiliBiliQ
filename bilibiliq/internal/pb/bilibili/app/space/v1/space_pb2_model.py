"""
Generated by generator/gen_pydantic.py. DO NOT EDIT!
isort:skip_file
"""
import builtins
from typing import List, Dict, Any, Optional
from pydantic import BaseModel
from enum import Enum
from datetime import datetime


class ArchiveReply(BaseModel):
    """-响应"""

    item: "List[BiliSpaceVideo]"
    """"""
    count: builtins.int
    """"""
    episodic_button: Optional["EpisodicButton"] = None
    """"""
    order: "List[OrderConfig]"
    """"""


class ArchiveReq(BaseModel):
    """-请求"""

    vmid: builtins.int
    """"""
    pn: builtins.int
    """"""
    ps: builtins.int
    """"""
    order: builtins.str
    """"""


class Badge(BaseModel):
    """"""

    text: builtins.str
    """"""
    text_color: builtins.str
    """"""
    text_color_night: builtins.str
    """"""
    bg_color: builtins.str
    """"""
    bg_color_night: builtins.str
    """"""
    border_color: builtins.str
    """"""
    border_color_night: builtins.str
    """"""
    bg_style: builtins.int
    """"""


class BiliSpaceVideo(BaseModel):
    """"""

    title: builtins.str
    """"""
    tname: builtins.str
    """"""
    duration: builtins.int
    """"""
    cover: builtins.str
    """"""
    uri: builtins.str
    """"""
    param: builtins.str
    """"""
    danmaku: builtins.str
    """"""
    play: builtins.int
    """"""
    ctime: builtins.int
    """"""
    state: builtins.bool
    """"""
    is_popular: builtins.bool
    """"""
    badges: "List[Badge]"
    """"""
    cover_right: builtins.str
    """"""
    bvid: builtins.str
    """"""
    is_steins: builtins.bool
    """"""
    is_ugcpay: builtins.bool
    """"""
    is_cooperation: builtins.bool
    """"""


class EpisodicButton(BaseModel):
    """"""

    text: builtins.str
    """"""
    uri: builtins.str
    """"""


class OrderConfig(BaseModel):
    """"""

    title: builtins.str
    """"""
    value: builtins.str
    """"""


Badge.update_forward_refs()
BiliSpaceVideo.update_forward_refs()
ArchiveReq.update_forward_refs()
OrderConfig.update_forward_refs()
ArchiveReply.update_forward_refs()
EpisodicButton.update_forward_refs()
