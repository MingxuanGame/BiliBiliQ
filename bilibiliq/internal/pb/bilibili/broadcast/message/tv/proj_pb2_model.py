"""
Generated by generator/gen_pydantic.py. DO NOT EDIT!
isort:skip_file
"""

import builtins
from typing import List, Dict, Any, Optional
from pydantic import BaseModel
from enum import Enum
from datetime import datetime


class ProjReply(BaseModel):
    """投屏"""

    cmd_type: builtins.int
    """投屏命令
    1:起播 2:快进 3:快退 4:seek播放进度 5:暂停 6:暂停恢复
    """
    mid: builtins.int
    """用户id"""
    aid: builtins.int
    """稿件id"""
    cid: builtins.int
    """视频id"""
    video_type: builtins.int
    """视频类型
    0:ugc 1:pgc 2:pugv
    """
    ep_id: builtins.int
    """单集id，pgc和pugv需要传"""
    season_id: builtins.int
    """剧集id"""
    seek_ts: builtins.int
    """seek 的位置，cmd位seek时有值，单位秒"""
    extra: builtins.str
    """其他指令对应内容"""


class LiveStatusNotify(BaseModel):
    """直播状态"""

    status: builtins.int
    """直播状态
    1:开播 2:关播 3:截流 4:截流恢复
    """
    msg: builtins.str
    """文案"""
    cid: builtins.int
    """直播房间号"""


class EsportsNotify(BaseModel):
    """"""

    cid: builtins.int
    """直播房间号"""


class PublicityNotify(BaseModel):
    """直播插卡"""

    publicity_id: builtins.int
    """插卡id"""
    room_id: builtins.int
    """直播房间号"""
    status: builtins.int
    """直播间状态
    0:未开播 1:直播中 2:轮播中
    """


class LiveSkipNotify(BaseModel):
    """直转点"""

    live_id: builtins.int
    """直播id"""


EsportsNotify.update_forward_refs()
LiveStatusNotify.update_forward_refs()
ProjReply.update_forward_refs()
PublicityNotify.update_forward_refs()
LiveSkipNotify.update_forward_refs()
