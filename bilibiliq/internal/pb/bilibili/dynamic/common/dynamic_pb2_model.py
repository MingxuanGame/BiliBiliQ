"""
Generated by generator/gen_pydantic.py. DO NOT EDIT!
isort:skip_file
"""
import builtins
from typing import List, Dict, Any, Optional
from pydantic import BaseModel
from enum import Enum
from datetime import datetime
import bilibiliq.internal.pb.bilibili.app.dynamic.v2.dynamic_pb2_model


class AtGroupType(str, Enum):
    """at分组类型"""

    AT_GROUP_TYPE_DEFAULT = 'AT_GROUP_TYPE_DEFAULT'
    """默认"""
    AT_GROUP_TYPE_RECENT = 'AT_GROUP_TYPE_RECENT'
    """最近联系"""
    AT_GROUP_TYPE_FOLLOW = 'AT_GROUP_TYPE_FOLLOW'
    """我的关注（互相关注 > 单向关注）"""
    AT_GROUP_TYPE_FANS = 'AT_GROUP_TYPE_FANS'
    """我的粉丝"""
    AT_GROUP_TYPE_OTHERS = 'AT_GROUP_TYPE_OTHERS'
    """其他"""


class AttachCardType(str, Enum):
    """"""

    ATTACH_CARD_NONE = 'ATTACH_CARD_NONE'
    """无"""
    ATTACH_CARD_GOODS = 'ATTACH_CARD_GOODS'
    """商品卡"""
    ATTACH_CARD_VOTE = 'ATTACH_CARD_VOTE'
    """投票卡"""
    ATTACH_CARD_UGC = 'ATTACH_CARD_UGC'
    """ugc视频卡"""
    ATTACH_CARD_ACTIVITY = 'ATTACH_CARD_ACTIVITY'
    """帮推"""
    ATTACH_CARD_OFFICIAL_ACTIVITY = 'ATTACH_CARD_OFFICIAL_ACTIVITY'
    """官方活动"""
    ATTACH_CARD_TOPIC = 'ATTACH_CARD_TOPIC'
    """话题活动"""
    ATTACH_CARD_OGV = 'ATTACH_CARD_OGV'
    """OGV"""
    ATTACH_CARD_AUTO_OGV = 'ATTACH_CARD_AUTO_OGV'
    """OGV自动出卡"""
    ATTACH_CARD_GAME = 'ATTACH_CARD_GAME'
    """游戏"""
    ATTACH_CARD_MANGA = 'ATTACH_CARD_MANGA'
    """漫画"""
    ATTACH_CARD_DECORATION = 'ATTACH_CARD_DECORATION'
    """装扮"""
    ATTACH_CARD_MATCH = 'ATTACH_CARD_MATCH'
    """赛事"""
    ATTACH_CARD_PUGV = 'ATTACH_CARD_PUGV'
    """课程"""
    ATTACH_CARD_RESERVE = 'ATTACH_CARD_RESERVE'
    """预约"""
    ATTACH_CARD_UP_TOPIC = 'ATTACH_CARD_UP_TOPIC'
    """up主话题活动"""


class ContentType(str, Enum):
    """"""

    CONTENT_TYPE_NONE = 'CONTENT_TYPE_NONE'
    """占位"""
    TEXT = 'TEXT'
    """文本，简单内容，biz_id就是文本"""
    AT = 'AT'
    """@用户，简单内容，biz_id是用户uid"""
    LOTTERY = 'LOTTERY'
    """抽奖，简单内容，biz_id是抽奖id"""
    VOTE = 'VOTE'
    """投票，简单内容，biz_id是投票id"""
    TOPIC = 'TOPIC'
    """话题，简单内容，biz_id是话题id"""
    GOODS = 'GOODS'
    """商品文字链，复杂内容，定义在GoodsContent结构，biz_id为空"""
    BV = 'BV'
    """bv，简单内容，biz_id是bvid，包括"BV1"等内容"""
    AV = 'AV'
    """av，简单内容，biz_id是avid"""
    EMOJI = 'EMOJI'
    """表情，简单内容，biz_id为空"""
    USER = 'USER'
    """外露用户，暂未使用"""
    CV = 'CV'
    """专栏，简单内容，biz_id是cvid"""
    VC = 'VC'
    """废弃业务，无用"""
    WEB = 'WEB'
    """网址，简单内容，biz_id是网页链接"""
    TAOBAO = 'TAOBAO'
    """淘宝内容，暂时不用"""
    MAIL = 'MAIL'
    """邮箱，简单内容，biz_id是邮箱地址"""
    OGV_SEASON = 'OGV_SEASON'
    """番剧season，简单内容，biz_id是番剧的season_id"""
    OGV_EP = 'OGV_EP'
    """番剧ep，简单内容，biz_id是番剧的epid"""


class CreateInitCheckScene(str, Enum):
    """发布页预校验场景"""

    CREATE_INIT_CHECK_SCENE_INVALID = 'CREATE_INIT_CHECK_SCENE_INVALID'
    """"""
    CREATE_INIT_CHECK_SCENE_NORMAL = 'CREATE_INIT_CHECK_SCENE_NORMAL'
    """动态页面右上角点击进入发布页"""
    CREATE_INIT_CHECK_SCENE_REPOST = 'CREATE_INIT_CHECK_SCENE_REPOST'
    """动态feed流转发、三点分享，动态详情页转发"""
    CREATE_INIT_CHECK_SCENE_SHARE = 'CREATE_INIT_CHECK_SCENE_SHARE'
    """其他页面分享到动态"""
    CREATE_INIT_CHECK_SCENE_RESERVE_SHARE = (
        'CREATE_INIT_CHECK_SCENE_RESERVE_SHARE'
    )
    """"""


class CreateScene(str, Enum):
    """发布类型（场景）"""

    CREATE_SCENE_INVALID = 'CREATE_SCENE_INVALID'
    """"""
    CREATE_SCENE_CREATE_WORD = 'CREATE_SCENE_CREATE_WORD'
    """发布纯文字动态"""
    CREATE_SCENE_CREATE_DRAW = 'CREATE_SCENE_CREATE_DRAW'
    """发布图文动态"""
    CREATE_SCENE_CREATE_DYN_VIDEO = 'CREATE_SCENE_CREATE_DYN_VIDEO'
    """发布动态视频"""
    CREATE_SCENE_REPOST = 'CREATE_SCENE_REPOST'
    """转发动态"""
    CREATE_SCENE_SHARE_BIZ = 'CREATE_SCENE_SHARE_BIZ'
    """分享业务方资源"""
    CREATE_SCENE_SHARE_PAGE = 'CREATE_SCENE_SHARE_PAGE'
    """分享网页（通用模板）"""
    CREATE_SCENE_SHARE_PROGRAM = 'CREATE_SCENE_SHARE_PROGRAM'
    """分享小程序"""
    CREATE_SCENE_REPLY_SYNC = 'CREATE_SCENE_REPLY_SYNC'
    """评论同步到动态"""
    CREATE_SCENE_REPLY_CREATE_ACTIVITY = 'CREATE_SCENE_REPLY_CREATE_ACTIVITY'
    """评论同步到动态并且发起活动"""


class ReserveSource(str, Enum):
    """"""

    RESERVE_SOURCE_NEW = 'RESERVE_SOURCE_NEW'
    """"""
    RESERVE_SOURCE_ASSOCIATED = 'RESERVE_SOURCE_ASSOCIATED'
    """"""


class UpPermissionType(str, Enum):
    """"""

    UP_PERMISSION_TYPE_NONE = 'UP_PERMISSION_TYPE_NONE'
    """占位"""
    UP_PERMISSION_TYPE_LOTTERY = 'UP_PERMISSION_TYPE_LOTTERY'
    """是否是抽奖的灰度用户，默认不是"""
    UP_PERMISSION_TYPE_CLIP_PUBLISHED = 'UP_PERMISSION_TYPE_CLIP_PUBLISHED'
    """之前是否发过小视频，默认没发过"""
    UP_PERMISSION_TYPE_UGC_ATTACH_CARD = 'UP_PERMISSION_TYPE_UGC_ATTACH_CARD'
    """是否可以添加ugc附加卡，默认不可以"""
    UP_PERMISSION_TYPE_GOODS_ATTACH_CARD = (
        'UP_PERMISSION_TYPE_GOODS_ATTACH_CARD'
    )
    """是否有权限添加商品附加卡"""
    UP_PERMISSION_TYPE_CHOOSE_COMMENT = 'UP_PERMISSION_TYPE_CHOOSE_COMMENT'
    """是否有权限自主精选评论白名单，默认没有"""
    UP_PERMISSION_TYPE_CONTROL_COMMENT = 'UP_PERMISSION_TYPE_CONTROL_COMMENT'
    """是否有权限关闭评论区，默认有"""
    UP_PERMISSION_TYPE_CONTROL_DANMU = 'UP_PERMISSION_TYPE_CONTROL_DANMU'
    """是否有权限关闭弹幕（仅对动态视频生效），默认有"""
    UP_PERMISSION_TYPE_VIDEO_RESERVE = 'UP_PERMISSION_TYPE_VIDEO_RESERVE'
    """是否可以发起稿件预约"""
    UP_PERMISSION_TYPE_LIVE_RESERVE = 'UP_PERMISSION_TYPE_LIVE_RESERVE'
    """是否可以发起直播预约"""


class AtGroup(BaseModel):
    """at分组信息"""

    group_type: AtGroupType
    """分组类型"""
    group_name: builtins.str
    """分组名称"""
    items: "List[AtItem]"
    """items"""


class AtItem(BaseModel):
    """at返回单条信息"""

    uid: builtins.int
    """mid"""
    name: builtins.str
    """昵称"""
    face: builtins.str
    """头像"""
    fans: builtins.int
    """粉丝数"""
    official_verify_type: builtins.int
    """认证信息"""


class AtListReq(BaseModel):
    """at列表-请求"""

    uid: builtins.int
    """mid"""


class AtListRsp(BaseModel):
    """at列表-响应"""

    groups: "List[AtGroup]"
    """分组信息"""


class AtSearchReq(BaseModel):
    """at搜索-请求"""

    uid: builtins.int
    """mid"""
    keyword: builtins.str
    """关键字"""


class BottomBusiness(BaseModel):
    """"""

    rid: builtins.int
    """业务方资源id"""
    type: builtins.int
    """业务方类型，定义在BottomBizType中"""


class CreateActivity(BaseModel):
    """"""

    activity_id: builtins.int
    """"""
    activity_state: builtins.int
    """"""
    is_new_activity: builtins.int
    """"""
    action: builtins.int
    """"""


class CreateAttachCard(BaseModel):
    """动态附带的附加大卡"""

    goods: Optional["CreateGoodsCard"] = None
    """商品大卡"""
    common_card: Optional["CreateCommonAttachCard"] = None
    """通用附加大卡，目前仅限定Match,Game,Ugc,Pugv,Reserve，且同时只能有一个"""


class CreateCheckResp(BaseModel):
    """发布页预校验-响应"""

    setting: Optional["PublishSetting"] = None
    """发布相关的配置项"""
    permission: Optional["UpPermission"] = None
    """用户具有的发布权限"""
    share_info: Optional["ShareChannel"] = None
    """分享渠道信息"""
    yellow_bar: Optional["PublishYellowBar"] = None
    """小黄条"""
    plus_red_dot: Optional["PlusRedDot"] = None
    """"""


class CreateCommonAttachCard(BaseModel):
    """创建动态时附带的通用附加卡详情"""

    type: AttachCardType
    """通用附加卡的类型"""
    biz_id: builtins.int
    """通用附加卡的业务id"""
    reserve_source: builtins.int
    """"""
    reserve_lottery: builtins.int
    """"""


class CreateContent(BaseModel):
    """动态-描述文字模块"""

    contents: "List[CreateContentItem]"
    """描述信息（已按高亮拆分）"""


class CreateContentItem(BaseModel):
    """文本描述"""

    raw_text: builtins.str
    """原始文案"""
    type: ContentType
    """类型"""
    biz_id: builtins.str
    """简单内容，可能为文字，BVID，AVID，uid等；复杂内容需要单独定义结构体"""
    goods: Optional["GoodsContent"] = None
    """商品内容"""


class CreateDynVideo(BaseModel):
    """"""

    relation_from: builtins.str
    """投稿平台来源，具体写什么@产品"""
    biz_from: builtins.int
    """1 — 投稿入口 + 相册选择视频 2 — 投稿入口 + 拍摄 3 — 小视频入口 + 相册选择视频 4 — 小视频入口 + 拍摄"""
    copyright: builtins.int
    """投稿类型:  2-转载、1-自制"""
    no_public: builtins.int
    """是否公开投稿 0允许公开，1不允许公开 默认 0公开"""
    no_reprint: builtins.int
    """是否允许转载字段 0允许，1不允许，默认为0    copyright = 1 自制的时候默认勾选上no_reprint=1"""
    source: builtins.str
    """转载的时候必须填写，非空字符串"""
    cover: builtins.str
    """稿件封面必须填写,不能为空 封面不支持其他源站链接 请确保 cover 是 先经过上传接口"""
    title: builtins.str
    """稿件标题"""
    tid: builtins.int
    """稿件分区ID 必须是有效的二级分区ID"""
    tag: builtins.str
    """标签 多个标签请使用英文逗号连接"""
    desc: builtins.str
    """稿件描述"""
    desc_format_id: builtins.int
    """当前输入环境下有，就输入http://domain/x/app/archive/desc/format返回的desc_format值
    如果返回null就输入默认为0， 表示当前环境（分区+投稿类型）不参与简介格式化
    """
    open_elec: builtins.int
    """稿件是否开启充电面板，1为是, 0为否"""
    dtime: builtins.int
    """定时发布的时间"""
    videos: "List[DynVideoMultiP]"
    """分P聚合字段"""
    watermark: Optional["DynVideoWatermark"] = None
    """水印信息"""
    mission_id: builtins.int
    """新增加通过tag来参加活动"""
    dynamic: builtins.str
    """新增加可以添加动态内容"""
    dynamic_extension: builtins.str
    """序列化后的extend_info扩展信息"""
    dynamic_ctrl: builtins.str
    """客户端控制字段"""
    dynamic_from: builtins.str
    """动态来源"""
    lottery_id: builtins.int
    """抽奖服务生成的ID"""
    vote: Optional["DynVideoVote"] = None
    """"""
    up_selection_reply: builtins.bool
    """精选评论开关, true为开"""
    up_close_reply: builtins.bool
    """up主关闭评论"""
    up_close_danmu: builtins.bool
    """up主关闭弹幕"""
    up_from: builtins.int
    """稿件投稿来源"""
    duration: builtins.int
    """"""


class CreateDynVideoResult(BaseModel):
    """创建动态视频的应答包（透传给客户端）"""

    aid: builtins.int
    """稿件id"""
    message: builtins.str
    """说明信息"""
    submitact_banner: Optional["DynVideoSubmitActBanner"] = None
    """推荐的活动信息"""
    push_intro: Optional["DynVideoPushIntro"] = None
    """"""


class CreateGoodsCard(BaseModel):
    """创建动态时附带的商品大卡详情"""

    item_id: List[builtins.str]
    """商品大卡中的商品id"""


class CreateOption(BaseModel):
    """动态创建时的特殊选项"""

    up_choose_comment: builtins.int
    """评论区展示UP自己精选的评论"""
    close_comment: builtins.int
    """初始评论区是关闭状态"""
    fold_exclude: builtins.int
    """该动态不会被折叠
    目前仅抽奖开奖动态不会被折叠
    """
    audit_level: builtins.int
    """审核等级，仅服务端发布时有效
    100：自动过审
    非100：默认的内网审核
    默认为0
    """
    sync_to_comment: builtins.int
    """根据转发内容同步生成一条源动态/资源的评论
    仅转发和分享时有效
    """
    video_share_info: Optional["VideoShareInfo"] = None
    """"""
    activity: Optional["CreateActivity"] = None
    """"""


class CreatePic(BaseModel):
    """创建图文动态时的图片信息"""

    img_src: builtins.str
    """上传图片URL"""
    img_width: builtins.float
    """图片宽度"""
    img_height: builtins.float
    """图片高度"""
    img_size: builtins.float
    """图片大小，单位KB"""
    img_tags: "List[CreatePicTag]"
    """"""


class CreatePicTag(BaseModel):
    """"""

    item_id: builtins.int
    """"""
    tid: builtins.int
    """"""
    mid: builtins.int
    """"""
    text: builtins.str
    """"""
    text_string: builtins.str
    """"""
    type: builtins.int
    """"""
    source_type: builtins.int
    """"""
    url: builtins.str
    """"""
    schema_url: builtins.str
    """"""
    jump_url: builtins.str
    """"""
    orientation: builtins.int
    """"""
    x: builtins.int
    """"""
    y: builtins.int
    """"""
    poi: builtins.str
    """"""


class CreateResp(BaseModel):
    """创建动态-响应"""

    dyn_id: builtins.int
    """动态id"""
    dyn_id_str: builtins.str
    """动态id str"""
    dyn_type: builtins.int
    """动态的类型"""
    dyn_rid: builtins.int
    """动态id"""
    fake_card: bilibiliq.internal.pb.bilibili.app.dynamic.v2.dynamic_pb2_model.DynamicItem
    """假卡"""
    video_result: Optional["CreateDynVideoResult"] = None
    """视频"""


class CreateTag(BaseModel):
    """动态附带的小卡"""

    lbs: Optional["ExtLbs"] = None
    """lbs小卡"""
    sdk_game: Optional["BottomBusiness"] = None
    """游戏通过SDK发布的动态需要带上游戏小卡"""
    diversion: Optional["BottomBusiness"] = None
    """必剪发布的动态需要带上必剪小卡"""


class CreateTopic(BaseModel):
    """"""

    id: builtins.int
    """"""
    name: builtins.str
    """"""


class DynIdentity(BaseModel):
    """动态的标识"""

    dyn_id: builtins.int
    """动态id"""
    revs_id: Optional["DynRevsId"] = None
    """动态反向id，通过(type+rid组合)也可以唯一标识一个动态，与dyn_id出现任意一个即可"""


class DynRevsId(BaseModel):
    """"""

    dyn_type: builtins.int
    """动态类型"""
    rid: builtins.int
    """业务id"""


class DynVideoEditor(BaseModel):
    """动态视频分P视频编辑环境上报信息"""

    cid: builtins.int
    """"""
    upfrom: builtins.int
    """"""
    filters: builtins.str
    """滤镜"""
    fonts: builtins.str
    """字体"""
    subtitles: builtins.str
    """字幕"""
    bgms: builtins.str
    """bgm"""
    stickers: builtins.str
    """3d拍摄贴纸"""
    videoup_stickers: builtins.str
    """2d投稿贴纸"""
    trans: builtins.str
    """视频转场特效"""
    makeups: builtins.str
    """编辑器的主题使用相关"""
    surgerys: builtins.str
    """整容之外科手术"""
    videofxs: builtins.str
    """美摄特定的videofx"""
    themes: builtins.str
    """编辑器的主题使用相关"""
    cooperates: builtins.str
    """拍摄之稿件合拍"""
    rhythms: builtins.str
    """拍摄之音乐卡点视频"""
    effects: builtins.str
    """mvp特效"""
    backgrounds: builtins.str
    """mvp背景"""
    videos: builtins.str
    """mvp视频"""
    sounds: builtins.str
    """mvp音效"""
    flowers: builtins.str
    """mvp花字"""
    cover_templates: builtins.str
    """mvp封面模板"""
    tts: builtins.str
    """tts"""
    openings: builtins.str
    """openings"""
    record_text: builtins.bool
    """录音题词"""
    vupers: builtins.str
    """虚拟形象上报"""
    features: builtins.str
    """"""
    bcut_features: builtins.str
    """"""
    audio_record: builtins.int
    """"""
    camera: builtins.int
    """"""
    speed: builtins.int
    """"""
    camera_rotate: builtins.int
    """"""
    screen_record: builtins.int
    """"""
    default_end: builtins.int
    """"""
    duration: builtins.int
    """"""
    pic_count: builtins.int
    """"""
    video_count: builtins.int
    """"""
    shot_duration: builtins.int
    """"""
    shot_game: builtins.str
    """"""
    highlight: builtins.bool
    """"""
    highlight_cnt: builtins.int
    """"""
    pip_count: builtins.int
    """"""


class DynVideoHotAct(BaseModel):
    """"""

    act_id: builtins.int
    """"""
    etime: builtins.int
    """"""
    id: builtins.int
    """"""
    pic: builtins.str
    """"""
    stime: builtins.int
    """"""
    title: builtins.str
    """"""
    link: builtins.str
    """"""


class DynVideoMultiP(BaseModel):
    """动态视频分P聚合字段"""

    title: builtins.str
    """分P标题"""
    filename: builtins.str
    """分P的文件名"""
    cid: builtins.int
    """"""
    editor: Optional["DynVideoEditor"] = None
    """编辑环境上报信息"""


class DynVideoPushIntro(BaseModel):
    """"""

    show: builtins.int
    """"""
    text: builtins.str
    """"""


class DynVideoSubmitActBanner(BaseModel):
    """"""

    hotact_text: builtins.str
    """"""
    hotact_url: builtins.str
    """"""
    list: "List[DynVideoHotAct]"
    """"""


class DynVideoVote(BaseModel):
    """"""

    vote_id: builtins.int
    """"""
    vote_title: builtins.str
    """"""
    top_for_reply: builtins.int
    """"""


class DynVideoWatermark(BaseModel):
    """动态视频水印信息"""

    state: builtins.int
    """水印状态 
    0-关闭 1-打开 2-预览
    """
    type: builtins.int
    """类型
    1-用户昵称类型 2-用户id类型 3-用户名在logo下面
    """
    position: builtins.int
    """位置
    1-左上 2-右上 3-左下 4-右下
    """


class ExtLbs(BaseModel):
    """"""

    address: builtins.str
    """"""
    distance: builtins.int
    """"""
    type: builtins.int
    """"""
    poi: builtins.str
    """"""
    location: Optional["LbsLoc"] = None
    """"""
    show_title: builtins.str
    """"""
    title: builtins.str
    """"""
    show_distance: builtins.str
    """"""


class GetUidByNameReq(BaseModel):
    """根据name取uid-请求"""

    names: List[builtins.str]
    """查询昵称列表"""


class GetUidByNameRsp(BaseModel):
    """根据name取uid-响应"""

    uids: Dict[builtins.str, builtins.int]
    """k:昵称 v:mid"""


class GoodsContent(BaseModel):
    """发布时附带的商品卡的详细内容"""

    source_type: builtins.int
    """商品类型
    1淘宝、2会员购
    """
    item_id: builtins.int
    """商品的id"""
    shop_id: builtins.int
    """店铺的id，兼容老版本"""


class LaunchedActivity(BaseModel):
    """UP已经创建的活动列表"""

    module_title: builtins.str
    """模块名称，示例："已创建的活动" """
    activities: "List[LaunchedActivityItem]"
    """已创建的活动列表"""
    show_more: Optional["ShowMoreLaunchedActivity"] = None
    """展示更多按钮
        已创建活动大于5个时下发
        """


class LaunchedActivityItem(BaseModel):
    """UP已经创建的活动详情"""

    activity_id: builtins.int
    """活动id"""
    activity_name: builtins.str
    """活动名称"""
    activity_state: builtins.int
    """活动是否已上线
    0未上线 1已上线
    """


class LbsLoc(BaseModel):
    """"""

    lat: builtins.float
    """经度"""
    lng: builtins.float
    """纬度"""


class MetaDataCtrl(BaseModel):
    """"""

    platform: builtins.str
    """客户端平台"""
    build: builtins.str
    """客户端build号"""
    mobi_app: builtins.str
    """客户端移动设备类型"""
    buvid: builtins.str
    """客户端buvid"""
    device: builtins.str
    """用户设备信息"""
    from_spmid: builtins.str
    """请求来源页面的spmid"""
    trace_id: builtins.str
    """请求的trace_id"""
    teenager_mode: builtins.int
    """青少年模式"""
    cold_start: builtins.int
    """0:正常 1:冷启动"""
    version: builtins.str
    """客户端版本号"""
    network: builtins.int
    """网络状态
    Unknown=0 WIFI=1 WWAN=2
    """
    ip: builtins.str
    """用户ip地址"""


class PlusRedDot(BaseModel):
    """"""

    plus_has_red_dot: builtins.int
    """"""


class Program(BaseModel):
    """小程序内容定义"""

    title: builtins.str
    """标题"""
    desc: builtins.str
    """描述文字"""
    cover: builtins.str
    """封面图"""
    target_url: builtins.str
    """跳转链接"""
    icon: builtins.str
    """小程序icon"""
    program_text: builtins.str
    """小程序名称"""
    jump_text: builtins.str
    """跳转链接文案，如：去看看"""


class PublishSetting(BaseModel):
    """发布相关的设置项"""

    min_words_to_article: builtins.int
    """提示转为专栏的最小字数，使用utf-16编码计算字符数"""
    max_words_to_article: builtins.int
    """提示转为专栏的最大字数，使用utf-16编码计算字符数"""
    upload_size: builtins.int
    """gif上传的最大值，单位：MB"""


class PublishYellowBar(BaseModel):
    """发布页小黄条"""

    text: builtins.str
    """展示文案"""
    url: builtins.str
    """跳转链接"""
    icon: builtins.str
    """展示图标"""


class RepostInitCheck(BaseModel):
    """"""

    repost_src: Optional["DynIdentity"] = None
    """"""
    share_id: builtins.str
    """"""
    share_mode: builtins.int
    """"""


class ShareChannel(BaseModel):
    """分享渠道信息"""

    share_origin: builtins.str
    """业务类型，如动态是"dynamic" """
    oid: builtins.str
    """业务资源id"""
    sid: builtins.str
    """辅助id, 非必返回字段"""
    share_channels: "List[ShareChannelItem]"
    """渠道列表"""


class ShareChannelItem(BaseModel):
    """渠道"""

    name: builtins.str
    """展示文案"""
    picture: builtins.str
    """展示图标"""
    share_channel: builtins.str
    """渠道名称"""
    reserve: Optional["ShareReserve"] = None
    """预约卡分享图信息，仅分享有预约信息的动态时存在"""


class ShareReserve(BaseModel):
    """"""

    title: builtins.str
    """标题"""
    desc: builtins.str
    """描述（时间+类型）"""
    qr_code_icon: builtins.str
    """二维码附带icon"""
    qr_code_text: builtins.str
    """二维码附带文本"""
    qr_code_url: builtins.str
    """二维码链接"""
    name: builtins.str
    """"""
    face: builtins.str
    """"""
    poster: Optional["ShareReservePoster"] = None
    """"""
    reserve_lottery: Optional["ShareReserveLottery"] = None
    """"""


class ShareReserveLottery(BaseModel):
    """"""

    icon: builtins.str
    """"""
    text: builtins.str
    """"""


class ShareReservePoster(BaseModel):
    """"""

    url: builtins.str
    """"""
    width: builtins.float
    """"""
    height: builtins.float
    """"""


class ShareResult(BaseModel):
    """"""

    share_enable: builtins.int
    """"""
    toast: builtins.str
    """"""


class ShowMoreLaunchedActivity(BaseModel):
    """UP已经创建的活动列表中的展示更多按钮详情"""

    button_text: builtins.str
    """按钮的文案"""
    jump_url: builtins.str
    """按钮的跳转链接"""


class Sketch(BaseModel):
    """通用模板的网页元内容(sketch结构)定义"""

    title: builtins.str
    """元内容标题，长度30限制"""
    desc_text: builtins.str
    """描述文字（文本内容第二行），长度233限制"""
    text: builtins.str
    """文本文字（文本内容第三行），仅限竖图通用卡片使用，长度233限制"""
    biz_id: builtins.int
    """表示业务方的id表示，对于在业务方有唯一标示的必填"""
    biz_type: builtins.int
    """业务类型，与展示时的右上角标有关，需要业务方向动态申请"""
    cover_url: builtins.str
    """封面图片链接地址，域名需要符合白名单"""
    target_url: builtins.str
    """跳转链接地址，域名需要符合白名单"""


class UpPermission(BaseModel):
    """发布相关的权限内容"""

    items: "List[UpPermissionItem]"
    """通用权限列表"""
    launched_activity: Optional["LaunchedActivity"] = None
    """已经创建的活动列表"""
    share_result: Optional["ShareResult"] = None
    """"""


class UpPermissionItem(BaseModel):
    """通用发布权限内容的详细定义"""

    type: builtins.int
    """类型，enum UpPermissionType"""
    permission: builtins.int
    """UP是否有权限
    1-有，2-限制（展示但不可点，仅预约使用）
    """
    title: builtins.str
    """按钮文案"""
    subtitle: builtins.str
    """功能开关的副标题"""
    icon: builtins.str
    """按钮图标的url地址"""
    jump_url: builtins.str
    """跳转链接，permission=1时点击按钮跳到此链接"""
    toast: builtins.str
    """错误提示，permission=2时点击按钮会弹出此提示，目前仅预约使用"""
    has_red_dot: builtins.int
    """"""


class UserCreateMeta(BaseModel):
    """用户主动发布（app/web发布）时的meta信息"""

    app_meta: Optional["MetaDataCtrl"] = None
    """用户发布客户端的meta信息"""
    loc: Optional["LbsLoc"] = None
    """用户发布时的位置信息（经纬度）"""
    repost_mode: builtins.int
    """1-发布页转发 2-立即转发"""


class VideoShareInfo(BaseModel):
    """"""

    cid: builtins.int
    """"""
    part: builtins.int
    """"""


AtListReq.update_forward_refs()
Program.update_forward_refs()
ShareReservePoster.update_forward_refs()
CreateCommonAttachCard.update_forward_refs()
CreateTopic.update_forward_refs()
DynRevsId.update_forward_refs()
ShareReserveLottery.update_forward_refs()
DynVideoEditor.update_forward_refs()
ExtLbs.update_forward_refs()
ShowMoreLaunchedActivity.update_forward_refs()
DynVideoMultiP.update_forward_refs()
AtItem.update_forward_refs()
DynVideoWatermark.update_forward_refs()
AtSearchReq.update_forward_refs()
DynVideoSubmitActBanner.update_forward_refs()
Sketch.update_forward_refs()
UserCreateMeta.update_forward_refs()
UpPermission.update_forward_refs()
CreateAttachCard.update_forward_refs()
CreateActivity.update_forward_refs()
ShareReserve.update_forward_refs()
DynVideoHotAct.update_forward_refs()
CreateGoodsCard.update_forward_refs()
ShareChannel.update_forward_refs()
PublishYellowBar.update_forward_refs()
CreateTag.update_forward_refs()
LbsLoc.update_forward_refs()
CreateDynVideoResult.update_forward_refs()
CreatePic.update_forward_refs()
LaunchedActivityItem.update_forward_refs()
CreateDynVideo.update_forward_refs()
VideoShareInfo.update_forward_refs()
GoodsContent.update_forward_refs()
CreatePicTag.update_forward_refs()
CreateResp.update_forward_refs()
DynIdentity.update_forward_refs()
PlusRedDot.update_forward_refs()
PublishSetting.update_forward_refs()
DynVideoPushIntro.update_forward_refs()
RepostInitCheck.update_forward_refs()
ShareChannelItem.update_forward_refs()
UpPermissionItem.update_forward_refs()
GetUidByNameReq.update_forward_refs()
CreateCheckResp.update_forward_refs()
AtListRsp.update_forward_refs()
DynVideoVote.update_forward_refs()
GetUidByNameRsp.update_forward_refs()
MetaDataCtrl.update_forward_refs()
AtGroup.update_forward_refs()
ShareResult.update_forward_refs()
CreateContentItem.update_forward_refs()
LaunchedActivity.update_forward_refs()
BottomBusiness.update_forward_refs()
CreateContent.update_forward_refs()
CreateOption.update_forward_refs()
