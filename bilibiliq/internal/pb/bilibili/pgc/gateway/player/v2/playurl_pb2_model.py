"""
Generated by generator/gen_pydantic.py. DO NOT EDIT!
isort:skip_file
"""

import builtins
from typing import List, Dict, Any, Optional
from pydantic import BaseModel
from enum import Enum
from datetime import datetime


class ClipType(str, Enum):

    NT_UNKNOWN = 'NT_UNKNOWN'
    """"""
    CLIP_TYPE_OP = 'CLIP_TYPE_OP'
    """"""
    CLIP_TYPE_ED = 'CLIP_TYPE_ED'
    """"""
    CLIP_TYPE_HE = 'CLIP_TYPE_HE'
    """"""
    CLIP_TYPE_MULTI_VIEW = 'CLIP_TYPE_MULTI_VIEW'
    """"""


class CodeType(str, Enum):
    """编码类型"""

    NOCODE = 'NOCODE'
    """默认"""
    CODE264 = 'CODE264'
    """H.264"""
    CODE265 = 'CODE265'
    """H.265"""


class DrmTechType(str, Enum):
    """"""

    NON = 'NON'
    """"""
    FAIR_PLAY = 'FAIR_PLAY'
    """"""


class InlineScene(str, Enum):
    """"""

    UNKNOWN = 'UNKNOWN'
    """"""
    RELATED_EP = 'RELATED_EP'
    """"""
    HE = 'HE'
    """"""
    SKIP = 'SKIP'
    """"""


class InlineType(str, Enum):
    """"""

    TYPE_UNKNOWN = 'TYPE_UNKNOWN'
    """"""
    TYPE_WHOLE = 'TYPE_WHOLE'
    """"""
    TYPE_HE_CLIP = 'TYPE_HE_CLIP'
    """"""
    TYPE_PREVIEW = 'TYPE_PREVIEW'
    """"""


class PlayErr(str, Enum):
    """错误码"""

    NoErr = 'NoErr'
    """"""
    WithMultiDeviceLoginErr = 'WithMultiDeviceLoginErr'
    """管控类型的错误码"""


class BadgeInfo(BaseModel):
    """角标信息"""

    text: builtins.str
    """角标文案"""
    bg_color: builtins.str
    """角标色值"""
    bg_color_night: builtins.str
    """角标色值-夜间模式"""
    text_color: builtins.str
    """文案色值"""
    bg_gradient_color: Optional["GradientColor"] = None
    """"""


class BottomDisplay(BaseModel):
    """"""

    title: Optional["TextInfo"] = None
    """"""
    icon: builtins.str
    """"""


class ButtonInfo(BaseModel):
    """按钮信息"""

    text: builtins.str
    """按钮文案"""
    text_color: builtins.str
    """按钮字体色值"""
    text_color_night: builtins.str
    """按钮字体色值-夜间模式"""
    bg_color: builtins.str
    """按钮背景色"""
    bg_color_night: builtins.str
    """按钮背景色-夜间模式"""
    link: builtins.str
    """按钮链接"""
    action_type: builtins.str
    """按钮动作类型"""
    badge_info: Optional["BadgeInfo"] = None
    """角标信息"""
    report: Optional["Report"] = None
    """埋点上报信息"""
    left_strikethrough_text: builtins.str
    """左侧删除线样式文案"""
    simple_text_info: Optional["TextInfo"] = None
    """缩略按钮文案信息"""
    simple_bg_color: builtins.str
    """缩略按钮背景色值"""
    simple_bg_color_night: builtins.str
    """缩略按钮字体色值-夜间模式"""
    bg_gradient_color: Optional["GradientColor"] = None
    """"""
    order_report_params: Dict[builtins.str, builtins.str]
    """"""


class CastTips(BaseModel):
    """"""

    code: builtins.int
    """"""
    message: builtins.str
    """"""


class ClipInfo(BaseModel):
    """"""

    material_no: builtins.int
    """"""
    start: builtins.int
    """"""
    end: builtins.int
    """"""
    clip_type: ClipType
    """"""
    toast_text: builtins.str
    """"""
    multi_view: Optional["MultiView"] = None
    """"""


class ContinuePlayInfo(BaseModel):
    """"""

    continue_play_ep_id: builtins.int
    """"""


class Coupon(BaseModel):
    """优惠券"""

    coupon_token: builtins.str
    """优惠券token"""
    type: builtins.int
    """优惠券类型
    1:折扣券 2:满减券 3:兑换券
    """
    value: builtins.str
    """优惠券面值"""
    use_desc: builtins.str
    """优惠券使用描述"""
    title: builtins.str
    """优惠券标题"""
    desc: builtins.str
    """优惠券描述"""
    pay_button_text: builtins.str
    """优惠券支付按钮文案"""
    pay_button_text_line_through: builtins.str
    """优惠券支付按钮删除线文案"""
    real_amount: builtins.str
    """实付金额"""
    expire_time: datetime
    """使用过期时间"""


class CouponInfo(BaseModel):
    """优惠券信息"""

    toast: Optional["CouponToast"] = None
    """提示框信息"""
    pop_win: Optional["PopWin"] = None
    """弹窗信息"""


class CouponTextInfo(BaseModel):
    """优惠券提示框文案信息"""

    positive_preview: builtins.str
    """提示框文案-播正片6分钟预览"""
    section: builtins.str
    """提示框文案-播非正片分节ep"""


class CouponToast(BaseModel):
    """优惠券提示框信息"""

    text_info: Optional["CouponTextInfo"] = None
    """提示框文案信息"""
    button: Optional["ButtonInfo"] = None
    """提示框按钮"""


class DashItem(BaseModel):
    """dash条目"""

    id: builtins.int
    """清晰度"""
    base_url: builtins.str
    """主线流"""
    backup_url: List[builtins.str]
    """备用流"""
    bandwidth: builtins.int
    """带宽"""
    codecid: builtins.int
    """编码id"""
    md5: builtins.str
    """md5"""
    size: builtins.int
    """大小"""
    frame_rate: builtins.str
    """帧率"""


class DashVideo(BaseModel):
    """dash视频流"""

    base_url: builtins.str
    """主线流"""
    backup_url: List[builtins.str]
    """备用流"""
    bandwidth: builtins.int
    """带宽"""
    codecid: builtins.int
    """编码id"""
    md5: builtins.str
    """md5"""
    size: builtins.int
    """大小"""
    audio_id: builtins.int
    """伴音质量id"""
    no_rexcode: builtins.bool
    """是否非全二压"""
    frame_rate: builtins.str
    """帧率"""
    width: builtins.int
    """宽"""
    height: builtins.int
    """高"""


class Dialog(BaseModel):
    """鉴权浮层"""

    code: builtins.int
    """鉴权限制码"""
    msg: builtins.str
    """鉴权限制信息"""
    type: builtins.str
    """浮层类型"""
    style_type: builtins.str
    """浮层样式类型"""
    config: Optional["DialogConfig"] = None
    """浮层配置"""
    title: Optional["TextInfo"] = None
    """标题"""
    subtitle: Optional["TextInfo"] = None
    """副标题"""
    image: Optional["ImageInfo"] = None
    """图片信息"""
    button: "List[ButtonInfo]"
    """按钮列表"""
    bottom_desc: Optional["ButtonInfo"] = None
    """底部描述"""
    report: Optional["Report"] = None
    """埋点上报信息"""
    count_down_sec: builtins.int
    """倒计时 秒"""
    right_bottom_desc: Optional["TextInfo"] = None
    """右下描述"""
    bottom_display: "List[BottomDisplay]"
    """"""


class DialogConfig(BaseModel):
    """鉴权浮层配置"""

    is_show_cover: builtins.bool
    """是否显示高斯模糊背景图"""
    is_orientation_enable: builtins.bool
    """是否响应转屏"""
    is_nested_scroll_enable: builtins.bool
    """是否响应上滑吸顶"""
    is_force_halfscreen_enable: builtins.bool
    """是否强制竖屏"""


class Dimension(BaseModel):
    """"""

    width: builtins.int
    """"""
    height: builtins.int
    """"""
    rotate: builtins.int
    """"""


class DolbyItem(BaseModel):
    """杜比音频信息"""

    class DolbyItem_Type(str, Enum):
        NONE = 'NONE'
        """NONE"""
        COMMON = 'COMMON'
        """普通杜比音效"""
        ATMOS = 'ATMOS'
        """全景杜比音效"""

    """NONE"""
    """普通杜比音效"""
    """全景杜比音效"""
    type: DolbyItem_Type
    """杜比类型"""
    audio: Optional["DashItem"] = None
    """音频流"""


class EndPage(BaseModel):
    """播放结束页"""

    dialog: Optional["Dialog"] = None
    """鉴权浮层"""
    hide: builtins.bool
    """播放完后是否隐藏end_page"""


class Event(BaseModel):
    """事件"""

    shake: Optional["Shake"] = None
    """震动"""


class FreyaConfig(BaseModel):
    """"""

    desc: builtins.str
    """"""
    type: builtins.int
    """"""
    issued_cnt: builtins.int
    """"""
    is_always_show: builtins.bool
    """"""
    screen_number: builtins.int
    """"""
    full_screen_number: builtins.int
    """"""


class GradientColor(BaseModel):
    """"""

    start_color: builtins.str
    """"""
    end_color: builtins.str
    """"""


class HighDefinitionTrialInfo(BaseModel):
    """"""

    trial_able: builtins.bool
    """"""
    remaining_times: builtins.int
    """"""
    start: builtins.int
    """"""
    time_length: builtins.int
    """"""
    start_toast: Optional["Toast"] = None
    """"""
    end_toast: Optional["Toast"] = None
    """"""
    report: Optional["Report"] = None
    """"""
    quality_open_tip_btn: Optional["ButtonInfo"] = None
    """"""
    no_longer_trial_btn: Optional["ButtonInfo"] = None
    """"""


class ImageInfo(BaseModel):
    """图片信息"""

    url: builtins.str
    """图片链接"""


class MultiView(BaseModel):
    """"""

    button_material: builtins.str
    """"""
    ep_id: builtins.int
    """"""
    cid: builtins.int
    """"""
    avid: builtins.int
    """"""


class PayTip(BaseModel):
    """"""

    title: builtins.str
    """"""
    url: builtins.str
    """"""
    icon: builtins.str
    """"""
    type: builtins.int
    """"""
    show_type: builtins.int
    """"""
    img: builtins.str
    """"""
    bg_day_color: builtins.str
    """"""
    bg_night_color: builtins.str
    """"""
    bg_line_color: builtins.str
    """"""
    bg_night_line_color: builtins.str
    """"""
    text_color: builtins.str
    """"""
    text_night_color: builtins.str
    """"""
    view_start_time: builtins.int
    """"""
    button: "List[ButtonInfo]"
    """"""
    url_open_type: builtins.int
    """"""
    report: Optional["Report"] = None
    """"""
    angle_style: builtins.int
    """"""
    report_type: builtins.int
    """"""
    order_report_params: Dict[builtins.str, builtins.str]
    """"""


class PlayAbilityConf(BaseModel):
    """禁用功能配置"""

    background_play_disable: builtins.bool
    """后台播放"""
    flip_disable: builtins.bool
    """镜像反转"""
    cast_disable: builtins.bool
    """投屏"""
    feedback_disable: builtins.bool
    """反馈"""
    subtitle_disable: builtins.bool
    """字幕"""
    playback_rate_disable: builtins.bool
    """播放速度"""
    time_up_disable: builtins.bool
    """定时停止"""
    playback_mode_disable: builtins.bool
    """播放方式"""
    scale_mode_disable: builtins.bool
    """画面尺寸"""
    like_disable: builtins.bool
    """赞"""
    dislike_disable: builtins.bool
    """踩"""
    coin_disable: builtins.bool
    """投币"""
    elec_disable: builtins.bool
    """充电"""
    share_disable: builtins.bool
    """分享"""
    screen_shot_disable: builtins.bool
    """截图"""
    lock_screen_disable: builtins.bool
    """锁定"""
    recommend_disable: builtins.bool
    """相关推荐"""
    playback_speed_disable: builtins.bool
    """播放速度"""
    definition_disable: builtins.bool
    """清晰度"""
    selections_disable: builtins.bool
    """选集"""
    next_disable: builtins.bool
    """下一集"""
    edit_dm_disable: builtins.bool
    """编辑弹幕"""
    small_window_disable: builtins.bool
    """小窗"""
    shake_disable: builtins.bool
    """震动"""
    outer_dm_disable: builtins.bool
    """外层面板弹幕设置"""
    inner_dm_disable: builtins.bool
    """三点内弹幕设置"""
    freya_enter_disable: builtins.bool
    """一起看入口"""
    dolby_disable: builtins.bool
    """杜比音效"""
    freya_full_disable: builtins.bool
    """全屏一起看入口"""
    skip_oped_switch_disable: builtins.bool
    """"""
    record_screen_disable: builtins.bool
    """"""
    color_optimize_disable: builtins.bool
    """"""


class PlayAbilityExtConf(BaseModel):
    """云控扩展配置信息"""

    allow_close_subtitle: builtins.bool
    """自定义配置扩展信息"""
    freya_config: Optional["FreyaConfig"] = None
    """"""
    cast_tips: Optional["CastTips"] = None
    """"""


class PlayViewBusinessInfo(BaseModel):
    """其他业务信息"""

    is_preview: builtins.bool
    """当前视频是否是预览"""
    bp: builtins.bool
    """用户是否承包过"""
    marlin_token: builtins.str
    """drm使用"""
    playback_speed_color: builtins.str
    """倍速动效色值"""
    continue_play_info: Optional["ContinuePlayInfo"] = None
    """"""
    clip_info: "List[ClipInfo]"
    """"""
    inline_type: InlineType
    """"""
    ep_whole_duration: builtins.int
    """"""
    dimension: Optional["Dimension"] = None
    """"""
    quality_ext_map: Dict[builtins.int, Optional["QualityExtInfo"]]
    """"""
    exp_map: Dict[builtins.str, builtins.int]
    """"""
    drm_tech_type: DrmTechType
    """"""


class PlayViewReply(BaseModel):
    """播放页信息-响应"""

    video_info: Optional["VideoInfo"] = None
    """视频流信息"""
    play_conf: Optional["PlayAbilityConf"] = None
    """播放控件用户自定义配置"""
    business: Optional["PlayViewBusinessInfo"] = None
    """业务需要的其他信息"""
    event: Optional["Event"] = None
    """事件"""
    view_info: Optional["ViewInfo"] = None
    """展示信息"""
    play_ext_conf: Optional["PlayAbilityExtConf"] = None
    """自定义配置扩展信息"""


class PlayViewReq(BaseModel):
    """播放页信息-请求"""

    epid: builtins.int
    """剧集epid"""
    cid: builtins.int
    """视频cid"""
    qn: builtins.int
    """清晰度"""
    fnver: builtins.int
    """视频流版本"""
    fnval: builtins.int
    """视频流格式"""
    download: builtins.int
    """下载模式
    0:播放 1:flv下载 2:dash下载
    """
    force_host: builtins.int
    """流url强制是用域名
    0:允许使用ip 1:使用http 2:使用https
    """
    fourk: builtins.bool
    """是否4K"""
    spmid: builtins.str
    """当前页spm"""
    from_spmid: builtins.str
    """上一页spm"""
    teenagers_mode: builtins.int
    """青少年模式"""
    prefer_codec_type: CodeType
    """视频编码"""
    is_preview: builtins.bool
    """是否强制请求预览视频"""
    room_id: builtins.int
    """一起看房间id"""
    is_need_view_info: builtins.bool
    """是否需要展示信息"""
    scene_control: Optional["SceneControl"] = None
    """场景控制"""
    inline_scene: InlineScene
    """"""
    material_no: builtins.int
    """"""


class PopWin(BaseModel):
    """弹窗信息"""

    title: builtins.str
    """弹窗标题 老字段"""
    coupon: "List[Coupon]"
    """优惠券列表"""
    button: "List[ButtonInfo]"
    """弹窗按钮列表"""
    bottom_text: builtins.str
    """底部文案 老字段"""
    pop_title: Optional["TextInfo"] = None
    """弹窗标题 新字段"""
    subtitle: Optional["TextInfo"] = None
    """弹窗副标题"""
    bottom_desc: Optional["ButtonInfo"] = None
    """底部描述 新字段"""
    cover: builtins.str
    """弹窗小图"""
    pop_type: builtins.str
    """弹窗类型"""


class PromptBar(BaseModel):
    """"""

    title: Optional["TextInfo"] = None
    """"""
    sub_title: Optional["TextInfo"] = None
    """"""
    sub_title_icon: builtins.str
    """"""
    bg_image: builtins.str
    """"""
    bg_gradient_color: Optional["GradientColor"] = None
    """"""
    button: "List[ButtonInfo]"
    """"""
    report: Optional["Report"] = None
    """"""
    full_screen_ip_icon: builtins.str
    """"""
    full_screen_bg_gradient_color: Optional["GradientColor"] = None
    """"""


class QualityExtInfo(BaseModel):
    """"""

    trial_support: builtins.bool
    """"""


class Report(BaseModel):
    """埋点上报信息"""

    show_event_id: builtins.str
    """曝光事件"""
    click_event_id: builtins.str
    """点击事件"""
    extends: builtins.str
    """埋点透传参数"""


class ResponseUrl(BaseModel):
    """分段流条目"""

    order: builtins.int
    """分段序号"""
    length: builtins.int
    """分段时长"""
    size: builtins.int
    """分段大小"""
    url: builtins.str
    """主线流"""
    backup_url: List[builtins.str]
    """备用流"""
    md5: builtins.str
    """md5"""


class SceneControl(BaseModel):
    """场景控制"""

    fav_playlist: builtins.bool
    """是否收藏播单"""
    small_window: builtins.bool
    """是否小窗"""
    pip: builtins.bool
    """是否画中画"""
    was_he_inline: builtins.bool
    """"""
    is_need_trial: builtins.bool
    """"""


class SegmentVideo(BaseModel):
    """分段视频流"""

    segment: "List[ResponseUrl]"
    """分段视频流列表"""


class Shake(BaseModel):
    """震动"""

    file: builtins.str
    """文件地址"""


class Stream(BaseModel):
    """视频流信息"""

    info: Optional["StreamInfo"] = None
    """元数据"""
    dash_video: Optional["DashVideo"] = None
    """dash流"""
    segment_video: Optional["SegmentVideo"] = None
    """分段流"""


class StreamInfo(BaseModel):
    """流媒体元数据"""

    quality: builtins.int
    """清晰度"""
    format: builtins.str
    """格式"""
    description: builtins.str
    """格式描述"""
    err_code: builtins.int
    """错误码"""
    limit: Optional["StreamLimit"] = None
    """不满足条件信息"""
    need_vip: builtins.bool
    """是否需要vip"""
    need_login: builtins.bool
    """是否需要登录"""
    intact: builtins.bool
    """是否完整"""
    no_rexcode: builtins.bool
    """是否非全二压"""
    attribute: builtins.int
    """清晰度属性位"""
    new_description: builtins.str
    """新版格式描述"""
    display_desc: builtins.str
    """格式文字"""
    superscript: builtins.str
    """新版格式描述备注"""


class StreamLimit(BaseModel):
    """清晰度不满足条件信息"""

    title: builtins.str
    """标题"""
    uri: builtins.str
    """跳转地址"""
    msg: builtins.str
    """提示信息"""


class TextInfo(BaseModel):
    """文案信息"""

    text: builtins.str
    """文案"""
    textColor: builtins.str
    """字体色值"""
    textColorNight: builtins.str
    """字体色值-夜间模式"""


class Toast(BaseModel):
    """toast"""

    text: builtins.str
    """toast文案 老字段"""
    button: Optional["ButtonInfo"] = None
    """toast按钮"""
    show_style_type: builtins.int
    """显示样式类型"""
    icon: builtins.str
    """图标"""
    toast_text: Optional["TextInfo"] = None
    """toast文案 新字段"""
    report: Optional["Report"] = None
    """埋点上报信息"""
    order_report_params: Dict[builtins.str, builtins.str]
    """"""


class VideoInfo(BaseModel):
    """视频url信息"""

    quality: builtins.int
    """视频清晰度"""
    format: builtins.str
    """视频格式"""
    timelength: builtins.int
    """视频时长"""
    video_codecid: builtins.int
    """视频编码id"""
    stream_list: "List[Stream]"
    """视频流"""
    dash_audio: "List[DashItem]"
    """伴音流"""
    dolby: Optional["DolbyItem"] = None
    """杜比伴音流"""


class ViewInfo(BaseModel):
    """展示信息"""

    dialog: Optional["Dialog"] = None
    """鉴权浮层"""
    toast: Optional["Toast"] = None
    """toast"""
    coupon_info: Optional["CouponInfo"] = None
    """优惠券信息"""
    demand_no_pay_epids: List[builtins.int]
    """未购买的超前点播ep列表"""
    end_page: Optional["EndPage"] = None
    """播放结束页"""
    exp_config: Dict[builtins.str, builtins.bool]
    """"""
    pop_win: Optional["PopWin"] = None
    """弹窗"""
    try_watch_prompt_bar: Optional["PromptBar"] = None
    """"""
    pay_tip: Optional["PayTip"] = None
    """"""
    high_definition_trial_info: Optional["HighDefinitionTrialInfo"] = None
    """"""
    ext_dialog: Dict[builtins.str, Optional["Dialog"]]
    """"""


Report.update_forward_refs()
CastTips.update_forward_refs()
DialogConfig.update_forward_refs()
PlayViewBusinessInfo.update_forward_refs()
TextInfo.update_forward_refs()
Toast.update_forward_refs()
Stream.update_forward_refs()
PayTip.update_forward_refs()
DashVideo.update_forward_refs()
PlayAbilityExtConf.update_forward_refs()
Event.update_forward_refs()
Dialog.update_forward_refs()
ResponseUrl.update_forward_refs()
StreamLimit.update_forward_refs()
ButtonInfo.update_forward_refs()
VideoInfo.update_forward_refs()
CouponToast.update_forward_refs()
ClipInfo.update_forward_refs()
ImageInfo.update_forward_refs()
Coupon.update_forward_refs()
BadgeInfo.update_forward_refs()
EndPage.update_forward_refs()
SceneControl.update_forward_refs()
PromptBar.update_forward_refs()
BottomDisplay.update_forward_refs()
QualityExtInfo.update_forward_refs()
PlayAbilityConf.update_forward_refs()
PlayViewReply.update_forward_refs()
DolbyItem.update_forward_refs()
PlayViewReq.update_forward_refs()
CouponTextInfo.update_forward_refs()
SegmentVideo.update_forward_refs()
Dimension.update_forward_refs()
ContinuePlayInfo.update_forward_refs()
StreamInfo.update_forward_refs()
PopWin.update_forward_refs()
ViewInfo.update_forward_refs()
Shake.update_forward_refs()
GradientColor.update_forward_refs()
MultiView.update_forward_refs()
CouponInfo.update_forward_refs()
DashItem.update_forward_refs()
FreyaConfig.update_forward_refs()
HighDefinitionTrialInfo.update_forward_refs()
