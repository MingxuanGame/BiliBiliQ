"""
Generated by generator/gen_pydantic.py. DO NOT EDIT!
isort:skip_file
"""
import builtins
from typing import List, Dict, Any, Optional
from pydantic import BaseModel
from enum import Enum
from datetime import datetime


class ActivitySeasonStatus(str, Enum):
    """"""

    StatusNone = 'StatusNone'
    """"""
    StatusLive = 'StatusLive'
    """"""
    StatusView = 'StatusView'
    """"""


class OrderType(str, Enum):
    """"""

    TypeNone = 'TypeNone'
    """"""
    TypeOrderActivity = 'TypeOrderActivity'
    """"""
    TypeFavSeason = 'TypeFavSeason'
    """"""
    TypeClick = 'TypeClick'
    """"""


class ReplyEmoteMetaSize(str, Enum):
    """"""

    EMOTE_META_SIZE_UNSPECIFIED = 'EMOTE_META_SIZE_UNSPECIFIED'
    """"""
    EMOTE_META_SIZE_SMALL = 'EMOTE_META_SIZE_SMALL'
    """"""
    EMOTE_META_SIZE_BIG = 'EMOTE_META_SIZE_BIG'
    """"""


class AccInfo(BaseModel):
    """"""

    mid: builtins.int
    """"""
    name: builtins.str
    """"""
    sex: builtins.str
    """"""
    face: builtins.str
    """"""
    sign: builtins.str
    """"""


class AccountCard(BaseModel):
    """"""

    mid: builtins.str
    """"""
    name: builtins.str
    """"""
    sex: builtins.str
    """"""
    rank: builtins.str
    """"""
    face: builtins.str
    """"""
    spacesta: builtins.int
    """"""
    sign: builtins.str
    """"""
    level_info: Optional["CardLevelInfo"] = None
    """"""
    pendant: Optional["PendantInfo"] = None
    """"""
    nameplate: Optional["NameplateInfo"] = None
    """"""
    official: Optional["OfficialInfo"] = None
    """"""
    official_verify: Optional["OfficialVerify"] = None
    """"""
    vip: Optional["CardVip"] = None
    """"""
    fans: builtins.int
    """"""
    friend: builtins.int
    """"""
    attention: builtins.int
    """"""


class ActivityArchiveReply(BaseModel):
    """"""

    arc: Optional["Arc"] = None
    """"""
    bvid: builtins.str
    """"""
    pages: "List[Page]"
    """"""
    req_user: Optional["ReqUser"] = None
    """"""
    staff: "List[Staff]"
    """"""
    right_relate: Optional["OperationRelate"] = None
    """"""
    bottom_relate: Optional["OperationRelate"] = None
    """"""


class ActivityArchiveReq(BaseModel):
    """"""

    aid: builtins.int
    """"""
    bvid: builtins.str
    """"""
    activity_key: builtins.str
    """"""


class ActivityEpisode(BaseModel):
    """"""

    id: builtins.int
    """"""
    aid: builtins.int
    """"""
    bvid: builtins.str
    """"""
    cid: builtins.int
    """"""
    title: builtins.str
    """"""
    cover: builtins.str
    """"""
    author: Optional["Author"] = None
    """"""
    rights: Optional["Rights"] = None
    """"""


class ActivityGame(BaseModel):
    """"""

    iframes: "List[ActivityGameIframe]"
    """"""
    disclaimer: builtins.str
    """"""
    disclaimer_url: builtins.str
    """"""


class ActivityGameIframe(BaseModel):
    """"""

    url: builtins.str
    """"""
    height: builtins.int
    """"""


class ActivityLive(BaseModel):
    """"""

    room_id: builtins.int
    """"""
    now_time: builtins.int
    """"""
    start_time: builtins.int
    """"""
    end_time: builtins.int
    """"""
    hover_pic: builtins.str
    """"""
    hover_jump_url: builtins.str
    """"""
    break_cycle: builtins.int
    """"""
    timeline: "List[LiveTimeline]"
    """"""
    operation_relate: Optional["OperationRelate"] = None
    """"""
    reply_type: builtins.int
    """"""
    reply_id: builtins.int
    """"""
    hover_pic_close: builtins.str
    """"""
    gift_disclaimer: builtins.str
    """"""


class ActivityLiveTimeInfoReply(BaseModel):
    """"""

    now_time: builtins.int
    """"""
    start_time: builtins.int
    """"""
    end_time: builtins.int
    """"""
    timeline: "List[LiveTimeline]"
    """"""


class ActivityLiveTimeInfoReq(BaseModel):
    """"""

    activity_key: builtins.str
    """"""


class ActivitySeasonReply(BaseModel):
    """"""

    status: ActivitySeasonStatus
    """"""
    title: builtins.str
    """"""
    live: Optional["ActivityLive"] = None
    """"""
    subscribe: Optional["ActivitySubscribe"] = None
    """"""
    game: Optional["ActivityGame"] = None
    """"""
    view: Optional["ActivityView"] = None
    """"""
    theme: Optional["ActivityTheme"] = None
    """"""


class ActivitySeasonReq(BaseModel):
    """"""

    aid: builtins.int
    """"""
    bvid: builtins.str
    """"""
    activity_key: builtins.str
    """"""


class ActivitySeasonSection(BaseModel):
    """"""

    id: builtins.int
    """"""
    title: builtins.str
    """"""
    type: builtins.int
    """"""
    episodes: "List[ActivityEpisode]"
    """"""


class ActivitySubscribe(BaseModel):
    """"""

    status: builtins.bool
    """"""
    title: builtins.str
    """"""
    button_title: builtins.str
    """"""
    button_selected_title: builtins.str
    """"""
    season_stat_view: builtins.int
    """"""
    season_stat_danmaku: builtins.int
    """"""
    order_type: OrderType
    """"""
    reserve_activity_param: Optional["ReserveActivityParam"] = None
    """"""
    fav_season_param: Optional["FavSeasonParam"] = None
    """"""
    jump_URL_param: Optional["JumpURLParam"] = None
    """"""


class ActivityTheme(BaseModel):
    """"""

    base_color: builtins.str
    """"""
    loading_bg_color: builtins.str
    """"""
    operated_bg_color: builtins.str
    """"""
    default_element_color: builtins.str
    """"""
    hover_element_color: builtins.str
    """"""
    selected_element_color: builtins.str
    """"""
    base_font_color: builtins.str
    """"""
    info_font_color: builtins.str
    """"""
    mask_bg_color: builtins.str
    """"""
    page_bg_color: builtins.str
    """"""
    center_logo_img: builtins.str
    """"""
    page_bg_img: builtins.str
    """"""
    decorations2233_img: builtins.str
    """"""
    main_banner_bg_img: builtins.str
    """"""
    main_banner_title_img: builtins.str
    """"""
    like_animation_img: builtins.str
    """"""
    combo_like_img: builtins.str
    """"""
    combo_coin_img: builtins.str
    """"""
    combo_fav_img: builtins.str
    """"""
    arrow_btn_img: builtins.str
    """"""
    share_icon_bg_img: builtins.str
    """"""
    live_list_location_img: builtins.str
    """"""
    live_list_location_img_active: builtins.str
    """"""
    player_loading_img: builtins.str
    """"""
    share_img: builtins.str
    """"""
    kv_color: Dict[builtins.str, builtins.str]
    """"""


class ActivityView(BaseModel):
    """"""

    arc: Optional["Arc"] = None
    """"""
    bvid: builtins.str
    """"""
    pages: "List[Page]"
    """"""
    staff: "List[Staff]"
    """"""
    req_user: Optional["ReqUser"] = None
    """"""
    right_relate: Optional["OperationRelate"] = None
    """"""
    bottom_relate: Optional["OperationRelate"] = None
    """"""
    sections: "List[ActivitySeasonSection]"
    """"""


class Arc(BaseModel):
    """"""

    aid: builtins.int
    """"""
    videos: builtins.int
    """"""
    type_id: builtins.int
    """"""
    type_name: builtins.str
    """"""
    copyright: builtins.int
    """"""
    pic: builtins.str
    """"""
    title: builtins.str
    """"""
    pubdate: builtins.int
    """"""
    ctime: builtins.int
    """"""
    desc: builtins.str
    """"""
    state: builtins.int
    """"""
    access: builtins.int
    """"""
    attribute: builtins.int
    """"""
    tag: builtins.str
    """"""
    tags: List[builtins.str]
    """"""
    duration: builtins.int
    """"""
    mission_id: builtins.int
    """"""
    order_id: builtins.int
    """"""
    redirect_url: builtins.str
    """"""
    forward: builtins.int
    """"""
    rights: Optional["Rights"] = None
    """"""
    author: Optional["Author"] = None
    """"""
    stat: Optional["Stat"] = None
    """"""
    report_result: builtins.str
    """"""
    dynamic: builtins.str
    """"""
    first_cid: builtins.int
    """"""
    dimension: Optional["Dimension"] = None
    """"""
    staff_info: "List[StaffInfo]"
    """"""
    season_id: builtins.int
    """"""
    desc_v2: "List[DescV2]"
    """"""
    is_chargeable_season: builtins.bool
    """"""
    is_blooper: builtins.bool
    """"""


class Author(BaseModel):
    """"""

    mid: builtins.int
    """"""
    name: builtins.str
    """"""
    face: builtins.str
    """"""


class Card(BaseModel):
    """"""

    card: Optional["AccountCard"] = None
    """"""
    space: Optional["Space"] = None
    """"""
    following: builtins.bool
    """"""
    archive_count: builtins.int
    """"""
    article_count: builtins.int
    """"""
    follower: builtins.int
    """"""


class CardLevelInfo(BaseModel):
    """"""

    cur: builtins.int
    """"""
    min: builtins.int
    """"""
    now_exp: builtins.int
    """"""
    next_exp: builtins.int
    """"""


class CardVip(BaseModel):
    """"""

    type: builtins.int
    """"""
    due_remark: builtins.str
    """"""
    access_status: builtins.int
    """"""
    vip_status: builtins.int
    """"""
    vip_status_warn: builtins.str
    """"""
    theme_type: builtins.int
    """"""


class ClickActivitySeasonReq(BaseModel):
    order_type: OrderType
    """"""
    reserve_activity_param: Optional["ReserveActivityParam"] = None
    """"""
    fav_season_param: Optional["FavSeasonParam"] = None
    """"""
    jump_URL_param: Optional["JumpURLParam"] = None
    """"""
    spmid: builtins.str
    """"""
    action: builtins.int
    """"""


class DescV2(BaseModel):
    """"""

    raw_text: builtins.str
    """"""
    type: builtins.int
    """"""
    biz_id: builtins.int
    """"""


class Dimension(BaseModel):
    """"""

    width: builtins.int
    """"""
    height: builtins.int
    """"""
    rotate: builtins.int
    """"""


class FavSeasonParam(BaseModel):
    """"""

    season_id: builtins.int
    """"""


class HotReply(BaseModel):
    """"""

    page: Optional["ReplyPage"] = None
    """"""
    replies: "List[Reply]"
    """"""


class JumpURLParam(BaseModel):
    """"""

    jump_url: builtins.str
    """"""


class LiveTimeline(BaseModel):
    """"""

    name: builtins.str
    """"""
    start_time: builtins.int
    """"""
    end_time: builtins.int
    """"""
    cover: builtins.str
    """"""
    subtitle: builtins.str
    """"""
    h5_cover: builtins.str
    """"""


class NameplateInfo(BaseModel):
    """"""

    nid: builtins.int
    """"""
    name: builtins.str
    """"""
    image: builtins.str
    """"""
    image_small: builtins.str
    """"""
    level: builtins.str
    """"""
    condition: builtins.str
    """"""


class NoReply(BaseModel):
    """"""


class OfficialInfo(BaseModel):
    """"""

    role: builtins.int
    """"""
    title: builtins.str
    """"""
    desc: builtins.str
    """"""


class OfficialVerify(BaseModel):
    """"""

    type: builtins.int
    """"""
    desc: builtins.str
    """"""


class OperationRelate(BaseModel):
    """"""

    title: builtins.str
    """"""
    relate_item: "List[RelateItem]"
    """"""
    ai_relate_item: "List[Relate]"
    """"""


class Page(BaseModel):
    """"""

    cid: builtins.int
    """"""
    page: builtins.int
    """"""
    part: builtins.str
    """"""
    duration: builtins.int
    """"""
    vid: builtins.str
    """"""
    desc: builtins.str
    """"""
    weblink: builtins.str
    """"""
    dimension: Optional["Dimension"] = None
    """"""


class PendantInfo(BaseModel):
    """"""

    pid: builtins.int
    """"""
    name: builtins.str
    """"""
    image: builtins.str
    """"""
    expire: builtins.int
    """"""


class ReasonStyle(BaseModel):
    """"""

    text: builtins.str
    """"""


class Relate(BaseModel):
    """"""

    arc: Optional["Arc"] = None
    """"""
    bvid: builtins.str
    """"""
    season_type: builtins.int
    """"""


class RelateItem(BaseModel):
    """"""

    url: builtins.str
    """"""
    cover: builtins.str
    """"""


class Relation(BaseModel):
    """"""

    attribute: builtins.int
    """"""
    special: builtins.int
    """"""


class Reply(BaseModel):
    """"""

    rpid: builtins.int
    """"""
    oid: builtins.int
    """"""
    type: builtins.int
    """"""
    mid: builtins.int
    """"""
    root: builtins.int
    """"""
    parent: builtins.int
    """"""
    dialog: builtins.int
    """"""
    count: builtins.int
    """"""
    rcount: builtins.int
    """"""
    floor: builtins.int
    """"""
    state: builtins.int
    """"""
    fans_grade: builtins.int
    """"""
    attr: builtins.int
    """"""
    ctime: builtins.int
    """"""
    rpid_str: builtins.str
    """"""
    root_str: builtins.str
    """"""
    parent_str: builtins.str
    """"""
    dialog_str: builtins.str
    """"""
    like: builtins.int
    """"""
    hate: builtins.int
    """"""
    action: builtins.int
    """"""
    member: Optional["ReplyMember"] = None
    """"""
    content: Optional["ReplyContent"] = None
    """"""
    replies: "List[Reply]"
    """"""
    assist: builtins.int
    """"""
    folder: Optional["ReplyFolder"] = None
    """"""
    up_action: Optional["ReplyUpAction"] = None
    """"""
    label: Optional["ReplyLabel"] = None
    """"""
    raw_input: builtins.str
    """"""
    show_follow: builtins.bool
    """"""


class ReplyContent(BaseModel):
    """"""

    rp_id: builtins.int
    """"""
    message: builtins.str
    """"""
    vote: Optional["ReplyVote"] = None
    """"""
    topics: List[builtins.str]
    """"""
    ip: builtins.int
    """"""
    plat: builtins.int
    """"""
    device: builtins.str
    """"""
    version: builtins.str
    """"""
    members: "List[ReplyMemberInfo]"
    """"""
    emote: Dict[builtins.str, Optional["ReplyEmote"]]
    """"""


class ReplyEmote(BaseModel):
    """"""

    id: builtins.int
    """"""
    package_id: builtins.int
    """"""
    state: builtins.int
    """"""
    type: builtins.int
    """"""
    attr: builtins.int
    """"""
    text: builtins.str
    """"""
    url: builtins.str
    """"""
    meta: Optional["ReplyEmoteMeta"] = None
    """"""
    ctime: builtins.int
    """"""
    mtime: builtins.int
    """"""


class ReplyEmoteMeta(BaseModel):
    """"""

    size: ReplyEmoteMetaSize
    """"""


class ReplyFansDetail(BaseModel):
    """"""

    uid: builtins.int
    """"""
    medal_id: builtins.int
    """"""
    medal_name: builtins.str
    """"""
    score: builtins.int
    """"""
    level: builtins.int
    """"""
    intimacy: builtins.int
    """"""
    status: builtins.int
    """"""
    received: builtins.int
    """"""


class ReplyFolder(BaseModel):
    """"""

    has_folded: builtins.bool
    """"""
    is_folded: builtins.bool
    """"""
    rule: builtins.str
    """"""


class ReplyLabel(BaseModel):
    """"""

    rpid: builtins.int
    """"""
    content: builtins.str
    """"""
    text_color: builtins.str
    """"""
    text_color_night_mode: builtins.str
    """"""
    bg_color: builtins.str
    """"""
    bg_color_night_mode: builtins.str
    """"""
    link: builtins.str
    """"""
    position: builtins.str
    """"""


class ReplyLevelInfo(BaseModel):
    """"""

    cur: builtins.int
    """"""
    min: builtins.int
    """"""
    now_exp: builtins.int
    """"""
    next_exp: builtins.int
    """"""


class ReplyMember(BaseModel):
    """"""

    info: Optional["ReplyMemberInfo"] = None
    """"""
    fans_detail: Optional["ReplyFansDetail"] = None
    """"""
    following: builtins.int
    """"""


class ReplyMemberInfo(BaseModel):
    """"""

    role: builtins.int
    """"""
    mid: builtins.str
    """"""
    name: builtins.str
    """"""
    sex: builtins.str
    """"""
    sign: builtins.str
    """"""
    avatar: builtins.str
    """"""
    rank: builtins.str
    """"""
    display_rank: builtins.str
    """"""
    level_info: Optional["ReplyLevelInfo"] = None
    """"""
    pendant: Optional["PendantInfo"] = None
    """"""
    nameplate: Optional["NameplateInfo"] = None
    """"""
    official_verify: Optional["OfficialVerify"] = None
    """"""
    vip: Optional["ReplyVip"] = None
    """"""


class ReplyPage(BaseModel):
    """"""

    acount: builtins.int
    """"""
    count: builtins.int
    """"""
    num: builtins.int
    """"""
    size: builtins.int
    """"""


class ReplyUpAction(BaseModel):
    """"""

    like: builtins.bool
    """"""
    reply: builtins.bool
    """"""


class ReplyVip(BaseModel):
    """"""

    type: builtins.int
    """"""
    due_date: builtins.int
    """"""
    due_remark: builtins.str
    """"""
    access_status: builtins.int
    """"""
    vip_status: builtins.int
    """"""
    vip_status_warn: builtins.str
    """"""
    theme_type: builtins.int
    """"""
    label: Optional["VipLabel"] = None
    """"""


class ReplyVote(BaseModel):
    """"""

    id: builtins.int
    """"""
    title: builtins.str
    """"""
    cnt: builtins.int
    """"""
    desc: builtins.str
    """"""
    deleted: builtins.bool
    """"""


class ReqUser(BaseModel):
    """"""

    favorite: builtins.bool
    """"""
    like: builtins.bool
    """"""
    dislike: builtins.bool
    """"""
    multiply: builtins.int
    """"""


class ReserveActivityParam(BaseModel):
    """"""

    reserve_id: builtins.int
    """"""
    type: builtins.str
    """"""
    oid: builtins.int
    """"""


class Rights(BaseModel):
    """"""

    bp: builtins.int
    """"""
    elec: builtins.int
    """"""
    download: builtins.int
    """"""
    movie: builtins.int
    """"""
    pay: builtins.int
    """"""
    hd5: builtins.int
    """"""
    no_reprint: builtins.int
    """"""
    autoplay: builtins.int
    """"""
    ugc_pay: builtins.int
    """"""
    is_cooperation: builtins.int
    """"""
    ugc_pay_preview: builtins.int
    """"""
    arc_pay: builtins.int
    """"""
    free_watch: builtins.int
    """"""


class SeasonEpisode(BaseModel):
    """"""

    season_id: builtins.int
    """"""
    section_id: builtins.int
    """"""
    id: builtins.int
    """"""
    aid: builtins.int
    """"""
    cid: builtins.int
    """"""
    title: builtins.str
    """"""
    attribute: builtins.int
    """"""
    arc: Optional["Arc"] = None
    """"""
    page: Optional["Page"] = None
    """"""
    bvid: builtins.str
    """"""
    badge_style: Optional["ReasonStyle"] = None
    """"""


class SeasonSection(BaseModel):
    """"""

    season_id: builtins.int
    """"""
    id: builtins.int
    """"""
    title: builtins.str
    """"""
    type: builtins.int
    """"""
    episodes: "List[SeasonEpisode]"
    """"""


class SeasonStat(BaseModel):
    """"""

    season_id: builtins.int
    """"""
    view: builtins.int
    """"""
    danmaku: builtins.int
    """"""
    reply: builtins.int
    """"""
    fav: builtins.int
    """"""
    coin: builtins.int
    """"""
    share: builtins.int
    """"""
    now_rank: builtins.int
    """"""
    his_rank: builtins.int
    """"""
    like: builtins.int
    """"""


class Space(BaseModel):
    """"""

    s_img: builtins.str
    """"""
    l_img: builtins.str
    """"""


class Staff(BaseModel):
    """"""

    mid: builtins.int
    """"""
    title: builtins.str
    """"""
    name: builtins.str
    """"""
    face: builtins.str
    """"""
    vip: Optional["VipInfo"] = None
    """"""
    official: Optional["OfficialInfo"] = None
    """"""
    follower: builtins.int
    """"""
    label_style: builtins.int
    """"""
    relation: Optional["Relation"] = None
    """"""


class StaffInfo(BaseModel):
    """"""

    mid: builtins.int
    """"""
    title: builtins.str
    """"""


class Stat(BaseModel):
    """"""

    aid: builtins.int
    """"""
    view: builtins.int
    """"""
    danmaku: builtins.int
    """"""
    reply: builtins.int
    """"""
    fav: builtins.int
    """"""
    coin: builtins.int
    """"""
    share: builtins.int
    """"""
    now_rank: builtins.int
    """"""
    his_rank: builtins.int
    """"""
    like: builtins.int
    """"""
    dislike: builtins.int
    """"""
    evaluation: builtins.str
    """"""
    argue_msg: builtins.str
    """"""


class Subtitle(BaseModel):
    """"""

    allow_submit: builtins.bool
    """"""
    list: "List[SubtitleItem]"
    """"""


class SubtitleItem(BaseModel):
    """"""

    id: builtins.int
    """"""
    lan: builtins.str
    """"""
    lan_doc: builtins.str
    """"""
    is_lock: builtins.bool
    """"""
    author_mid: builtins.int
    """"""
    subtitle_url: builtins.str
    """"""
    author: Optional["AccInfo"] = None
    """"""


class Tag(BaseModel):
    """"""

    id: builtins.int
    """"""
    name: builtins.str
    """"""
    cover: builtins.str
    """"""
    head_cover: builtins.str
    """"""
    content: builtins.str
    """"""
    short_content: builtins.str
    """"""
    type: builtins.int
    """"""
    state: builtins.int
    """"""
    ctime: builtins.int
    """"""
    tag_count: Optional["TagCount"] = None
    """"""
    is_atten: builtins.int
    """"""
    likes: builtins.int
    """"""
    hates: builtins.int
    """"""
    attribute: builtins.int
    """"""
    liked: builtins.int
    """"""
    hated: builtins.int
    """"""


class TagCount(BaseModel):
    """"""

    view: builtins.int
    """"""
    use: builtins.int
    """"""
    atten: builtins.int
    """"""


class UGCPayAsset(BaseModel):
    """"""

    price: builtins.int
    """"""
    platform_price: Dict[builtins.str, builtins.int]
    """"""


class UGCSeason(BaseModel):
    """"""

    id: builtins.int
    """"""
    title: builtins.str
    """"""
    cover: builtins.str
    """"""
    mid: builtins.int
    """"""
    intro: builtins.str
    """"""
    sign_state: builtins.int
    """"""
    attribute: builtins.int
    """"""
    sections: "List[SeasonSection]"
    """"""
    stat: Optional["SeasonStat"] = None
    """"""
    ep_count: builtins.int
    """"""
    season_type: builtins.int
    """"""
    is_pay_season: builtins.bool
    """"""


class View(BaseModel):
    """"""

    arc: Optional["Arc"] = None
    """"""
    no_cache: builtins.bool
    """"""
    pages: "List[Page]"
    """"""
    subtitle: Optional["Subtitle"] = None
    """"""
    asset: Optional["UGCPayAsset"] = None
    """"""
    label: Optional["ViewLabel"] = None
    """"""
    staff: "List[Staff]"
    """"""
    ugc_season: Optional["UGCSeason"] = None
    """"""
    stein_guide_cid: builtins.int
    """"""


class ViewDetailReply(BaseModel):
    """"""

    view: Optional["View"] = None
    """"""
    card: Optional["Card"] = None
    """"""
    tags: "List[Tag]"
    """"""
    reply: Optional["HotReply"] = None
    """"""
    related: "List[Arc]"
    """"""


class ViewDetailReq(BaseModel):
    """"""

    aid: builtins.int
    """"""
    bvid: builtins.str
    """"""


class ViewLabel(BaseModel):
    """"""

    type: builtins.int
    """"""


class VipInfo(BaseModel):
    """"""

    type: builtins.int
    """"""
    status: builtins.int
    """"""
    vip_pay_type: builtins.int
    """"""
    theme_type: builtins.int
    """"""


class VipLabel(BaseModel):
    """"""

    path: builtins.str
    """"""


ActivityGame.update_forward_refs()
VipLabel.update_forward_refs()
DescV2.update_forward_refs()
UGCSeason.update_forward_refs()
ReplyVote.update_forward_refs()
ReqUser.update_forward_refs()
NameplateInfo.update_forward_refs()
FavSeasonParam.update_forward_refs()
Page.update_forward_refs()
ActivityLiveTimeInfoReq.update_forward_refs()
ReplyContent.update_forward_refs()
ReplyUpAction.update_forward_refs()
JumpURLParam.update_forward_refs()
ReplyVip.update_forward_refs()
SubtitleItem.update_forward_refs()
Relate.update_forward_refs()
CardLevelInfo.update_forward_refs()
ActivityLive.update_forward_refs()
ReplyMember.update_forward_refs()
AccountCard.update_forward_refs()
ActivitySeasonReq.update_forward_refs()
Stat.update_forward_refs()
Reply.update_forward_refs()
ActivityGameIframe.update_forward_refs()
ActivityTheme.update_forward_refs()
ClickActivitySeasonReq.update_forward_refs()
SeasonStat.update_forward_refs()
ViewDetailReply.update_forward_refs()
VipInfo.update_forward_refs()
ReplyMemberInfo.update_forward_refs()
ViewLabel.update_forward_refs()
ActivityLiveTimeInfoReply.update_forward_refs()
PendantInfo.update_forward_refs()
ActivitySeasonSection.update_forward_refs()
SeasonSection.update_forward_refs()
ActivitySubscribe.update_forward_refs()
ActivityArchiveReply.update_forward_refs()
UGCPayAsset.update_forward_refs()
OperationRelate.update_forward_refs()
View.update_forward_refs()
ReplyFolder.update_forward_refs()
ReplyEmoteMeta.update_forward_refs()
ViewDetailReq.update_forward_refs()
HotReply.update_forward_refs()
TagCount.update_forward_refs()
Staff.update_forward_refs()
SeasonEpisode.update_forward_refs()
StaffInfo.update_forward_refs()
AccInfo.update_forward_refs()
ReasonStyle.update_forward_refs()
ActivitySeasonReply.update_forward_refs()
ReplyFansDetail.update_forward_refs()
Subtitle.update_forward_refs()
ReserveActivityParam.update_forward_refs()
ReplyPage.update_forward_refs()
RelateItem.update_forward_refs()
ReplyLevelInfo.update_forward_refs()
Tag.update_forward_refs()
Dimension.update_forward_refs()
Author.update_forward_refs()
OfficialInfo.update_forward_refs()
ActivityArchiveReq.update_forward_refs()
Card.update_forward_refs()
Relation.update_forward_refs()
Rights.update_forward_refs()
ReplyLabel.update_forward_refs()
LiveTimeline.update_forward_refs()
OfficialVerify.update_forward_refs()
ReplyEmote.update_forward_refs()
ActivityEpisode.update_forward_refs()
CardVip.update_forward_refs()
Space.update_forward_refs()
Arc.update_forward_refs()
NoReply.update_forward_refs()
ActivityView.update_forward_refs()
