"""
Generated by generator/gen_pydantic.py. DO NOT EDIT!
isort:skip_file
"""
import builtins
from typing import List, Dict, Any, Optional
from pydantic import BaseModel
from enum import Enum
from datetime import datetime


class TopPhotoType(str, Enum):
    """"""

    UNKNOWN = 'UNKNOWN'
    """"""
    PIC = 'PIC'
    """"""
    ARCHIVE = 'ARCHIVE'
    """"""


class NoReply(BaseModel):
    """"""


class OfficialReply(BaseModel):
    """"""

    id: builtins.int
    """"""
    uid: builtins.int
    """"""
    name: builtins.str
    """"""
    icon: builtins.str
    """"""
    scheme: builtins.str
    """"""
    rcmd: builtins.str
    """"""
    ios_url: builtins.str
    """"""
    android_url: builtins.str
    """"""
    button: builtins.str
    """"""
    deleted: builtins.str
    """"""
    mtime: builtins.int
    """"""


class OfficialRequest(BaseModel):
    """"""

    mid: builtins.int
    """"""


class PhotoMall(BaseModel):
    """"""

    id: builtins.int
    """"""
    name: builtins.str
    """"""
    img: builtins.str
    """"""
    night_img: builtins.str
    """"""
    is_activated: builtins.int
    """"""


class PhotoMallListReply(BaseModel):
    """"""

    list: "List[PhotoMall]"
    """"""


class PhotoMallListReq(BaseModel):
    """"""

    mobiapp: builtins.str
    """"""
    mid: builtins.int
    """"""
    device: builtins.str
    """"""


class PrivacyReply(BaseModel):
    """"""

    privacy: Dict[builtins.str, builtins.int]
    """"""


class PrivacyRequest(BaseModel):
    """"""

    mid: builtins.int
    """"""


class SetTopPhotoReq(BaseModel):
    """"""

    mobiapp: builtins.str
    """"""
    i_d: builtins.int
    """"""
    mid: builtins.int
    """"""
    type: builtins.int
    """"""


class SpaceSettingReply(BaseModel):
    """"""

    channel: builtins.int
    """"""
    fav_video: builtins.int
    """"""
    coins_video: builtins.int
    """"""
    likes_video: builtins.int
    """"""
    bangumi: builtins.int
    """"""
    played_game: builtins.int
    """"""
    groups: builtins.int
    """"""
    comic: builtins.int
    """"""
    b_bq: builtins.int
    """"""
    dress_up: builtins.int
    """"""
    disable_following: builtins.int
    """"""
    live_playback: builtins.int
    """"""
    close_space_medal: builtins.int
    """"""
    only_show_wearing: builtins.int
    """"""
    disable_show_school: builtins.int
    """"""
    disable_show_nft: builtins.int
    """"""


class SpaceSettingReq(BaseModel):
    """"""

    mid: builtins.int
    """"""


class TopPhoto(BaseModel):
    """"""

    img_url: builtins.str
    """"""
    night_img_url: builtins.str
    """"""
    sid: builtins.int
    """"""


class TopPhotoArc(BaseModel):
    """"""

    show: builtins.bool
    """"""
    aid: builtins.int
    """"""
    pic: builtins.str
    """"""


class TopPhotoArcCancelReq(BaseModel):
    """"""

    mid: builtins.int
    """"""


class TopPhotoReply(BaseModel):
    """"""

    top_photo: Optional["TopPhoto"] = None
    """"""
    top_photo_arc: Optional["TopPhotoArc"] = None
    """"""


class TopPhotoReq(BaseModel):
    """"""

    mobiapp: builtins.str
    """"""
    mid: builtins.int
    """"""
    build: builtins.int
    """"""
    device: builtins.str
    """"""
    login_mid: builtins.int
    """"""


class UpActivityTabReq(BaseModel):
    """"""

    mid: builtins.int
    """"""
    state: builtins.int
    """"""
    tab_cont: builtins.int
    """"""
    tab_name: builtins.str
    """"""


class UpActivityTabResp(BaseModel):
    """"""

    success: builtins.bool
    """"""


class UpRcmdBlackListReply(BaseModel):
    """"""


class UserTabReply(BaseModel):
    """"""

    tab_type: builtins.int
    """"""
    mid: builtins.int
    """"""
    tab_name: builtins.str
    """"""
    tab_order: builtins.int
    """"""
    tab_cont: builtins.int
    """"""
    is_default: builtins.int
    """"""
    h5_link: builtins.str
    """"""


class UserTabReq(BaseModel):
    """"""

    mid: builtins.int
    """"""
    plat: builtins.int
    """"""
    build: builtins.int
    """"""


class WhitelistAddReply(BaseModel):
    """"""

    add_ok: builtins.bool
    """"""


class WhitelistAddReq(BaseModel):
    """"""

    mid: builtins.int
    """"""
    stime: builtins.int
    """"""
    etime: builtins.int
    """"""


class WhitelistReply(BaseModel):
    """"""

    is_white: builtins.bool
    """"""


class WhitelistReq(BaseModel):
    """"""

    mid: builtins.int
    """"""


class WhitelistUpReply(BaseModel):
    """"""

    up_ok: builtins.bool
    """"""


class WhitelistValidTimeReply(BaseModel):
    """"""

    is_white: builtins.bool
    """"""
    stime: builtins.int
    """"""
    etime: builtins.int
    """"""


TopPhotoArcCancelReq.update_forward_refs()
WhitelistReply.update_forward_refs()
SpaceSettingReply.update_forward_refs()
UserTabReply.update_forward_refs()
OfficialReply.update_forward_refs()
TopPhoto.update_forward_refs()
OfficialRequest.update_forward_refs()
TopPhotoReq.update_forward_refs()
UserTabReq.update_forward_refs()
WhitelistAddReply.update_forward_refs()
PhotoMall.update_forward_refs()
TopPhotoArc.update_forward_refs()
SetTopPhotoReq.update_forward_refs()
PrivacyRequest.update_forward_refs()
PhotoMallListReply.update_forward_refs()
PrivacyReply.update_forward_refs()
SpaceSettingReq.update_forward_refs()
TopPhotoReply.update_forward_refs()
WhitelistAddReq.update_forward_refs()
WhitelistReq.update_forward_refs()
PhotoMallListReq.update_forward_refs()
WhitelistUpReply.update_forward_refs()
UpRcmdBlackListReply.update_forward_refs()
UpActivityTabResp.update_forward_refs()
WhitelistValidTimeReply.update_forward_refs()
UpActivityTabReq.update_forward_refs()
NoReply.update_forward_refs()
